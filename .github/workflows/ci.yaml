name: Run Galaxy Tool Linting and Tests
on:
  schedule:
    # Run at midnight every monday
    - cron: '0 0 * * 1'
env:
  GALAXY_RELEASE: release_20.01
jobs:
  setup:
    name: Cache planemo setup
    if: github.repository == 'galaxyproteomics/tools-galaxyp'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64' # (x64 or x86)
    - name: setup planemo
      run: 'git clone --recursive --depth 1 https://github.com/galaxyproject/planemo && python -m pip install --pre planemo/ && rm -rf planemo'
    - name: fake a planemo run to update cache
      run: 'touch tool.xml && PIP_QUIET=1 planemo test --galaxy_python_version ${{ matrix.python-version }} --no_conda_auto_init --galaxy_branch $GALAXY_RELEASE'
    - name: Cache .cache/pip
      uses: actions/cache@v1
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_${{ matrix.python-version }}_${{ env.GALAXY_RELEASE }}
  test:
    name: Lint & test tools
    # This job runs on Linux
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        chunk: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39]
        python-version: [3.7]
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
    # checkout the repository to master
    # and use it as the current working directory
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64' # (x64 or x86)
    - name: Cache .cache/pip
      uses: actions/cache@v1
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_${{ matrix.python-version }}_${{ env.GALAXY_RELEASE }}
    - name: setup planemo
      run: 'git clone --recursive --depth 1 https://github.com/galaxyproject/planemo && python -m pip install --pre planemo/ && rm -rf planemo'
    - name: planemo ci_find_tools
      run: 'planemo ci_find_repos --chunk_count 40 --chunk ${{ matrix.chunk  }} --exclude test_repositories --exclude packages --exclude deprecated --exclude_from .tt_skip --exclude_from .tt_biocontainer_skip --output tool.list'
    - name: set tool list
      id: tools
      run: echo "::set-output name=tool_list::$(tr '\n' ' ' < tool.list)"
    - name: show repo list
      run: 'cat tool.list'
    - name: planemo test tools biocontainers
      run: |
           while read -r DIR; do
               if [[ "$DIR" =~ ^data_managers.* ]]; then
                   TESTPATH=$(planemo ci_find_tools "$DIR")
               else
                   TESTPATH="$DIR"
               fi
               PIP_QUIET=1 planemo test --database_connection postgresql://postgres:postgres@localhost:5432/galaxy --no_conda_auto_init --galaxy_branch $GALAXY_RELEASE --biocontainers --galaxy_python_version ${{ matrix.python-version }} --test_output_json "$DIR"/tool_test_output.json "$TESTPATH" || true
               docker system prune --all --force --volumes || true
           done < tool.list
    - name: Merge tool_test_output.json files
      run: |
        find . -name tool_test_output.json -exec sh -c 'planemo merge_test_reports "$@" tool_test_output.json' sh {} +
    - name: Create tool_test_output.html
      run: 'planemo test_reports tool_test_output.json --test_output tool_test_output.html'
    - name: Copy artifacts into place
      run: mkdir upload && mv tool_test_output.json tool_test_output.html upload
    - uses: actions/upload-artifact@v2
      with:
        name: 'Tool test output ${{ matrix.chunk  }}'
        path: upload

  combine_outputs:
    name: Combine chunked test results
    needs: test
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - uses: actions/setup-python@v1
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: setup planemo
      run: 'git clone --recursive --depth 1 https://github.com/galaxyproject/planemo && python -m pip install --pre planemo/ && rm -rf planemo'
    - name: combine outputs
      run: |
        find artifacts -name tool_test_output.json -exec sh -c 'planemo merge_test_reports "$@" tool_test_output.json' sh {} +
    - name: Create tool_test_output.html
      run: 'planemo test_reports tool_test_output.json --test_output tool_test_output.html'
    - name: Copy artifacts into place
      run: mkdir upload && mv tool_test_output.json tool_test_output.html upload
    - uses: actions/upload-artifact@v2
      with:
        name: 'All tool test results'
        path: upload
    - name: Check status of combined outputs
      run: |
        if jq '.["tests"][]["data"]["status"]' upload/tool_test_output.json | grep -v "success"; then
            echo "Unsuccessful tests found, inspect the 'All tool test results' artifact for details."
            exit 1
        fi
