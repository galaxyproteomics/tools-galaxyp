<tool id="MQoutputfilter" name="Filter lines by keywords or numerical value" version="0.1.0">
    <description>Filter a file by keywords or numerical values</description>
    <requirements>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
        python $__tool_directory__/filter_kw_val.py
        -i "$input1,$header"
        -o "$output1"
        --trash_file "$trash_file"

        ## Keywords
        #for $i, $key in enumerate($keyword)
            #if $key.k.kw != "None"
                #if $key.k.kw == "text"
                    --kw "$key.k.txt" "$key.ncol" "$key.match"
                #else if $key.k.kw == "file"
                    --kw_file "$key.k.file" "$key.ncol" "$key.match"
                #end if
            #end if
        #end for

        ## Number of proteins
        #for $i, $val in enumerate($value)
            #if $val.v.val != "None"
                --value
                #if $val.v.val == "Equal"
                    $val.v.equal "$value.ncol" "="
                #else if $val.v.val == "Higher"
                    $val.v.higher "$val.ncol" ">"
                #else if $val.v.val == "Equal or higher"
                    $val.v.equal_higher "$val.ncol" ">="
                #else if $val.v.val == "Lower"
                    $val.v.lower "$val.ncol" "<"
                #else
                    $val.v.equal_lower "$val.ncol" "<="
                #end if
            #end if
        #end for

    ]]></command>
    <inputs>
        <param type="data" name="input1" format="txt,tabular" label="Input file" help="Input file is a tab-delimited file containing proteomics identification and/or quantitative results" />
        <param name="header" type="boolean" checked="true" truevalue="true" falsevalue="false" label="Does your input file contain header?" />
        <repeat name="keyword" title="Filter by keywords" >
            <param name="ncol" type="text" value="c1" label="Please specify the column number of the input file on which you want to apply the filter" help='For example, fill in "c1" if the keywords you want to filter out are listed in the first column' />
            <param type="boolean" name="match" truevalue="True" label="Would you like to search for exact match?" help='Choosing "Yes" will only filter out exact match (i.e. case sensitive), see below for more details' />
            <conditional name="k" >
                <param argument="--kw" type="select" label="Filter by keyword" >
                    <option value="None" selected="True">---</option>
                    <option value="text">Enter keywords (copy/paste)</option>
                    <option value="file">Choose a file containing keywords</option>
                </param>
                <when value="None" />
                <when value="text" >
                    <param name="txt" type="text" label="Copy/paste keywords to be removed" >
                        <sanitizer>
                        <valid initial="string.printable">
                            <remove value="&apos;"/>
                        </valid>
                        <mapping initial="none">
                            <add source="&apos;" target="__sq__"/>
                        </mapping>
                        </sanitizer>
                    </param>
                </when>
                <when value="file" >
                    <param name="file" type="data" format="txt,tabular" label="Choose a file containing keywords" />
                </when>
            </conditional>
        </repeat>

        <repeat name="value" title="Filter by value" >
            <param name="ncol" type="text" value="c1" label="Please specify the column number of the input file on which you want to apply the filter" help='For example, fill in "c1" if the keywords you want to filter out are listed in the first column' />
            <conditional name="v" >
                <param argument="--val" type="select" label="Filter by value" >
                    <option value="None">---</option>
                    <option value="Equal">=</option>
                    <option value="Higher">&gt;</option>
                    <option value="Equal or higher">&gt;=</option>
                    <option value="Lower">&lt;</option>
                    <option value="Equal or lower">&lt;=</option>
                </param>
                <when value="None" >
                </when>
                <when value="Equal" >
                    <param name="equal" type="float" value="" label="Value" />
                </when>
                <when value="Higher" >
                    <param type="float" name="higher" value="" label="Value" />
                </when>
                <when value="Equal or higher" >
                    <param type="float" name="equal_higher" value="" label="Value" />
                </when>
                <when value="Lower" >
                    <param type="float" name="lower" value="" label="Value" />
                </when>
                <when value="Equal or lower" >
                    <param type="float" name="equal_lower" value="" label="Value" />
                </when>
            </conditional>
        </repeat>

    </inputs>
    <outputs>
        <data name="output1" format="tabular" label="${tool.name} on ${input1.name}" />
        <data name="trash_file" format="tabular" label="${tool.name} on ${input1.name} - Removed lines" />
    </outputs>
    <tests>
        <test>
            <param name="input1" value="UnipIDs.txt" />
            <param name="header" value="false" />
            <repeat name="keyword">
                <param name="match" value="false" />
                <conditional name="k">
                    <param name="kw" value="text" />
                    <param name="txt" value="A" />
                    <param name="ncol" value="c3" />
                </conditional>
            </repeat>
            <repeat name="value">
                <conditional name="v">
                    <param name="val" value="Equal or higher"/>
                    <param name="equal_higher" value="1.0" />
                    <param name="ncol" value="c2" />
                </conditional>
            </repeat>
            <output name="output1" file="filter_keywords_values_output.txt" />
            <output name="trash_file" file="filter_keywords_values_removed.txt" />
        </test>
    </tests>
    <help><![CDATA[
This tool allows to remove unneeded data (e.g. contaminants, non-significant values) from a proteomics results file (e.g. MaxQuant or Proline output).

**For each row, if there are more than one protein IDs/protein names/gene names, only the first one will be considered in the output**

**Filter the file by keywords**

Several options can be used. For each option, you can fill in the field or upload a file which contains the keywords.

- If you choose to fill in the field, the keywords should be separated by ":", for example: A8K2U0:Q5TA79:O43175

- If you choose to upload a file in a text format in which each line is a keyword, for example:

REV

TRYP_PIG

ALDOA_RABBIT

**The line that contains these keywords will be eliminated from input file.**

**Keywords search can be applied by performing either exact match or partial one by using the following option**

- If you choose **Yes**, only the fields that contains exactly the same content will be removed.

- If you choose **No**, all the fields containing the keyword will be removed.

For example:

**Yes** option (exact match) selected using the keyword "kinase": only lines which contain exactly "kinase" is removed.

**No** option (partial match) for "kinase": not only lines which contain "kinase" but also lines with "alpha-kinase" (and so  on) are removed.

**Filter the file by values**

You can choose to use one or more options (e.g. to filter out peptides of low intensity value, by q-value, etc.).

* For each option, you can choose between "=", ">", ">=", "<" and "<=", then enter the value to filter and specify the column to apply that option.

**Output**

The tool will produce 2 output files.

* A text file containing the resulting filtered input file.

* A text file containing the rows removed from the input file.

-----

.. class:: infomark

**Authors**

T.P. Lien Nguyen, Florence Combes, Yves Vandenbrouck - CEA, INSERM, CNRS, Grenoble-Alpes University, BIG Institute, FR

Sandra Dérozier, Olivier Rué, Christophe Caron, Valentin Loux - INRA, Paris-Saclay University, MAIAGE Unit, Migale Bioinformatics platform, FR

This work has been partially funded through the French National Agency for Research (ANR) IFB project.

Contact support@proteore.org for any questions or concerns about the Galaxy implementation of this tool.

    ]]></help>
    <citations>
    </citations>
</tool>
