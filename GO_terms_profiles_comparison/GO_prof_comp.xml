<tool id="go_terms_profiles_comparison" name="GO terms profiles comparison " version="2019.03.07">
    <description>(Human, Mouse, Rat)[clusterProfiler]</description>
    <requirements>
        <requirement type="package" version="3.4.1">R</requirement>
        <requirement type="package" version="3.5.0">bioconductor-org.hs.eg.db</requirement>
        <requirement type="package" version="3.5.0">bioconductor-org.mm.eg.db</requirement>
        <requirement type="package" version="3.5.0">bioconductor-org.rn.eg.db</requirement>
        <requirement type="package" version="3.2.0">bioconductor-dose</requirement>
        <requirement type="package" version="3.4.4">bioconductor-clusterprofiler</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[

        Rscript $__tool_directory__/GO_prof_comp.R
            --inputtype1="$input1.ids1"
            --inputtype2="$input2.ids2"
            
            #if $input1.ids1 == "text"
                --input1="$input1.txt1"
            #else if $input1.ids1 == "file"
                --input1="$input1.file1"
                --header1="$input1.header1"
                --column1="$input1.ncol1"
            #end if

            --list_name1="$list_name1"

            #if $input2.ids2 == "text"
                --input2="$input2.txt2"
            #else if $input2.ids2 == "file"
                --input2="$input2.file2"
                --header2="$input2.header2"
                --column2="$input2.ncol2"
            #end if

            --list_name2="$list_name2"
            --org="$species"
            --ont="$ontology"
            --lev="$level"

            > $log

    ]]></command>
    <inputs>
        <conditional name="input1" >
            <param name="ids1" type="select" label="Enter your Gene ID list" help="Copy/paste or from a file (e.g. table)" >
                <option value="text">Copy/paste your IDs</option>
                <option value="file" selected="true">Input file containing your IDs</option>
            </param>
            <when value="text" >
                <param name="txt1" type="text" label="Copy/paste your identifiers" help='IDs must be separated by spaces into the form field, for example: 2810 7534' >
                    <sanitizer>
                        <valid initial="string.printable">
                            <remove value="&apos;"/>
                        </valid>
                        <mapping initial="none">
                            <add source="&apos;" target="__sq__"/>
                        </mapping>
                    </sanitizer>
                </param>
            </when>
            <when value="file" >
                <param name="file1" type="data" format="txt,tabular" label="Choose a file that contains your list of IDs" help="" />
                <param name="header1" type="boolean" checked="true" truevalue="true" falsevalue="false" label="Does file contain header?" />
                <param name="ncol1" type="text" value="c1" label="Column number of IDs" help='For example, fill in "c1" if it is the first column, "c2" if it is the second column and so on'>
                    <validator type="regex" message="Please enter a column number, for example: 'c1' for the first column">[c]{0,1}[0-9]+</validator>
                </param>
            </when>
        </conditional>
        <param name="list_name1" type="text" label="name of your first ids list" value="list1" optional="false">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
                <mapping initial="none">
                    <add source="&apos;" target="__sq__"/>
                </mapping>
            </sanitizer>
            <validator type="regex" message="Please enter a list name">[a-zA-Z0-9._-]+</validator>
        </param>
        <conditional name="input2" >
            <param name="ids2" type="select" label="Enter your Gene ID list" help="Copy/paste or from a file (e.g. table)" >
                <option value="text">Copy/paste your IDs</option>
                <option value="file" selected="true">Input file containing your IDs</option>
            </param>
            <when value="text" >
                <param name="txt2" type="text" label="Copy/paste your identifiers" help='IDs must be separated by spaces into the form field, for example: 2810 7534' >
                    <sanitizer>
                        <valid initial="string.printable">
                            <remove value="&apos;"/>
                        </valid>
                        <mapping initial="none">
                            <add source="&apos;" target="__sq__"/>
                        </mapping>
                    </sanitizer>
                </param>
            </when>
            <when value="file" >
                <param name="file2" type="data" format="txt,tabular" label="Choose a file that contains your list of IDs" help="" />
                <param name="header2" type="boolean" checked="true" truevalue="true" falsevalue="false" label="Does file contain header?" />
                <param name="ncol2" type="text" value="c1" label="Column number of IDs" help='For example, fill in "c1" if it is the first column, "c2" if it is the second column and so on'>
                    <validator type="regex" message="Please enter a column number, for example: 'c1' for the first column">[c]{0,1}[0-9]+</validator>
                </param>
            </when>
        </conditional> 
        <param name="list_name2" type="text" label="name of your second ids list" value="list2">
            <sanitizer>
                <valid initial="string.printable">
                    <remove value="&apos;"/>
                </valid>
                <mapping initial="none">
                    <add source="&apos;" target="__sq__"/>
                </mapping>
            </sanitizer>
            <validator type="regex" message="Please enter a list name">[a-zA-Z0-9._-]+</validator>
        </param>
        <param name="species" type="select" label="Species" >
            <option value="org.Hs.eg.db">Human (Homo sapiens) </option>
            <option value="org.Mm.eg.db">Mouse (Mus musculus) </option>
            <option value="org.Rn.eg.db">Rat (Rattus norvegicus)</option>
        </param>
		<param name="ontology" type="select" display="checkboxes" multiple="true" label="Select GO terms category" optional="false" >
            <option value="CC">Cellular Component</option>
            <option value="BP">Biological Process</option>
            <option value="MF">Molecular Function</option>
        </param>
        <param name="level" type="select" label="Ontology level (the higher this number, the deeper the GO level)">
            <option value="1">1</option>
            <option value="2" >2</option>
            <option value="3" selected="True">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
        </param>
    </inputs>
    <outputs>
        <data name="log" format="txt" label="GO terms profiles comparison" />
        <collection type="list" label="GO terms profiles comparison files" name="text_output">
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.tsv)" ext="tsv"/>
        </collection>
        <collection type="list" label="GO terms profiles diagram outputs" name="graph_output" >
	        <discover_datasets pattern="(?P&lt;designation&gt;.+.png)" ext="png" />
	    </collection>
    </outputs>
    <tests>
        <test>
            <conditional name="input1">
                <param name="ids1" value="file"/>
                <param name="file1" value="Bred.tsv"/>
                <param name="header1" value="true"/>
                <param name="ncol1" value="c1"/>
            </conditional>
            <conditional name="input2">
                <param name="ids2" value="file"/>
                <param name="file2" value="Muc.tsv"/>
                <param name="header2" value="true"/>
                <param name="ncol2" value="c1"/>
            </conditional>
            <param name="list_name1" value="Bred"/>
            <param name="list_name2" value="Muc"/>
            <param name="species" value="org.Hs.eg.db"/>
            <param name="ontology" value="BP"/>
            <param name="level" value="3"/>
            <output name="log" file="log.txt" />
            <output_collection name="text_output">
                <element name="GO_profiles_comp_BP.tsv" file="GO_profiles_comp_BP.tsv" ftype="tsv"/>
            </output_collection>
            <output_collection name="graph_output">
                <element name="GO_profiles_comp_BP.png" file="GO_profiles_comp_BP.png" ftype="png"/>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[

**Description**

This tool is based on R package clusterProfiler and allows to perform GO terms classification and enrichment analyses on gene/protein sets (e.g. given a set of genes that are up-regulated under certain conditions, an enrichment analysis will find which GO terms are over-represented (or under-represented) using annotations for that gene/protein set).

Given a list of IDs, this tool: 

(i)  performs gene classification based on GO distribution at a specific level,
  
(ii) calculates GO categories enrichment (over- or under-representation) for the IDs of the input list, compared to a background. User has the possibility to use background corresponding to the whole organism or to a user-defined list. In this latter case, we recommand to use the "Build tissue-specific expression dataset" ProteoRE tool to create this list according to your need. 

-----

**Input**

Two modes are allowed: either by supplying a tabular file (.csv, .tsv, .txt, .tab) including your IDs (identifiers) or by copy/pasting your IDs (separated by a space).

"Select type/source of IDs": only entrez gene ID (e.g : 4151, 7412) or Uniprot accession number (e.g. P31946) are allowed. If your list is not in this form, please use the ID_Converter tool of ProteoRE. 

-----

**Parameters**

"Species": the three supported species are Homo sapiens, Mus musculus and Rattus norvegicus 

"Perform GO categories representation analysis?": classify genes based on their projection at a specific level of the GO corpus (see parameter below), and provides functions (set to "Yes")

"Ontology level (the higher this number, the deeper the GO level)": correspond to the level of GO hierarchy (from 1 to 3) (set to level "2" by default). In general the higher the level, the more semantically specific the term is.

"Perform GO categories enrichment analysis?": calculate enrichment test for GO terms based on hypergeometric distribution (set to "Yes")

"P-value cut off": P-value threshold value for the declaration of significance (default is < 0.01)

"Q-value cut off": to prevent high false discovery rate (FDR) in multiple testing, Q-values (adjusted P-values) are estimated for FDR control. (default is < 0.05)

"Define your own background IDs?": by default the whole genome/proteome is used as a reference background to compute the enrichment. As this reference set should normally only include genes/proteins that were monitored during your analysis, this option allows to provide your own background; this could be for instance, the total number of genes/proteins expressed in the tissue/sample under study. 

If you want to use your own background, click on the "Yes" button. Your gene/protein set must be a list of Entrez gene ID or Uniprot accession number (otherwise, use the ID-Converter tool of ProteoRE). Select the file containing your list of ID (as background), then specify the column number which contains IDs and the type of IDs (gene Entrez or Uniprot Accession number) as requested. 

Of note: for Human species, you can build your own background by using the "Build tissue-specific expression dataset" tool of ProteoRE.

----- 

**Output**

Diagram output: graphical output in the form of bar-plot or dot-plot (png, jpeg or pdf format), one figure for each GO category. 
Text tables: with the following information GO category description (e.g.BP.Description), GO term identifier (e.g. BP.GOID) and GO term frequency (e.g. BP.Frequency)d graphics representing the repartition and/or enrichment of GO categories. One table and one graphic will be produced for each GO catagory. 

-----

**Authors**
G Yu, LG Wang, Y Han, QY He. clusterProfiler: an R package for comparing biological themes among gene clusters. 
OMICS: A Journal of Integrative Biology 2012, 16(5):284-287. doi:[10.1089/omi.2011.0118](http://dx.doi.org/10.1089/omi.2011.0118)

User manual / Documentation of the clusterProfiler R package (functions and parameters):
https://bioconductor.org/packages/3.7/bioc/vignettes/clusterProfiler/inst/doc/clusterProfiler.html

-----

.. class:: infomark

**Galaxy integration**

Florence Combes, Yves Vandenbrouck - CEA, INSERM, CNRS, Grenoble-Alpes University, BIG Institute, FR

Sandra Dérozier, Olivier Rué, Christophe Caron, Valentin Loux - INRA, Paris-Saclay University, MAIAGE Unit, Migale Bioinformatics platform, FR

This work has been partially funded through the French National Agency for Research (ANR) IFB project.

Contact support@proteore.org for any questions or concerns about the Galaxy implementation of this tool.


    ]]></help>
    <citations>
    </citations>
</tool>
