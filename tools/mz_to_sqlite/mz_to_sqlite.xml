<tool id="mz_to_sqlite" name="mz to sqlite" version="2.1.1+galaxy0">
    <description>Extract mzIdentML and associated proteomics datasets into a SQLite DB</description>
    <xrefs>
      <xref type="bio.tools">mztosqlite</xref>
    </xrefs>
    <requirements>
        <requirement type="package" version="2.1.1">mztosqlite</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Error Running mz_to_sqlite" />
    </stdio>
    <command>
        <![CDATA[
mz_to_sqlite
     -numthreads "\${GALAXY_SLOTS:-4}"
     -dbname 'sqlite.db'
     -mzid '$mzinput'
     #if len($scanfiles) > 0:
     #set $files = " ".join(["'"+ a.strip() + "'" for a in str($scanfiles).split(',')])
     -scanfiles $files
     #set $dfiles = [a for a in $scanfiles]
     -scanFilesDisplayName 
          #for $f in $dfiles
          '$f.display_name'  
          #end for
     #end if
     #if len($searchdbs) > 0:
     #set $dbFiles =  " ".join(["'"+ a.strip() + "'" for a in str($searchdbs).split(',')])
     -fasta $dbFiles
     #end if
]]>
    </command>
    <inputs>
        <param name="mzinput" type="data" format="mzid" label="Proteomics Identification files" />
        <param name="scanfiles" type="data" format="mgf" multiple="true" optional="true" label="Proteomics Spectrum files" />
        <param name="searchdbs" type="data" format="fasta,uniprotxml" multiple="true" optional="true" label="Proteomics Search Database Fasta" help="These can provide sequences and length for proteins if not already present in the mzIdentML input" />
    </inputs>
    <outputs>
        <data format="mz.sqlite" name="sqlite_db" label="${tool.name} on ${on_string}" from_work_dir="sqlite.db" />
    </outputs>
    <tests>
        <test>
            <param name="mzinput" value="test_id.mzid" ftype="mzid"></param>
            <param name="scanfiles" value="test.mgf" ftype="mgf"></param>
            <param name="searchdbs" value="test.fasta" ftype="fasta"></param>
            <output name="sqlite_db" file="sqlite.db" />
        </test>
    </tests>
    <help>
        <![CDATA[
** mz_to_sqlite  converts proteomics file formats to a SQLite database**

]]>
    </help>
    <citations>
        <citation type="bibtex">
            @misc{
                mzToSQLite, 
                author = {GalaxyP}, 
                year = {2021}, 
                title = {mzToSQLite}, 
                publisher = {GitHub}, 
                journal = {GitHub repository}, 
                url = {https://github.com/galaxyproteomics/mzToSQLite},
            }
        </citation>
    </citations>
</tool>
