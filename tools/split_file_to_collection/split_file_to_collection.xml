<tool id="split_file_to_collection" name="Split file" version="0.1.0">
    <description>to dataset collection</description>
    <macros>
        <xml name="numnew_fname">
            <param name="numnew" type="integer" label="Number of new files" min="1" value="1"/>
            <param name="newfilenames" type="text" label="Base name for new files in collection"
                help="This will increment automatically - if input is 'file', then output is 'file0', 'file1', etc." value="split_file"/>
            <conditional name="rand">
                <param name="random" type="boolean" label="Split file randomly" help="Item will be allocated randomly to new files"/>
                <when value="true">
                    <param name="seed" type="integer" label="Random number seed" help="For reproducibility, set this to some arbitrary integer (i.e. '1010')" value="1010"/>
                </when>
                <when value="false">
                </when>
            </conditional>
        </xml>
    </macros>
    <requirements>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        mkdir ./out &&
        python $__tool_directory__/split_file_to_collection.py
            --out ./out
            --in '$ftype.input'
            --ftype '$ftype.select_ftype'
            #if $ftype.select_ftype == "tabular":
                --top '$ftype.top'
                --by $ftype.split_by.select_split_by
                #if $ftype.split_by.select_split_by == "col":
                    --id_column '$ftype.split_by.id_col'
                    --match '$ftype.split_by.match_regex'
                    --sub '$ftype.split_by.sub_regex'
                #else 
                    --numnew '$ftype.split_by.numnew' 
                    #if $ftype.split_by.rand.random:
                        --rand
                        --seed '$ftype.split_by.rand.seed'
                    #end if
                #end if
            #else
                --numnew '$ftype.numnew'
                #if $ftype.rand.random                
                    --rand
                    --seed '$ftype.rand.seed'
                #end if
            #end if
        #if ($ftype.select_ftype == "tabular" and $ftype.split_by.select_split_by == "row"):
             --file_names '$ftype.split_by.newfilenames'
             --file_ext '$ftype.select_ftype'
        #end if
        #if $ftype.select_ftype != "tabular":
            --file_names '$ftype.newfilenames'
            --file_ext '$ftype.select_ftype'
        #end if
        > $log
    ]]></command>
    <inputs>
        <conditional name="ftype">
            <param name="select_ftype" type="select" label="Select the file type to split">
                <option value="mgf">MGF</option>
                <option value="fastq">FASTQ</option>
                <option value="fastqsanger">FASTQ Sanger</option>
                <option value="tabular">Tabular</option>
                <option value="fasta">FASTA</option>
            </param>
            <when value="tabular">
                <param name="input" type="data" format="tabular" label="Tabular file to split"/>
                <param name="top" type="integer" value="0" min="0" label="Number of header lines to transfer to new files"/>
                <conditional name="split_by">
                    <param name="select_split_by" type="select" label="Split by row or by a column?">
                        <option value="row">By row</option>
                        <option value="col">By column</option>
                    </param>
                    <when value="col">
                        <param name="id_col" type="data_column" label="Column to split on" data_ref="input"/>
                        <param name="match_regex" type="text" label="Regex to match contents of id column" value=".*">
	 		                <sanitizer>
          		                <valid>
            		                <add preset="string.printable"/>
            		                <remove value="&#92;" />
           		                    <remove value="&apos;" />
          			            </valid>
          		                <mapping initial="none">
            		                <add source="&#92;" target="__backslash__" />
            		                <add source="&apos;" target="__sq__"/>
          		                </mapping>
			                </sanitizer>
		                </param>
                        <param name="sub_regex" type="text" label="Pattern to replace match with" value="\1">
                            <sanitizer>
          		                <valid>
            		                <add preset="string.printable"/>
            		                <remove value="&#92;" />
           		                    <remove value="&apos;" />
          			            </valid>
          		                <mapping initial="none">
            		                <add source="&#92;" target="__backslash__" />
            		                <add source="&apos;" target="__sq__"/>
          		                </mapping>
			                </sanitizer>
                        </param>
                    </when>
                    <when value="row">
                        <expand macro="numnew_fname"/>
                    </when>
                </conditional>
            </when>
            <when value="mgf">
                <param name="input" type="data" format="mgf" label="MGF file to split"/>
                <expand macro="numnew_fname"/>
            </when>
            <when value="fastq">
                <param name="input" type="data" format="fastq" label="FASTQ file to split"/>
                <expand macro="numnew_fname"/>
            </when>
            <when value="fastqsanger">
                <param name="input" type="data" format="fastqsanger" label="FASTQ Sanger file to split"/>
                <expand macro="numnew_fname"/>
            </when>
            <when value="fasta">
                <param name="input" type="data" format="fasta" label="FASTA file to split"/>
                <expand macro="numnew_fname"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <collection name="list_output_tab" type="list" label="${tool.name} on ${on_string}: output collection">
            <discover_datasets pattern="__name__" directory="out" visible="false" format="tabular"/>
            <filter>ftype['select_ftype'] == "tabular"</filter>
        </collection>
        <collection name="list_output_mgf" type="list" label="${tool.name} on ${on_string}: output collection">
            <discover_datasets pattern="__name__" directory="out" visible="false" format="mgf"/>
            <filter>ftype['select_ftype'] == "mgf"</filter>
        </collection>
        <collection name="list_output_fasta" type="list" label="${tool.name} on ${on_string}: output collection">
            <discover_datasets pattern="__name__" directory="out" visible="false" format="fasta"/>
            <filter>ftype['select_ftype'] == "fasta"</filter>
        </collection>
        <collection name="list_output_fastqsanger" type="list" label="${tool.name} on ${on_string}: output collection">
            <discover_datasets pattern="__name__" directory="out" visible="false" format="fastqsanger"/>
            <filter>ftype['select_ftype'] == "fastqsanger"</filter>
        </collection>
        <collection name="list_output_fastq" type="list" label="${tool.name} on ${on_string}: output collection">
            <discover_datasets pattern="__name__" directory="out" visible="false" format="fastq"/>
            <filter>ftype['select_ftype'] == "fastq"</filter>
        </collection>
        <data name="log" format="txt" label="${tool.name} on ${on_string}: log" />
    </outputs>
    <tests>
        <test>
            <param name="input" value="test.tabular" ftype="tabular"/>
            <param name="ftype|select_ftype" value="tabular"/>
            <param name="select_split_by" value="col"/>
            <param name="id_col" value="1"/>
            <param name="match_regex" value="(.*)\.mgf"/>
            <param name="sub_regex" value="\1.tab"/>
            <param name="top" value="2"/>
            <output_collection name="list_output_tab" type="list">
                <element name="foo.tab" file="test_out/foo.tab" ftype="tabular"/>
                <element name="foo2.tab" file="test_out/foo2.tab" ftype="tabular"/>
                <element name="foo3.tab" file="test_out/foo3.tab" ftype="tabular"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="test.tabular" ftype="tabular"/>
            <param name="select_ftype" value="tabular"/>
            <param name="select_split_by" value="row"/>
            <param name="top" value="2"/>
            <param name="numnew" value="2"/>
            <param name="newfilenames" value="test"/>" 
            <output_collection name="list_output_tab" type="list">
                <element name="test_0.tabular" file="test_out/test_0.tabular" ftype="tabular"/>
                <element name="test_1.tabular" file="test_out/test_1.tabular" ftype="tabular"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="psm.tabular" ftype="tabular"/>
            <param name="select_ftype" value="tabular"/>
            <param name="select_split_by" value="col"/>
            <param name="id_col" value="10"/>
            <param name="match_regex" value="(.*)\.mgf"/>
            <param name="sub_regex" value="\1.tab"/>
            <param name="top" value="1"/>
            <output_collection name="list_output_tab" type="list">
                <element name="file1.tab" file="test_out/file1.tab" ftype="tabular"/>
                <element name="file2.tab" file="test_out/file2.tab" ftype="tabular"/>
                <element name="file3.tab" file="test_out/file3.tab" ftype="tabular"/>
                <element name="file4.tab" file="test_out/file4.tab" ftype="tabular"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="demo758Dacentroid.mgf" ftype="mgf"/>
            <param name="select_ftype" value="mgf"/>
            <param name="numnew" value="3"/>
            <param name="newfilenames" value="demo"/>" 
            <output_collection name="list_output_mgf" type="list">
                <element name="demo_0.mgf" file="test_out/demo_0.mgf" ftype="mgf"/>
                <element name="demo_1.mgf" file="test_out/demo_1.mgf" ftype="mgf"/>
                <element name="demo_2.mgf" file="test_out/demo_2.mgf" ftype="mgf"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="test.fasta" ftype="fasta"/>
            <param name="select_ftype" value="fasta"/>
            <param name="numnew" value="2"/>
            <param name="newfilenames" value="test"/>" 
            <output_collection name="list_output_fasta" type="list">
                <element name="test_0.fasta" file="test_out/test_0.fasta" ftype="fasta"/>
                <element name="test_1.fasta" file="test_out/test_1.fasta" ftype="fasta"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="test.fastq" ftype="fastq"/>
            <param name="select_ftype" value="fastq"/>
            <param name="numnew" value="2"/>
            <param name="newfilenames" value="test"/>" 
            <output_collection name="list_output_fastq" type="list">
                <element name="test_0.fastq" file="test_out/test_0.fastq" ftype="fastq"/>
                <element name="test_1.fastq" file="test_out/test_1.fastq" ftype="fastq"/>
            </output_collection>
        </test>
        <test>
            <param name="input" value="test.fasta" ftype="fasta"/>
            <param name="select_ftype" value="fasta"/>
            <param name="numnew" value="2"/>
            <param name="newfilenames" value="rand"/>
            <param name="random" value="true"/>
            <param name="seed" value="1010"/> 
            <output_collection name="list_output_fasta" type="list">
                <element name="rand_0.fasta" file="test_out/rand_0.fasta" ftype="fasta"/>
                <element name="rand_1.fasta" file="test_out/rand_1.fasta" ftype="fasta"/>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
**Split file into a dataset collection**

This tool can split five types of files into a separate files within a dataset collection: MGF, FASTA, FASTQ, FASTQ-Sanger, and tabular. 
If a tabular file is used as input, you may choose to split by line or by column. If split by column, a new file is created for each unique value in the column.
In addition, (Python) regular expressions may be used to transform the value in the column to a new value. Caution should be used with this feature, as it could transform all values to the same value, or other unexpected behavior.
The default regular expression uses each value in the column without modifying it. 

If splitting by line (or by some other item, like a FASTA entry or an MGF section), the splitting can be either done sequentially or at random. 
Note that there are no guarantees when splitting at random that every result file will be non-empty, so downstream tools should be able to gracefully handle empty files. 

**Note**

Due to current limitations with dataset collections, a log file is produced when running this tool. It will usually be empty, but if the tool fails, any errors will be printed to the log file. 
    ]]></help>
</tool>
