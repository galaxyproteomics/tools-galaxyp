<tool id="gp_pyprophet" name="PyProphet" version="2.1.4">
    <description></description>
    <requirements>
        <requirement type="package" version="2.1.4">pyprophet</requirement>
    </requirements>
    <command detect_errors="aggressive">
<![CDATA[
        ln -s ${input} openswath_results.tsv &&
        pyprophet
        #if $scorer:
            --apply_scorer=$scorer
        #end if
        #if $weights:
            --apply_weights=$weights
        #end if
            --num_processes="\${GALAXY_SLOTS:-24}"
            $compute_prop
            $use_all_groups
            $ignore_nan
            $random
            --final_statistics.lambda=$lambda
            --semi_supervised_learner.initial_fdr=$initial_fdr
            --semi_supervised_learner.initial_lambda=$iteration_lambda
            --semi_supervised_learner.iteration_fdr=$iteration_fdr
            --semi_supervised_learner.iteration_lambda=$iteration_lambda
            --semi_supervised_learner.num_iter=$num_iter
            --xeval.fraction=$xeval_fraction
            --xeval.num_iter=$xeval_num_iter
            --target.dir=.
            openswath_results.tsv
]]>
    </command>
    <inputs>
        <param name="input" format="osw" type="data" label="Input file" help="This file needs to be in OSW format, an SQLite variant." />
        <param name="scorer" format="txt" type="data" optional="True" label="File of existing classifier"
            help="(--apply_scorer)" />
        <param name="weights" format="txt" type="data" optional="True" label="File of existing LDA weights"
            help="(--apply_weights)" />

        <param name="lambda" type="float" value="0.4" label="Final statistics lambda" help="(--final_statistics.lambda)" />
        <param name="initial_fdr" type="float" value="0.15" label="Semi supervised learner initial fdr"
            help="(--semi_supervised_learner.initial_fdr)" />
        <param name="initial_lambda" type="float" value="0.4" label="Semi supervised learner initial lambda"
            help="(--semi_supervised_learner.initial_lambda)" />
        <param name="iteration_fdr" type="float" value="0.02" label="Semi supervised learner iteration fdr"
            help="(--semi_supervised_learner.iteration_fdr)" />
        <param name="iteration_lambda" type="float" value="0.4" label="Semi supervised learner iteration lambda"
            help="(--semi_supervised_learner.iteration_lambda)" />
        <param name="num_iter" type="integer" value="5" label="Semi supervised learner num iter"
            help="(--semi_supervised_learner.num_iter)" />
        <param name="xeval_fraction" type="float" value="0.5" label="Xeval fraction"
            help="(--xeval.fraction)" />
        <param name="xeval_num_iter" type="integer" value="5" label="Xeval num iter"
            help="(--xeval.num_iter)" />
        <param name="random" type="boolean" truevalue="--is_test" falsevalue="" checked="False"
            label="Do not use random seed" help="(--is_test)" />
        <param name="ignore_nan" type="boolean" truevalue="--ignore.invalid_score_columns" falsevalue="" checked="True"
            label="Ignore score columns which only contain NaN or infinity values" help="(--ignore.invalid_score_columns)" />
        <param name="use_all_groups" type="boolean" truevalue="--final_statistics.fdr_all_pg" falsevalue="" checked="False"
            label="Use all peak groups for score and q-value calculation" help="(--final_statistics.fdr_all_pg)" />
        <param name="compute_prop" type="boolean" truevalue="--compute.probabilities" falsevalue="" checked="False"
            label="Compute approximate binned probability values" help="(--compute.probabilities)" />
        <param name="outputs" type="select" multiple="true" display="checkboxes" label="Additional outputs">
            <option value="report" selected="true">report.pdf</option>
            <option value="summary_stat" selected="true">summary_stat.csv</option>
            <option value="full_stat" selected="true">full_stat.csv</option>
            <option value="with_dscore" selected="true">with_dscore.csv</option>
            <option value="with_dscore_filtered" selected="true">with_dscore_filtered.csv</option>
            <option value="cutoffs">cutoffs.txt</option>
            <option value="dscores_top_decoy_peaks">dscores_top_decoy_peaks.txt</option>
            <option value="dscores_top_target_peaks">dscores_top_target_peaks.txt</option>
            <option value="qvalues">qvalues.txt</option>
            <option value="svalues">svalues.txt</option>
            <option value="weights">weights.txt</option>
            <!-- This file is also produced
            <option value="scorer">scorer.bin</option>
            -->
        </param>

    </inputs>
    <outputs>
        <data name="report" format="pdf" label="${tool.name} on ${on_string}: report.pdf" from_work_dir="openswath_results_report.pdf" >
            <filter>(outputs and 'report' in outputs)</filter>
        </data>
        <data name="summary_stat" format="tabular" label="${tool.name} on ${on_string}: summary_stat.csv" from_work_dir="openswath_results_summary_stat.csv" >
            <filter>(outputs and 'summary_stat' in outputs)</filter>
        </data>
        <data name="full_stat" format="tabular" label="${tool.name} on ${on_string}: full_stat.csv" from_work_dir="openswath_results_full_stat.csv" >
            <filter>(outputs and 'full_stat' in outputs)</filter>
        </data>
        <data name="with_dscore" format="tabular" label="${tool.name} on ${on_string}: with_dscore.csv" from_work_dir="openswath_results_with_dscore.csv" >
            <filter>(outputs and 'with_dscore' in outputs)</filter>
        </data>
        <data name="with_dscore_filtered" format="tabular" label="${tool.name} on ${on_string}: with_dscore_filtered.csv" from_work_dir="openswath_results_with_dscore_filtered.csv" >
            <filter>(outputs and 'with_dscore_filtered' in outputs)</filter>
        </data>
        <data name="cutoffs" format="txt" label="${tool.name} on ${on_string}: cutoffs.txt" from_work_dir="openswath_results_cutoffs.txt" >
            <filter>(outputs and 'cutoffs' in outputs)</filter>
        </data>
        <data name="dscores_top_decoy_peaks" format="txt" label="${tool.name} on ${on_string}: dscores_top_decoy_peaks.txt" from_work_dir="openswath_results_dscores_top_decoy_peaks.txt" >
            <filter>(outputs and 'dscores_top_decoy_peaks' in outputs)</filter>
        </data>
        <data name="dscores_top_target_peaks" format="txt" label="${tool.name} on ${on_string}: dscores_top_target_peaks.txt" from_work_dir="openswath_results_dscores_top_target_peaks.txt" >
            <filter>(outputs and 'dscores_top_target_peaks' in outputs)</filter>
        </data>
        <data name="qvalues" format="txt" label="${tool.name} on ${on_string}: qvalues.txt" from_work_dir="openswath_results_qvalues.txt" >
            <filter>(outputs and 'qvalues' in outputs)</filter>
        </data>
        <data name="svalues" format="txt" label="${tool.name} on ${on_string}: svalues.txt" from_work_dir="openswath_results_svalues.txt" >
            <filter>(outputs and 'svalues' in outputs)</filter>
        </data>
        <data name="weights" format="txt" label="${tool.name} on ${on_string}: weights.txt" from_work_dir="openswath_results_weights.txt" >
            <filter>(outputs and 'weights' in outputs)</filter>
        </data>
        <!-- This file is also produced, needed by any down stream processing?
        <data name="scorer" format="binary" label="${tool.name} on ${on_string}: scorer.bin" from_work_dir="openswath_results_scorer.bin" >
            <filter>(outputs and 'scorer' in outputs)</filter>
        </data>
        -->
    </outputs>
  <help>
<![CDATA[
**What it does**

The algorithm can take targeted proteomics data, learn a linear separation between true signal and the noise signal and then compute a q-value (false discovery rate) to achieve experiment-wide cutoffs. 

This program is a reimplementation of the original algorithm by `Uwe Schmitt`__ .

.. __: https://github.com/uweschmitt/pyprophet

]]>
    </help>
    <citations>
        <citation type="doi">10.1038/nmeth.1584</citation>
    </citations>
</tool>
