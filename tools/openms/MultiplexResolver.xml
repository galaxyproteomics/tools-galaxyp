<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Quantitation]-->
<tool id="MultiplexResolver" name="MultiplexResolver" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Completes peptide multiplets and resolves conflicts within them</description>
  <macros>
    <token name="@EXECUTABLE@">MultiplexResolver</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#if $in_blacklist:
  mkdir in_blacklist &&
  cp '$in_blacklist' 'in_blacklist/${re.sub("[^\w\-_]", "_", $in_blacklist.element_identifier)}.$gxy2omsext($in_blacklist.ext)' &&
#end if
mkdir out &&
#if "out_conflicts_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_conflicts &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#if $in_blacklist:
  -in_blacklist
  'in_blacklist/${re.sub("[^\w\-_]", "_", $in_blacklist.element_identifier)}.$gxy2omsext($in_blacklist.ext)'
#end if
-out
'out/output.${gxy2omsext("consensusxml")}'
#if "out_conflicts_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_conflicts
  'out_conflicts/output.${gxy2omsext("consensusxml")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("consensusxml")}' '$out'
#if "out_conflicts_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_conflicts/output.${gxy2omsext("consensusxml")}' '$out_conflicts'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="consensusxml" label="Peptide multiplets with assigned sequence information" help=" select consensusxml data sets(s)"/>
    <param argument="-in_blacklist" type="data" format="mzml" optional="true" label="Optional input containing spectral peaks blacklisted during feature detection" help="Needed for generation of dummy features select mzml data sets(s)"/>
    <section name="algorithm" title="Parameters for the algorithm" help="" expanded="false">
      <param name="labels" argument="-algorithm:labels" type="text" value="[][Lys8,Arg10]" label="Labels used for labelling the samples" help="[...] specifies the labels for a single sample. For example.  [][Lys8,Arg10]        ... SILAC. [][Lys4,Arg6][Lys8,Arg10]        ... triple-SILAC. [Dimethyl0][Dimethyl6]        ... Dimethyl. [Dimethyl0][Dimethyl4][Dimethyl8]        ... triple Dimethyl. [ICPL0][ICPL4][ICPL6][ICPL10]        ... ICPL">
        <expand macro="list_string_san" name="labels"/>
      </param>
      <param name="missed_cleavages" argument="-algorithm:missed_cleavages" type="integer" min="0" value="0" label="Maximum number of missed cleavages due to incomplete digestion" help="(Only relevant if enzymatic cutting site coincides with labelling site. For example, Arg/Lys in the case of trypsin digestion and SILAC labelling.)"/>
      <param name="mass_tolerance" argument="-algorithm:mass_tolerance" type="float" value="0.1" label="Mass tolerance in Da for matching the mass shifts in the detected peptide multiplet to the theoretical mass shift pattern" help=""/>
      <param name="mz_tolerance" argument="-algorithm:mz_tolerance" type="integer" value="10" label="m/z tolerance in ppm for checking if dummy feature vicinity was blacklisted" help=""/>
      <param name="rt_tolerance" argument="-algorithm:rt_tolerance" type="integer" value="5" label="Retention time tolerance in seconds for checking if dummy feature vicinity was blacklisted" help=""/>
    </section>
    <section name="labels" title="Isotopic labels that can be specified in section 'algorithm:labels'" help="" expanded="false">
      <param name="Arg6" argument="-labels:Arg6" type="float" min="0.0" value="6.0201290268" label="Label:13C(6)  |  C(-6) 13C(6)  |  unimod #188" help=""/>
      <param name="Arg10" argument="-labels:Arg10" type="float" min="0.0" value="10.0082686" label="Label:13C(6)15N(4)  |  C(-6) 13C(6) N(-4) 15N(4)  |  unimod #267" help=""/>
      <param name="Lys4" argument="-labels:Lys4" type="float" min="0.0" value="4.0251069836" label="Label:2H(4)  |  H(-4) 2H(4)  |  unimod #481" help=""/>
      <param name="Lys6" argument="-labels:Lys6" type="float" min="0.0" value="6.0201290268" label="Label:13C(6)  |  C(-6) 13C(6)  |  unimod #188" help=""/>
      <param name="Lys8" argument="-labels:Lys8" type="float" min="0.0" value="8.0141988132" label="Label:13C(6)15N(2)  |  C(-6) 13C(6) N(-2) 15N(2)  |  unimod #259" help=""/>
      <param name="Leu3" argument="-labels:Leu3" type="float" min="0.0" value="3.01883" label="Label:2H(3)  |  H(-3) 2H(3)  |  unimod #262" help=""/>
      <param name="Dimethyl0" argument="-labels:Dimethyl0" type="float" min="0.0" value="28.0313" label="Dimethyl  |  H(4) C(2)  |  unimod #36" help=""/>
      <param name="Dimethyl4" argument="-labels:Dimethyl4" type="float" min="0.0" value="32.056407" label="Dimethyl:2H(4)  |  2H(4) C(2)  |  unimod #199" help=""/>
      <param name="Dimethyl6" argument="-labels:Dimethyl6" type="float" min="0.0" value="34.063117" label="Dimethyl:2H(4)13C(2)  |  2H(4) 13C(2)  |  unimod #510" help=""/>
      <param name="Dimethyl8" argument="-labels:Dimethyl8" type="float" min="0.0" value="36.07567" label="Dimethyl:2H(6)13C(2)  |  H(-2) 2H(6) 13C(2)  |  unimod #330" help=""/>
      <param name="ICPL0" argument="-labels:ICPL0" type="float" min="0.0" value="105.021464" label="ICPL  |  H(3) C(6) N O  |  unimod #365" help=""/>
      <param name="ICPL4" argument="-labels:ICPL4" type="float" min="0.0" value="109.046571" label="ICPL:2H(4)  |  H(-1) 2H(4) C(6) N O  |  unimod #687" help=""/>
      <param name="ICPL6" argument="-labels:ICPL6" type="float" min="0.0" value="111.041593" label="ICPL:13C(6)  |  H(3) 13C(6) N O  |  unimod #364" help=""/>
      <param name="ICPL10" argument="-labels:ICPL10" type="float" min="0.0" value="115.0667" label="ICPL:13C(6)2H(4)  |  H(-1) 2H(4) 13C(6) N O  |  unimod #866" help=""/>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_conflicts_FLAG">out_conflicts (Optional output containing peptide multiplets without ID annotation or with conflicting quant/ID information)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="consensusxml"/>
    <data name="out_conflicts" label="${tool.name} on ${on_string}: out_conflicts" format="consensusxml">
      <filter>OPTIONAL_OUTPUTS is not None and "out_conflicts_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_MultiplexResolver_1 -->
    <test expect_num_outputs="3">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="MultiplexResolver_1_input.consensusXML"/>
      <output name="out" value="MultiplexResolver_1_output.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <output name="out_conflicts" value="MultiplexResolver_1_output_conflicts.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <section name="algorithm">
        <param name="labels" value="[][Lys4,Arg6][Lys8,Arg10]"/>
        <param name="missed_cleavages" value="1"/>
        <param name="mass_tolerance" value="0.1"/>
        <param name="mz_tolerance" value="10"/>
        <param name="rt_tolerance" value="5"/>
      </section>
      <section name="labels">
        <param name="Arg6" value="6.0201290268"/>
        <param name="Arg10" value="10.0082686"/>
        <param name="Lys4" value="4.0251069836"/>
        <param name="Lys6" value="6.0201290268"/>
        <param name="Lys8" value="8.0141988132"/>
        <param name="Leu3" value="3.01883"/>
        <param name="Dimethyl0" value="28.0313"/>
        <param name="Dimethyl4" value="32.056407"/>
        <param name="Dimethyl6" value="34.063117"/>
        <param name="Dimethyl8" value="36.07567"/>
        <param name="ICPL0" value="105.021464"/>
        <param name="ICPL4" value="109.046571"/>
        <param name="ICPL6" value="111.041593"/>
        <param name="ICPL10" value="115.0667"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_conflicts_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_MultiplexResolver_2 -->
    <test expect_num_outputs="3">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="MultiplexResolver_2_input.consensusXML"/>
      <output name="out" value="MultiplexResolver_2_output.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <output name="out_conflicts" value="MultiplexResolver_2_output_conflicts.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <section name="algorithm">
        <param name="labels" value="[Dimethyl0][Dimethyl4][Dimethyl8]"/>
        <param name="missed_cleavages" value="4"/>
        <param name="mass_tolerance" value="0.1"/>
        <param name="mz_tolerance" value="10"/>
        <param name="rt_tolerance" value="5"/>
      </section>
      <section name="labels">
        <param name="Arg6" value="6.0201290268"/>
        <param name="Arg10" value="10.0082686"/>
        <param name="Lys4" value="4.0251069836"/>
        <param name="Lys6" value="6.0201290268"/>
        <param name="Lys8" value="8.0141988132"/>
        <param name="Leu3" value="3.01883"/>
        <param name="Dimethyl0" value="28.0313"/>
        <param name="Dimethyl4" value="32.056407"/>
        <param name="Dimethyl6" value="34.063117"/>
        <param name="Dimethyl8" value="36.07567"/>
        <param name="ICPL0" value="105.021464"/>
        <param name="ICPL4" value="109.046571"/>
        <param name="ICPL6" value="111.041593"/>
        <param name="ICPL10" value="115.0667"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_conflicts_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_MultiplexResolver_3 -->
    <test expect_num_outputs="3">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="MultiplexResolver_3_input.consensusXML"/>
      <output name="out" value="MultiplexResolver_3_output.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <output name="out_conflicts" value="MultiplexResolver_3_output_conflicts.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <section name="algorithm">
        <param name="labels" value="[][Leu3]"/>
        <param name="missed_cleavages" value="2"/>
        <param name="mass_tolerance" value="0.1"/>
        <param name="mz_tolerance" value="10"/>
        <param name="rt_tolerance" value="5"/>
      </section>
      <section name="labels">
        <param name="Arg6" value="6.0201290268"/>
        <param name="Arg10" value="10.0082686"/>
        <param name="Lys4" value="4.0251069836"/>
        <param name="Lys6" value="6.0201290268"/>
        <param name="Lys8" value="8.0141988132"/>
        <param name="Leu3" value="3.01883"/>
        <param name="Dimethyl0" value="28.0313"/>
        <param name="Dimethyl4" value="32.056407"/>
        <param name="Dimethyl6" value="34.063117"/>
        <param name="Dimethyl8" value="36.07567"/>
        <param name="ICPL0" value="105.021464"/>
        <param name="ICPL4" value="109.046571"/>
        <param name="ICPL6" value="111.041593"/>
        <param name="ICPL10" value="115.0667"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_conflicts_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_MultiplexResolver_4 -->
    <test expect_num_outputs="3">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="MultiplexResolver_4_input.consensusXML"/>
      <param name="in_blacklist" value="MultiplexResolver_4_input.mzML"/>
      <output name="out" value="MultiplexResolver_4_output.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <output name="out_conflicts" value="MultiplexResolver_4_output_conflicts.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <section name="algorithm">
        <param name="labels" value="[Dimethyl0][Dimethyl6]"/>
        <param name="missed_cleavages" value="3"/>
        <param name="mass_tolerance" value="0.1"/>
        <param name="mz_tolerance" value="10"/>
        <param name="rt_tolerance" value="10"/>
      </section>
      <section name="labels">
        <param name="Arg6" value="6.0201290268"/>
        <param name="Arg10" value="10.0082686"/>
        <param name="Lys4" value="4.0251069836"/>
        <param name="Lys6" value="6.0201290268"/>
        <param name="Lys8" value="8.0141988132"/>
        <param name="Leu3" value="3.01883"/>
        <param name="Dimethyl0" value="28.0313"/>
        <param name="Dimethyl4" value="32.056407"/>
        <param name="Dimethyl6" value="34.063117"/>
        <param name="Dimethyl8" value="36.07567"/>
        <param name="ICPL0" value="105.021464"/>
        <param name="ICPL4" value="109.046571"/>
        <param name="ICPL6" value="111.041593"/>
        <param name="ICPL10" value="115.0667"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_conflicts_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Completes peptide multiplets and resolves conflicts within them.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_MultiplexResolver.html]]></help>
  <expand macro="references"/>
</tool>
