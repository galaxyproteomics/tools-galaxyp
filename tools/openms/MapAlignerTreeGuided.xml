<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Map Alignment]-->
<tool id="MapAlignerTreeGuided" name="MapAlignerTreeGuided" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Tree guided correction of retention time distortions between maps</description>
  <macros>
    <token name="@EXECUTABLE@">MapAlignerTreeGuided</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in_cond.in &&
#if $in_cond.in_select == "no"
mkdir ${' '.join(["'in_cond.in/%s'" % (i) for i, f in enumerate($in_cond.in) if f])} && 
${' '.join(["cp '%s' 'in_cond.in/%s/%s.%s' && " % (f, i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($in_cond.in) if f])}
#else
cp '$in_cond.in' 'in_cond.in/${re.sub("[^\w\-_]", "_", $in_cond.in.element_identifier)}.$gxy2omsext($in_cond.in.ext)' &&
#end if
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out &&
  mkdir ${' '.join(["'out/%s'" % (i) for i, f in enumerate($in_cond.in) if f])} && 
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir trafo_out &&
  mkdir ${' '.join(["'trafo_out/%s'" % (i) for i, f in enumerate($in_cond.in) if f])} && 
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
#if $in_cond.in_select == "no"
${' '.join(["'in_cond.in/%s/%s.%s'"%(i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($in_cond.in) if f])}
#else
'in_cond.in/${re.sub("[^\w\-_]", "_", $in_cond.in.element_identifier)}.$gxy2omsext($in_cond.in.ext)'
#end if
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out
  ${' '.join(["'out/%s/%s.%s'"%(i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext("featurexml")) for i, f in enumerate($in_cond.in) if f])}
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -trafo_out
  ${' '.join(["'trafo_out/%s/%s.%s'"%(i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext("trafoxml")) for i, f in enumerate($in_cond.in) if f])}
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  ${' '.join(["&& mv -n 'out/%(bn)s/%(id)s.%(gext)s' 'out/%(bn)s/%(id)s'"%{"bn": i, "id": re.sub('[^\w\-_]', '_', f.element_identifier), "gext": $gxy2omsext("featurexml")} for i, f in enumerate($in_cond.in) if f])}
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  ${' '.join(["&& mv -n 'trafo_out/%(bn)s/%(id)s.%(gext)s' 'trafo_out/%(bn)s/%(id)s'"%{"bn": i, "id": re.sub('[^\w\-_]', '_', f.element_identifier), "gext": $gxy2omsext("trafoxml")} for i, f in enumerate($in_cond.in) if f])}
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"copy_data": "false", "log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <conditional name="in_cond">
      <param name="in_select" type="select" label="Run tool in batch mode for -in">
        <option value="no">No: process all datasets jointly</option>
        <option value="yes">Yes: process each dataset in an independent job</option>
      </param>
      <when value="no">
        <param argument="-in" type="data" format="featurexml" multiple="true" label="Input files to align (all must have the same file type)" help=" select featurexml data sets(s)"/>
      </when>
      <when value="yes">
        <param argument="-in" type="data" format="featurexml" label="Input files to align (all must have the same file type)" help=" select featurexml data sets(s)"/>
      </when>
    </conditional>
    <section name="algorithm" title="Algorithm parameters section" help="" expanded="false">
      <param name="model_type" argument="-algorithm:model_type" type="select" label="Options to control the modeling of retention time transformations from data" help="">
        <option value="linear">linear</option>
        <option value="b_spline" selected="true">b_spline</option>
        <option value="lowess">lowess</option>
        <option value="interpolated">interpolated</option>
        <expand macro="list_string_san" name="model_type"/>
      </param>
      <section name="model" title="" help="" expanded="false">
        <param name="type" argument="-algorithm:model:type" type="select" label="Type of model" help="">
          <option value="linear">linear</option>
          <option value="b_spline" selected="true">b_spline</option>
          <option value="lowess">lowess</option>
          <option value="interpolated">interpolated</option>
          <expand macro="list_string_san" name="type"/>
        </param>
        <section name="linear" title="Parameters for 'linear' model" help="" expanded="false">
          <param name="symmetric_regression" argument="-algorithm:model:linear:symmetric_regression" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Perform linear regression on 'y - x' vs" help="'y + x', instead of on 'y' vs. 'x'"/>
          <param name="x_weight" argument="-algorithm:model:linear:x_weight" type="select" label="Weight x values" help="">
            <option value="1/x">1/x</option>
            <option value="1/x2">1/x2</option>
            <option value="ln(x)">ln(x)</option>
            <option value="x" selected="true">x</option>
            <expand macro="list_string_san" name="x_weight"/>
          </param>
          <param name="y_weight" argument="-algorithm:model:linear:y_weight" type="select" label="Weight y values" help="">
            <option value="1/y">1/y</option>
            <option value="1/y2">1/y2</option>
            <option value="ln(y)">ln(y)</option>
            <option value="y" selected="true">y</option>
            <expand macro="list_string_san" name="y_weight"/>
          </param>
          <param name="x_datum_min" argument="-algorithm:model:linear:x_datum_min" type="float" value="1e-15" label="Minimum x value" help=""/>
          <param name="x_datum_max" argument="-algorithm:model:linear:x_datum_max" type="float" value="1000000000000000.0" label="Maximum x value" help=""/>
          <param name="y_datum_min" argument="-algorithm:model:linear:y_datum_min" type="float" value="1e-15" label="Minimum y value" help=""/>
          <param name="y_datum_max" argument="-algorithm:model:linear:y_datum_max" type="float" value="1000000000000000.0" label="Maximum y value" help=""/>
        </section>
        <section name="b_spline" title="Parameters for 'b_spline' model" help="" expanded="false">
          <param name="wavelength" argument="-algorithm:model:b_spline:wavelength" type="float" min="0.0" value="0.0" label="Determines the amount of smoothing by setting the number of nodes for the B-spline" help="The number is chosen so that the spline approximates a low-pass filter with this cutoff wavelength. The wavelength is given in the same units as the data; a higher value means more smoothing. '0' sets the number of nodes to twice the number of input points"/>
          <param name="num_nodes" argument="-algorithm:model:b_spline:num_nodes" type="integer" min="0" value="5" label="Number of nodes for B-spline fitting" help="Overrides 'wavelength' if set (to two or greater). A lower value means more smoothing"/>
          <param name="extrapolate" argument="-algorithm:model:b_spline:extrapolate" type="select" label="Method to use for extrapolation beyond the original data range" help="'linear': Linear extrapolation using the slope of the B-spline at the corresponding endpoint. 'b_spline': Use the B-spline (as for interpolation). 'constant': Use the constant value of the B-spline at the corresponding endpoint. 'global_linear': Use a linear fit through the data (which will most probably introduce discontinuities at the ends of the data range)">
            <option value="linear" selected="true">linear</option>
            <option value="b_spline">b_spline</option>
            <option value="constant">constant</option>
            <option value="global_linear">global_linear</option>
            <expand macro="list_string_san" name="extrapolate"/>
          </param>
          <param name="boundary_condition" argument="-algorithm:model:b_spline:boundary_condition" type="integer" min="0" max="2" value="2" label="Boundary condition at B-spline endpoints: 0 (value zero), 1 (first derivative zero) or 2 (second derivative zero)" help=""/>
        </section>
        <section name="lowess" title="Parameters for 'lowess' model" help="" expanded="false">
          <param name="span" argument="-algorithm:model:lowess:span" type="float" min="0.0" max="1.0" value="0.666666666666667" label="Fraction of datapoints (f) to use for each local regression (determines the amount of smoothing)" help="Choosing this parameter in the range .2 to .8 usually results in a good fit"/>
          <param name="num_iterations" argument="-algorithm:model:lowess:num_iterations" type="integer" min="0" value="3" label="Number of robustifying iterations for lowess fitting" help=""/>
          <param name="delta" argument="-algorithm:model:lowess:delta" type="float" value="-1.0" label="Nonnegative parameter which may be used to save computations (recommended value is 0.01 of the range of the input" help="e.g. for data ranging from 1000 seconds to 2000 seconds, it could be set to 10). Setting a negative value will automatically do this"/>
          <param name="interpolation_type" argument="-algorithm:model:lowess:interpolation_type" type="select" label="Method to use for interpolation between datapoints computed by lowess" help="'linear': Linear interpolation. 'cspline': Use the cubic spline for interpolation. 'akima': Use an akima spline for interpolation">
            <option value="linear">linear</option>
            <option value="cspline" selected="true">cspline</option>
            <option value="akima">akima</option>
            <expand macro="list_string_san" name="interpolation_type"/>
          </param>
          <param name="extrapolation_type" argument="-algorithm:model:lowess:extrapolation_type" type="select" label="Method to use for extrapolation outside the data range" help="'two-point-linear': Uses a line through the first and last point to extrapolate. 'four-point-linear': Uses a line through the first and second point to extrapolate in front and and a line through the last and second-to-last point in the end. 'global-linear': Uses a linear regression to fit a line through all data points and use it for interpolation">
            <option value="two-point-linear">two-point-linear</option>
            <option value="four-point-linear" selected="true">four-point-linear</option>
            <option value="global-linear">global-linear</option>
            <expand macro="list_string_san" name="extrapolation_type"/>
          </param>
        </section>
        <section name="interpolated" title="Parameters for 'interpolated' model" help="" expanded="false">
          <param name="interpolation_type" argument="-algorithm:model:interpolated:interpolation_type" type="select" label="Type of interpolation to apply" help="">
            <option value="linear">linear</option>
            <option value="cspline" selected="true">cspline</option>
            <option value="akima">akima</option>
            <expand macro="list_string_san" name="interpolation_type"/>
          </param>
          <param name="extrapolation_type" argument="-algorithm:model:interpolated:extrapolation_type" type="select" label="Type of extrapolation to apply: two-point-linear: use the first and last data point to build a single linear model, four-point-linear: build two linear models on both ends using the first two / last two points, global-linear: use all points to build a single linear model" help="Note that global-linear may not be continuous at the border">
            <option value="two-point-linear" selected="true">two-point-linear</option>
            <option value="four-point-linear">four-point-linear</option>
            <option value="global-linear">global-linear</option>
            <expand macro="list_string_san" name="extrapolation_type"/>
          </param>
        </section>
      </section>
      <section name="align_algorithm" title="" help="" expanded="false">
        <param name="score_type" argument="-algorithm:align_algorithm:score_type" type="text" optional="true" value="" label="Name of the score type to use for ranking and filtering (.oms input only)" help="If left empty, a score type is picked automatically">
          <expand macro="list_string_san" name="score_type"/>
        </param>
        <param name="score_cutoff" argument="-algorithm:align_algorithm:score_cutoff" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Use only IDs above a score cut-off (parameter 'min_score') for alignment?" help=""/>
        <param name="min_score" argument="-algorithm:align_algorithm:min_score" type="float" value="0.05" label="If 'score_cutoff' is 'true': Minimum score for an ID to be considered" help="Unless you have very few runs or identifications, increase this value to focus on more informative peptides"/>
        <param name="min_run_occur" argument="-algorithm:align_algorithm:min_run_occur" type="integer" min="2" value="2" label="Minimum number of runs (incl" help="reference, if any) in which a peptide must occur to be used for the alignment.. Unless you have very few runs or identifications, increase this value to focus on more informative peptides"/>
        <param name="max_rt_shift" argument="-algorithm:align_algorithm:max_rt_shift" type="float" min="0.0" value="0.5" label="Maximum realistic RT difference for a peptide (median per run vs" help="reference). Peptides with higher shifts (outliers) are not used to compute the alignment.. If 0, no limit (disable filter); if &gt; 1, the final value in seconds; if &lt;= 1, taken as a fraction of the range of the reference RT scale"/>
        <param name="use_unassigned_peptides" argument="-algorithm:align_algorithm:use_unassigned_peptides" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Should unassigned peptide identifications be used when computing an alignment of feature or consensus maps" help="If 'false', only peptide IDs assigned to features will be used"/>
        <param name="use_feature_rt" argument="-algorithm:align_algorithm:use_feature_rt" type="boolean" truevalue="true" falsevalue="false" checked="true" label="When aligning feature or consensus maps, don't use the retention time of a peptide identification directly; instead, use the retention time of the centroid of the feature (apex of the elution profile) that the peptide was matched to" help="If different identifications are matched to one feature, only the peptide closest to the centroid in RT is used.. Precludes 'use_unassigned_peptides'"/>
        <param name="use_adducts" argument="-algorithm:align_algorithm:use_adducts" type="boolean" truevalue="true" falsevalue="false" checked="true" label="If IDs contain adducts, treat differently adducted variants of the same molecule as different" help=""/>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_FLAG">out (Output files (same file type as 'in'))</option>
      <option value="trafo_out_FLAG">trafo_out (Transformation output files)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <collection type="list" name="out" label="${tool.name} on ${on_string}: out">
      <discover_datasets directory="out" recurse="true" format="featurexml" pattern="__name__"/>
      <filter>OPTIONAL_OUTPUTS is not None and "out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </collection>
    <collection type="list" name="trafo_out" label="${tool.name} on ${on_string}: trafo_out">
      <discover_datasets directory="trafo_out" recurse="true" format="trafoxml" pattern="__name__"/>
      <filter>OPTIONAL_OUTPUTS is not None and "trafo_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </collection>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_MapAlignerTreeGuided_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="MapAlignerTreeGuided_1_input1.featureXML,MapAlignerTreeGuided_1_input2.featureXML,MapAlignerTreeGuided_1_input3.featureXML"/>
      </conditional>
      <output_collection name="out" count="3"/>
      <section name="algorithm">
        <param name="model_type" value="b_spline"/>
        <section name="model">
          <param name="type" value="b_spline"/>
          <section name="linear">
            <param name="symmetric_regression" value="false"/>
            <param name="x_weight" value="x"/>
            <param name="y_weight" value="y"/>
            <param name="x_datum_min" value="1e-15"/>
            <param name="x_datum_max" value="1000000000000000.0"/>
            <param name="y_datum_min" value="1e-15"/>
            <param name="y_datum_max" value="1000000000000000.0"/>
          </section>
          <section name="b_spline">
            <param name="wavelength" value="0.0"/>
            <param name="num_nodes" value="5"/>
            <param name="extrapolate" value="linear"/>
            <param name="boundary_condition" value="2"/>
          </section>
          <section name="lowess">
            <param name="span" value="0.666666666666667"/>
            <param name="num_iterations" value="3"/>
            <param name="delta" value="-1.0"/>
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="four-point-linear"/>
          </section>
          <section name="interpolated">
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="two-point-linear"/>
          </section>
        </section>
        <section name="align_algorithm">
          <param name="score_type" value=""/>
          <param name="score_cutoff" value="false"/>
          <param name="min_score" value="0.05"/>
          <param name="min_run_occur" value="2"/>
          <param name="max_rt_shift" value="0.5"/>
          <param name="use_unassigned_peptides" value="true"/>
          <param name="use_feature_rt" value="true"/>
          <param name="use_adducts" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_MapAlignerTreeGuided_2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="MapAlignerTreeGuided_1_input1.featureXML,MapAlignerTreeGuided_1_input2.featureXML,MapAlignerTreeGuided_1_input3.featureXML"/>
      </conditional>
      <output_collection name="trafo_out" count="3"/>
      <section name="algorithm">
        <param name="model_type" value="b_spline"/>
        <section name="model">
          <param name="type" value="b_spline"/>
          <section name="linear">
            <param name="symmetric_regression" value="false"/>
            <param name="x_weight" value="x"/>
            <param name="y_weight" value="y"/>
            <param name="x_datum_min" value="1e-15"/>
            <param name="x_datum_max" value="1000000000000000.0"/>
            <param name="y_datum_min" value="1e-15"/>
            <param name="y_datum_max" value="1000000000000000.0"/>
          </section>
          <section name="b_spline">
            <param name="wavelength" value="0.0"/>
            <param name="num_nodes" value="5"/>
            <param name="extrapolate" value="linear"/>
            <param name="boundary_condition" value="2"/>
          </section>
          <section name="lowess">
            <param name="span" value="0.666666666666667"/>
            <param name="num_iterations" value="3"/>
            <param name="delta" value="-1.0"/>
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="four-point-linear"/>
          </section>
          <section name="interpolated">
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="two-point-linear"/>
          </section>
        </section>
        <section name="align_algorithm">
          <param name="score_type" value=""/>
          <param name="score_cutoff" value="false"/>
          <param name="min_score" value="0.05"/>
          <param name="min_run_occur" value="2"/>
          <param name="max_rt_shift" value="0.5"/>
          <param name="use_unassigned_peptides" value="true"/>
          <param name="use_feature_rt" value="true"/>
          <param name="use_adducts" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,trafo_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_MapAlignerTreeGuided_3 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="MapAlignerTreeGuided_1_input1.featureXML,MapAlignerTreeGuided_1_input2.featureXML,MapAlignerTreeGuided_1_input3.featureXML"/>
      </conditional>
      <output_collection name="out" count="3"/>
      <section name="algorithm">
        <param name="model_type" value="b_spline"/>
        <section name="model">
          <param name="type" value="b_spline"/>
          <section name="linear">
            <param name="symmetric_regression" value="false"/>
            <param name="x_weight" value="x"/>
            <param name="y_weight" value="y"/>
            <param name="x_datum_min" value="1e-15"/>
            <param name="x_datum_max" value="1000000000000000.0"/>
            <param name="y_datum_min" value="1e-15"/>
            <param name="y_datum_max" value="1000000000000000.0"/>
          </section>
          <section name="b_spline">
            <param name="wavelength" value="0.0"/>
            <param name="num_nodes" value="5"/>
            <param name="extrapolate" value="linear"/>
            <param name="boundary_condition" value="2"/>
          </section>
          <section name="lowess">
            <param name="span" value="0.666666666666667"/>
            <param name="num_iterations" value="3"/>
            <param name="delta" value="-1.0"/>
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="four-point-linear"/>
          </section>
          <section name="interpolated">
            <param name="interpolation_type" value="cspline"/>
            <param name="extrapolation_type" value="two-point-linear"/>
          </section>
        </section>
        <section name="align_algorithm">
          <param name="score_type" value=""/>
          <param name="score_cutoff" value="false"/>
          <param name="min_score" value="0.05"/>
          <param name="min_run_occur" value="2"/>
          <param name="max_rt_shift" value="0.5"/>
          <param name="use_unassigned_peptides" value="true"/>
          <param name="use_feature_rt" value="true"/>
          <param name="use_adducts" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG,out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Tree guided correction of retention time distortions between maps.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_MapAlignerTreeGuided.html]]></help>
  <expand macro="references"/>
</tool>
