<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="PSMFeatureExtractor" name="PSMFeatureExtractor" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Computes extra features for each input PSM.</description>
  <macros>
    <token name="@EXECUTABLE@">PSMFeatureExtractor</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
${ ' '.join(["ln -s '%s' 'in/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _]) }
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
${' '.join(["'in/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _])}
-out
'out/output.${out_type}'

## Postprocessing
&& mv 'out/output.${out_type}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="idxml,mzid" multiple="true" optional="false" label="Input file(s)" help=" select idxml,mzid data sets(s)"/>
    <param name="out_type" argument="-out_type" display="radio" type="select" optional="false" label="Output file type -- default: determined from file extension or content" help="">
      <option value="idXML">idxml</option>
      <option value="mzid">mzid</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="extra" argument="-extra" type="text" optional="true" value="" label="List of the MetaData parameters to be included in a feature set for precolato" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val"/>
      <expand macro="list_string_san"/>
    </param>
    <param name="multiple_search_engines" argument="-multiple_search_engines" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Combine PSMs from different search engines by merging on scan level" help=""/>
    <expand macro="adv_opts_macro">
      <param name="skip_db_check" argument="-skip_db_check" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Manual override to skip the check if same settings for multiple search engines were applied" help="Only valid together with -multiple_search_engines flag"/>
      <param name="concat" argument="-concat" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Naive merging of PSMs from different search engines: concatenate multiple search results instead of merging on scan level" help="Only valid together with -multiple_search_engines flag"/>
      <param name="impute" argument="-impute" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Will instead of discarding all PSM not unanimously detected by all SE, impute missing values by their respective scores min/max observed" help="Only valid together with -multiple_search_engines flag"/>
      <param name="limit_imputation" argument="-limit_imputation" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Will impute missing scores with the worst numerical limit (instead of min/max observed) of the respective score" help="Only valid together with -multiple_search_engines flag"/>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out">
      <change_format>
        <when input="out_type" value="idXML" format="idxml"/>
        <when input="out_type" value="mzid" format="mzid"/>
      </change_format>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_PSMFeatureExtractor"/>
    <expand macro="manutest_PSMFeatureExtractor"/>
  </tests>
  <help><![CDATA[Computes extra features for each input PSM.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_PSMFeatureExtractor.html]]></help>
  <expand macro="references"/>
</tool>
