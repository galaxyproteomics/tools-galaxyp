<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Map Alignment]-->
<tool id="MapAlignerPoseClustering" name="MapAlignerPoseClustering" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Corrects retention time distortions between maps using a pose clustering approach.</description>
  <macros>
    <token name="@EXECUTABLE@">MapAlignerPoseClustering</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
${ ' '.join(["ln -s '%s' 'in/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _]) }
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out &&
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir trafo_out &&
#end if
#if $reference.file:
  mkdir reference.file &&
  ln -s '$reference.file' 'reference.file/${re.sub("[^\w\-_]", "_", $reference.file.element_identifier)}.$gxy2omsext($reference.file.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
${' '.join(["'in/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $in if _])}
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out
  ${' '.join(["'out/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), _.ext) for _ in $in if _])}
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -trafo_out
  ${' '.join(["'trafo_out/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext("trafoxml")) for _ in $in if _])}
#end if
#if $reference.file:
  -reference:file
  'reference.file/${re.sub("[^\w\-_]", "_", $reference.file.element_identifier)}.$gxy2omsext($reference.file.ext)'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  ${' '.join(["&& mv -n 'in/%(id)s.%(gext)s' 'trafo_out/%(id)s'"%{"id": re.sub('[^\w\-_]', '_', _.element_identifier), "gext": $gxy2omsext("trafoxml")} for _ in $trafo_out if _])}
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="featurexml,mzml" multiple="true" optional="false" label="Input files to align (all must have the same file type)" help=" select featurexml,mzml data sets(s)"/>
    <section name="reference" title="Options to define a reference file (use either 'file' or 'index', not both)" help="" expanded="false">
      <param name="file" argument="-reference:file" type="data" format="featurexml,mzml" optional="true" label="File to use as reference (same file format as input files required)" help=" select featurexml,mzml data sets(s)"/>
      <param name="index" argument="-reference:index" type="integer" optional="true" min="0" value="0" label="Use one of the input files as reference ('1' for the first file, etc.)" help="If '0', no explicit reference is set - the algorithm will select a reference"/>
    </section>
    <section name="algorithm" title="Algorithm parameters section" help="" expanded="false">
      <param name="max_num_peaks_considered" argument="-algorithm:max_num_peaks_considered" type="integer" optional="true" min="-1" value="1000" label="The maximal number of peaks/features to be considered per map" help="To use all, set to '-1'"/>
      <section name="superimposer" title="" help="" expanded="false">
        <param name="mz_pair_max_distance" argument="-algorithm:superimposer:mz_pair_max_distance" type="float" optional="true" min="0.0" value="0.5" label="Maximum of m/z deviation of corresponding elements in different maps" help="This condition applies to the pairs considered in hashing"/>
        <param name="rt_pair_distance_fraction" argument="-algorithm:superimposer:rt_pair_distance_fraction" type="float" optional="true" min="0.0" max="1.0" value="0.1" label="Within each of the two maps, the pairs considered for pose clustering must be separated by at least this fraction of the total elution time interval" help="(i.e., max - min).  "/>
        <param name="num_used_points" argument="-algorithm:superimposer:num_used_points" type="integer" optional="true" min="-1" value="2000" label="Maximum number of elements considered in each map (selected by intensity)" help="Use this to reduce the running time and to disregard weak signals during alignment.  For using all points, set this to -1"/>
        <param name="scaling_bucket_size" argument="-algorithm:superimposer:scaling_bucket_size" type="float" optional="true" min="0.0" value="0.005" label="The scaling of the retention time interval is being hashed into buckets of this size during pose clustering" help="A good choice for this would be a bit smaller than the error you would expect from repeated runs"/>
        <param name="shift_bucket_size" argument="-algorithm:superimposer:shift_bucket_size" type="float" optional="true" min="0.0" value="3.0" label="The shift at the lower (respectively, higher) end of the retention time interval is being hashed into buckets of this size during pose clustering" help="A good choice for this would be about the time between consecutive MS scans"/>
        <param name="max_shift" argument="-algorithm:superimposer:max_shift" type="float" optional="true" min="0.0" value="1000.0" label="Maximal shift which is considered during histogramming (in seconds)" help="This applies for both directions"/>
        <param name="max_scaling" argument="-algorithm:superimposer:max_scaling" type="float" optional="true" min="1.0" value="2.0" label="Maximal scaling which is considered during histogramming" help="The minimal scaling is the reciprocal of this"/>
        <param name="dump_buckets" argument="-algorithm:superimposer:dump_buckets" type="text" optional="true" value="" label="[DEBUG] If non-empty, base filename where hash table buckets will be dumped to" help="A serial number for each invocation will be appended automatically">
          <expand macro="list_string_san"/>
        </param>
        <param name="dump_pairs" argument="-algorithm:superimposer:dump_pairs" type="text" optional="true" value="" label="[DEBUG] If non-empty, base filename where the individual hashed pairs will be dumped to (large!)" help="A serial number for each invocation will be appended automatically">
          <expand macro="list_string_san"/>
        </param>
      </section>
      <section name="pairfinder" title="" help="" expanded="false">
        <param name="second_nearest_gap" argument="-algorithm:pairfinder:second_nearest_gap" type="float" optional="true" min="1.0" value="2.0" label="Only link features whose distance to the second nearest neighbors (for both sides) is larger by 'second_nearest_gap' than the distance between the matched pair itself" help=""/>
        <param name="use_identifications" argument="-algorithm:pairfinder:use_identifications" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Never link features that are annotated with different peptides (features without ID's always match; only the best hit per peptide identification is considered)" help=""/>
        <param name="ignore_charge" argument="-algorithm:pairfinder:ignore_charge" type="boolean" truevalue="true" falsevalue="false" checked="false" label="false [default]: pairing requires equal charge state (or at least one unknown charge '0'); true: Pairing irrespective of charge state" help=""/>
        <param name="ignore_adduct" argument="-algorithm:pairfinder:ignore_adduct" type="boolean" truevalue="true" falsevalue="false" checked="true" label="true [default]: pairing requires equal adducts (or at least one without adduct annotation); true: Pairing irrespective of adducts" help=""/>
        <section name="distance_RT" title="Distance component based on RT differences" help="" expanded="false">
          <param name="max_difference" argument="-algorithm:pairfinder:distance_RT:max_difference" type="float" optional="true" min="0.0" value="100.0" label="Never pair features with a larger RT distance (in seconds)" help=""/>
          <param name="exponent" argument="-algorithm:pairfinder:distance_RT:exponent" type="float" optional="true" min="0.0" value="1.0" label="Normalized RT differences ([0-1], relative to 'max_difference') are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help=""/>
          <param name="weight" argument="-algorithm:pairfinder:distance_RT:weight" type="float" optional="true" min="0.0" value="1.0" label="Final RT distances are weighted by this facto" help=""/>
        </section>
        <section name="distance_MZ" title="Distance component based on m/z differences" help="" expanded="false">
          <param name="max_difference" argument="-algorithm:pairfinder:distance_MZ:max_difference" type="float" optional="true" min="0.0" value="0.3" label="Never pair features with larger m/z distance (unit defined by 'unit')" help=""/>
          <param name="unit" argument="-algorithm:pairfinder:distance_MZ:unit" display="radio" type="select" optional="false" label="Unit of the 'max_difference' paramete" help="">
            <option value="Da" selected="true">Da</option>
            <option value="ppm">ppm</option>
            <expand macro="list_string_san"/>
          </param>
          <param name="exponent" argument="-algorithm:pairfinder:distance_MZ:exponent" type="float" optional="true" min="0.0" value="2.0" label="Normalized ([0-1], relative to 'max_difference') m/z differences are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help=""/>
          <param name="weight" argument="-algorithm:pairfinder:distance_MZ:weight" type="float" optional="true" min="0.0" value="1.0" label="Final m/z distances are weighted by this facto" help=""/>
        </section>
        <section name="distance_intensity" title="Distance component based on differences in relative intensity (usually relative to highest peak in the whole data set)" help="" expanded="false">
          <param name="exponent" argument="-algorithm:pairfinder:distance_intensity:exponent" type="float" optional="true" min="0.0" value="1.0" label="Differences in relative intensity ([0-1]) are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help=""/>
          <param name="weight" argument="-algorithm:pairfinder:distance_intensity:weight" type="float" optional="true" min="0.0" value="0.0" label="Final intensity distances are weighted by this facto" help=""/>
          <param name="log_transform" argument="-algorithm:pairfinder:distance_intensity:log_transform" display="radio" type="select" optional="false" label="Log-transform intensities" help="If disabled, d = |int_f2 - int_f1| / int_max. If enabled, d = |log(int_f2 + 1) - log(int_f1 + 1)| / log(int_max + 1))">
            <option value="enabled">enabled</option>
            <option value="disabled" selected="true">disabled</option>
            <expand macro="list_string_san"/>
          </param>
        </section>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_FLAG">out (Output files (same file type as 'in'))</option>
      <option value="trafo_out_FLAG">trafo_out (Transformation output files)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <collection type="list" name="out" label="${tool.name} on ${on_string}: out">
      <discover_datasets directory="out" pattern="__name_and_ext__"/>
      <filter>OPTIONAL_OUTPUTS is not None and "out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </collection>
    <collection type="list" name="trafo_out" label="${tool.name} on ${on_string}: trafo_out">
      <discover_datasets directory="trafo_out" format="trafoxml" pattern="__name__"/>
      <filter>OPTIONAL_OUTPUTS is not None and "trafo_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </collection>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_MapAlignerPoseClustering"/>
    <expand macro="manutest_MapAlignerPoseClustering"/>
  </tests>
  <help><![CDATA[Corrects retention time distortions between maps using a pose clustering approach.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/TOPP_MapAlignerPoseClustering.html]]></help>
  <expand macro="references"/>
</tool>
