<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [ID Processing]-->
<tool id="PercolatorAdapter" name="PercolatorAdapter" version="2.3.0">
  <description>Facilitate input to Percolator and reintegrate.</description>
  <macros>
    <token name="@EXECUTABLE@">PercolatorAdapter</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="references"/>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command detect_errors="aggressive"><![CDATA[PercolatorAdapter

-in
  #for token in $param_in:
    $token
  #end for
-in_decoy
  #for token in $param_in_decoy:
    $token
  #end for
#if $param_out:
  -out $param_out
#end if
#if $param_mzid_out:
  -mzid_out $param_mzid_out
#end if
#if $param_enzyme:
  -enzyme
  #if " " in str($param_enzyme):
    "$param_enzyme"
  #else
    $param_enzyme
  #end if
#end if
#if $param_percolator_executable:
  -percolator_executable $param_percolator_executable
#end if
#if $param_peptide_level_fdrs:
  -peptide-level-fdrs
#end if
#if $param_protein_level_fdrs:
  -protein-level-fdrs
#end if
#if $param_weights:
  -weights $param_weights
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_generic_feature_set:
  -generic-feature-set
#end if
    #if $adv_opts.param_subset_max_train:
  -subset-max-train $adv_opts.param_subset_max_train
#end if
    #if $adv_opts.param_cpos:
  -cpos $adv_opts.param_cpos
#end if
    #if $adv_opts.param_cneg:
  -cneg $adv_opts.param_cneg
#end if
    #if $adv_opts.param_testFDR:
  -testFDR $adv_opts.param_testFDR
#end if
    #if $adv_opts.param_trainFDR:
  -trainFDR $adv_opts.param_trainFDR
#end if
    #if $adv_opts.param_maxiter:
  -maxiter $adv_opts.param_maxiter
#end if
    #if $adv_opts.param_quick_validation:
  -quick-validation
#end if
    #if $adv_opts.param_init_weights:
  -init-weights $adv_opts.param_init_weights
#end if
    #if $adv_opts.param_default_direction:
  -default-direction     "$adv_opts.param_default_direction"
#end if
    #if $adv_opts.param_verbose:
  -verbose $adv_opts.param_verbose
#end if
    #if $adv_opts.param_unitnorm:
  -unitnorm
#end if
    #if $adv_opts.param_test_each_iteration:
  -test-each-iteration
#end if
    #if $adv_opts.param_override:
  -override
#end if
    #if $adv_opts.param_seed:
  -seed $adv_opts.param_seed
#end if
    #if $adv_opts.param_doc:
  -doc $adv_opts.param_doc
#end if
    #if $adv_opts.param_klammer:
  -klammer
#end if
    #if $adv_opts.param_fasta:
  -fasta $adv_opts.param_fasta
#end if
    #if $adv_opts.param_decoy_pattern:
  -decoy-pattern     "$adv_opts.param_decoy_pattern"
#end if
    #if $adv_opts.param_post_processing_tdc:
  -post-processing-tdc
#end if
    #if $adv_opts.param_force:
  -force
#end if
#end if
]]></command>
  <inputs>
    <param name="param_in" type="data" format="mzid,idxml" multiple="true" optional="False" size="30" label="Input file(s)" help="(-in) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_in_decoy" type="data" format="mzid,idxml" multiple="true" optional="True" size="30" label="Input decoy file(s) in case of separate searches" help="(-in_decoy) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_enzyme" type="select" optional="False" value="trypsin" label="Type of enzyme: no_enzyme,elastase,pepsin,proteinasek,thermolysin,chymotrypsin,lys-n,lys-c,arg-c,asp-n,glu-c,trypsin" help="(-enzyme) ">
      <option value="no_enzyme">no_enzyme</option>
      <option value="elastase">elastase</option>
      <option value="pepsin">pepsin</option>
      <option value="proteinasek">proteinasek</option>
      <option value="thermolysin">thermolysin</option>
      <option value="chymotrypsin">chymotrypsin</option>
      <option value="lys-n">lys-n</option>
      <option value="lys-c">lys-c</option>
      <option value="arg-c">arg-c</option>
      <option value="asp-n">asp-n</option>
      <option value="glu-c">glu-c</option>
      <option value="trypsin" selected="true">trypsin</option>
    </param>
    <param name="param_percolator_executable" type="data" format="txt" value="percolator" label="Percolator executable of the installation" help="(-percolator_executable) e.g. 'percolator.exe'"/>
    <param name="param_peptide_level_fdrs" display="radio" type="boolean" truevalue="-peptide-level-fdrs" falsevalue="" checked="false" optional="True" label="Calculate peptide-level FDRs instead of PSM-level FDRs" help="(-peptide-level-fdrs) "/>
    <param name="param_protein_level_fdrs" display="radio" type="boolean" truevalue="-protein-level-fdrs" falsevalue="" checked="false" optional="True" label="Use the picked protein-level FDR to infer protein probabilities" help="(-protein-level-fdrs) Use the -fasta option and -decoy-pattern to set the Fasta file and decoy pattern"/>
    <expand macro="advanced_options">
      <param name="param_generic_feature_set" display="radio" type="boolean" truevalue="-generic-feature-set" falsevalue="" checked="false" optional="True" label="Use only generic (i.e" help="(-generic-feature-set) not search engine specific) features. Generating search engine specific features for common search engines by PSMFeatureExtractor will typically boost the identification rate significantly"/>
      <param name="param_subset_max_train" type="integer" value="0" label="Only train an SVM on a subset of &lt;x&gt; PSMs, and use the resulting score vector to evaluate the other PSMs" help="(-subset-max-train) Recommended when analyzing huge numbers (&gt;1 million) of PSMs. When set to 0, all PSMs are used for training as normal"/>
      <param name="param_cpos" type="float" value="0.0" label="Cpos, penalty for mistakes made on positive examples" help="(-cpos) Set by cross validation if not specified"/>
      <param name="param_cneg" type="float" value="0.0" label="Cneg, penalty for mistakes made on negative examples" help="(-cneg) Set by cross validation if not specified"/>
      <param name="param_testFDR" type="float" value="0.01" label="False discovery rate threshold for evaluating best cross validation result and the reported end result" help="(-testFDR) "/>
      <param name="param_trainFDR" type="float" value="0.01" label="False discovery rate threshold to define positive examples in training" help="(-trainFDR) Set to testFDR if 0"/>
      <param name="param_maxiter" type="integer" value="10" label="Maximal number of iterations" help="(-maxiter) "/>
      <param name="param_quick_validation" display="radio" type="boolean" truevalue="-quick-validation" falsevalue="" checked="false" optional="True" label="Quicker execution by reduced internal cross-validation" help="(-quick-validation) "/>
      <param name="param_init_weights" type="data" format="txt" label="Read initial weights to the given file" help="(-init-weights) "/>
      <param name="param_default_direction" type="text" size="30" label="The most informative feature given as the feature name, can be negated to indicate that a lower value is bette" help="(-default-direction) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param name="param_verbose" type="integer" value="2" label="Set verbosity of output: 0=no processing info, 5=all" help="(-verbose) "/>
      <param name="param_unitnorm" display="radio" type="boolean" truevalue="-unitnorm" falsevalue="" checked="false" optional="True" label="Use unit normalization [0-1] instead of standard deviation normalization" help="(-unitnorm) "/>
      <param name="param_test_each_iteration" display="radio" type="boolean" truevalue="-test-each-iteration" falsevalue="" checked="false" optional="True" label="Measure performance on test set each iteration" help="(-test-each-iteration) "/>
      <param name="param_override" display="radio" type="boolean" truevalue="-override" falsevalue="" checked="false" optional="True" label="Override error check and do not fall back on default score vector in case of suspect score vecto" help="(-override) "/>
      <param name="param_seed" type="integer" value="1" label="Setting seed of the random number generato" help="(-seed) "/>
      <param name="param_doc" type="integer" value="0" label="Include description of correct features" help="(-doc) "/>
      <param name="param_klammer" display="radio" type="boolean" truevalue="-klammer" falsevalue="" checked="false" optional="True" label="Retention time features calculated as in Klammer et al" help="(-klammer) Only available if -doc is set"/>
      <param name="param_fasta" type="data" format="fasta" optional="True" label="Provide the fasta file as the argument to this flag, which will be used for protein grouping based on an in-silico digest (only valid if option -protein-level-fdrs is active)" help="(-fasta) "/>
      <param name="param_decoy_pattern" type="text" size="30" value="random" label="Define the text pattern to identify the decoy proteins and/or PSMs, set this up if the label that identifies the decoys in the database is not the default (Only valid if option -protein-level-fdrs is active)" help="(-decoy-pattern) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param name="param_post_processing_tdc" display="radio" type="boolean" truevalue="-post-processing-tdc" falsevalue="" checked="false" optional="True" label="Use target-decoy competition to assign q-values and PEPs" help="(-post-processing-tdc) "/>
      <param name="param_force" display="radio" type="boolean" truevalue="-force" falsevalue="" checked="false" optional="True" label="Overwrite tool specific checks" help="(-force) "/>
    </expand>
  </inputs>
  <outputs>
    <data name="param_out" format="idxml"/>
    <data name="param_mzid_out" format="mzid"/>
    <data name="param_weights" format="data"/>
  </outputs>
  <help>Facilitate input to Percolator and reintegrate.


For more information, visit https://abibuilder.informatik.uni-tuebingen.de/archive/openms/Documentation/release/2.3.0/html/TOPP_PercolatorAdapter.html</help>
</tool>
