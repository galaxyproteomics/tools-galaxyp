<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Signal processing and preprocessing]-->
<tool id="BaselineFilter" name="BaselineFilter" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Removes the baseline from profile spectra using a top-hat filter.</description>
  <macros>
    <token name="@EXECUTABLE@">BaselineFilter</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("mzml")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("mzml")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzml" optional="false" label="input raw data file" help=" select mzml data sets(s)"/>
    <param name="struc_elem_length" argument="-struc_elem_length" type="float" optional="false" value="3.0" label="Length of the structuring element (should be wider than maximal peak width - see documentation)" help=""/>
    <param name="struc_elem_unit" argument="-struc_elem_unit" display="checkboxes" type="select" optional="false" label="Unit of 'struc_elem_length' paramete" help="">
      <option value="Thomson" selected="true">Thomson</option>
      <option value="DataPoints">DataPoints</option>
      <expand macro="list_string_san" name="struc_elem_unit"/>
    </param>
    <param name="method" argument="-method" type="select" optional="false" label="The name of the morphological filter to be applied" help="If you are unsure, use the default">
      <option value="identity">identity</option>
      <option value="erosion">erosion</option>
      <option value="dilation">dilation</option>
      <option value="opening">opening</option>
      <option value="closing">closing</option>
      <option value="gradient">gradient</option>
      <option value="tophat" selected="true">tophat</option>
      <option value="bothat">bothat</option>
      <option value="erosion_simple">erosion_simple</option>
      <option value="dilation_simple">dilation_simple</option>
      <expand macro="list_string_san" name="method"/>
    </param>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="false" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="mzml"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_BaselineFilter"/>
    <expand macro="manutest_BaselineFilter"/>
  </tests>
  <help><![CDATA[Removes the baseline from profile spectra using a top-hat filter.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/TOPP_BaselineFilter.html]]></help>
  <expand macro="references"/>
</tool>
