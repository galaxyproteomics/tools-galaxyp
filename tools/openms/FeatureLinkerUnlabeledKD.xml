<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
<!--Proposed Tool Section: [Map Alignment]-->
<tool id="FeatureLinkerUnlabeledKD" name="FeatureLinkerUnlabeledKD" version="2.2.0">
  <description>Groups corresponding features from multiple maps.</description>
  <macros>
    <token name="@EXECUTABLE@">FeatureLinkerUnlabeledKD</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="references"/>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>FeatureLinkerUnlabeledKD

-in
  #for token in $param_in:
    $token
  #end for
#if $param_out:
  -out $param_out
#end if
#if $param_keep_subelements:
  -keep_subelements
#end if
#if $param_algorithm_rt_tol:
  -algorithm:rt_tol $param_algorithm_rt_tol
#end if
#if $param_algorithm_mz_tol:
  -algorithm:mz_tol $param_algorithm_mz_tol
#end if
#if $param_algorithm_mz_unit:
  -algorithm:mz_unit
  #if " " in str($param_algorithm_mz_unit):
    "$param_algorithm_mz_unit"
  #else
    $param_algorithm_mz_unit
  #end if
#end if
#if $param_algorithm_warp:
  -algorithm:warp
  #if " " in str($param_algorithm_warp):
    "$param_algorithm_warp"
  #else
    $param_algorithm_warp
  #end if
#end if
#if $param_algorithm_nr_partitions:
  -algorithm:nr_partitions $param_algorithm_nr_partitions
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_algorithm_max_pairwise_log_fc:
  -algorithm:max_pairwise_log_fc $adv_opts.param_algorithm_max_pairwise_log_fc
#end if
    #if $adv_opts.param_algorithm_min_rel_cc_size:
  -algorithm:min_rel_cc_size $adv_opts.param_algorithm_min_rel_cc_size
#end if
    #if $adv_opts.param_algorithm_max_nr_conflicts:
  -algorithm:max_nr_conflicts $adv_opts.param_algorithm_max_nr_conflicts
#end if
    #if $adv_opts.param_algorithm_distance_RT_exponent:
  -algorithm:distance_RT:exponent $adv_opts.param_algorithm_distance_RT_exponent
#end if
    #if $adv_opts.param_algorithm_distance_RT_weight:
  -algorithm:distance_RT:weight $adv_opts.param_algorithm_distance_RT_weight
#end if
    #if $adv_opts.param_algorithm_distance_MZ_exponent:
  -algorithm:distance_MZ:exponent $adv_opts.param_algorithm_distance_MZ_exponent
#end if
    #if $adv_opts.param_algorithm_distance_MZ_weight:
  -algorithm:distance_MZ:weight $adv_opts.param_algorithm_distance_MZ_weight
#end if
    #if $adv_opts.param_algorithm_distance_intensity_exponent:
  -algorithm:distance_intensity:exponent $adv_opts.param_algorithm_distance_intensity_exponent
#end if
    #if $adv_opts.param_algorithm_distance_intensity_weight:
  -algorithm:distance_intensity:weight $adv_opts.param_algorithm_distance_intensity_weight
#end if
    #if $adv_opts.param_algorithm_distance_intensity_log_transform:
  -algorithm:distance_intensity:log_transform
  #if " " in str($adv_opts.param_algorithm_distance_intensity_log_transform):
    "$adv_opts.param_algorithm_distance_intensity_log_transform"
  #else
    $adv_opts.param_algorithm_distance_intensity_log_transform
  #end if
#end if
    #if $adv_opts.param_algorithm_LOWESS_span:
  -algorithm:LOWESS:span $adv_opts.param_algorithm_LOWESS_span
#end if
    #if $adv_opts.param_algorithm_LOWESS_num_iterations:
  -algorithm:LOWESS:num_iterations $adv_opts.param_algorithm_LOWESS_num_iterations
#end if
    #if $adv_opts.param_algorithm_LOWESS_delta:
  -algorithm:LOWESS:delta $adv_opts.param_algorithm_LOWESS_delta
#end if
    #if $adv_opts.param_algorithm_LOWESS_interpolation_type:
  -algorithm:LOWESS:interpolation_type
  #if " " in str($adv_opts.param_algorithm_LOWESS_interpolation_type):
    "$adv_opts.param_algorithm_LOWESS_interpolation_type"
  #else
    $adv_opts.param_algorithm_LOWESS_interpolation_type
  #end if
#end if
    #if $adv_opts.param_algorithm_LOWESS_extrapolation_type:
  -algorithm:LOWESS:extrapolation_type
  #if " " in str($adv_opts.param_algorithm_LOWESS_extrapolation_type):
    "$adv_opts.param_algorithm_LOWESS_extrapolation_type"
  #else
    $adv_opts.param_algorithm_LOWESS_extrapolation_type
  #end if
#end if
#end if
</command>
  <inputs>
    <param name="param_in" type="data" format="featurexml,consensusxml" multiple="true" optional="False" size="30" label="input files separated by blanks" help="(-in) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_keep_subelements" display="radio" type="boolean" truevalue="-keep_subelements" falsevalue="" checked="false" optional="True" label="For consensusXML input only: If set, the sub-features of the inputs are transferred to the output" help="(-keep_subelements) "/>
    <param name="param_algorithm_rt_tol" type="float" min="0.0" optional="True" value="60.0" label="Width of RT tolerance window (sec)" help="(-rt_tol) "/>
    <param name="param_algorithm_mz_tol" type="float" min="0.0" optional="True" value="15.0" label="m/z tolerance (in ppm or Da)" help="(-mz_tol) "/>
    <param name="param_algorithm_mz_unit" display="radio" type="select" optional="False" value="ppm" label="Unit of m/z tolerance" help="(-mz_unit) ">
      <option value="ppm" selected="true">ppm</option>
      <option value="Da">Da</option>
    </param>
    <param name="param_algorithm_warp" display="radio" type="select" optional="False" value="true" label="Whether or not to internally warp feature RTs using LOWESS transformation before linking (reported RTs in results will always be the original RTs)" help="(-warp) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_nr_partitions" type="integer" min="1" optional="True" value="100" label="Number of partitions in m/z space" help="(-nr_partitions) "/>
    <expand macro="advanced_options">
      <param name="param_force" display="radio" type="boolean" truevalue="-force" falsevalue="" checked="false" optional="True" label="Overwrite tool specific checks" help="(-force) "/>
      <param name="param_algorithm_max_pairwise_log_fc" type="float" value="0.5" label="Only relevant during RT alignment ('warp' set to 'true'): Maximum absolute log10 fold change between two compatible signals during compatibility graph construction" help="(-max_pairwise_log_fc) Two signals from different maps will not be connected by an edge in the compatibility graph if absolute log fold change exceeds this limit (they might still end up in the same connected component, however). Note: this does not limit fold changes in the linking stage, only during RT alignment, where we try to find high-quality alignment anchor points. Setting this to a value &lt; 0 disables the FC check"/>
      <param name="param_algorithm_min_rel_cc_size" type="float" min="0.0" max="1.0" optional="True" value="0.5" label="Only relevant during RT alignment ('warp' set to 'true'): Only connected components containing compatible features from at least max(2, (warp_min_occur * number_of_input_maps)) input maps are considered for computing the warping function" help="(-min_rel_cc_size) "/>
      <param name="param_algorithm_max_nr_conflicts" type="integer" min="-1" optional="True" value="0" label="Only relevant during RT alignment ('warp' set to 'true'): Allow up to this many conflicts (features from the same map) per connected component to be used for alignment (-1 means allow any number of conflicts)" help="(-max_nr_conflicts) "/>
      <param name="param_algorithm_distance_RT_exponent" type="float" min="0.0" optional="True" value="1.0" label="Normalized RT differences ([0-1], relative to 'max_difference') are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help="(-exponent) "/>
      <param name="param_algorithm_distance_RT_weight" type="float" min="0.0" optional="True" value="1.0" label="Final RT distances are weighted by this facto" help="(-weight) "/>
      <param name="param_algorithm_distance_MZ_exponent" type="float" min="0.0" optional="True" value="2.0" label="Normalized ([0-1], relative to 'max_difference') m/z differences are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help="(-exponent) "/>
      <param name="param_algorithm_distance_MZ_weight" type="float" min="0.0" optional="True" value="1.0" label="Final m/z distances are weighted by this facto" help="(-weight) "/>
      <param name="param_algorithm_distance_intensity_exponent" type="float" min="0.0" optional="True" value="1.0" label="Differences in relative intensity ([0-1]) are raised to this power (using 1 or 2 will be fast, everything else is REALLY slow)" help="(-exponent) "/>
      <param name="param_algorithm_distance_intensity_weight" type="float" min="0.0" optional="True" value="1.0" label="Final intensity distances are weighted by this facto" help="(-weight) "/>
      <param name="param_algorithm_distance_intensity_log_transform" display="radio" type="select" optional="False" value="enabled" label="Log-transform intensities?" help="(-log_transform) If disabled, d = |int_f2 - int_f1| / int_max. If enabled, d = |log(int_f2 + 1) - log(int_f1 + 1)| / log(int_max + 1))">
        <option value="enabled" selected="true">enabled</option>
        <option value="disabled">disabled</option>
      </param>
      <param name="param_algorithm_LOWESS_span" type="float" min="0.0" max="1.0" optional="True" value="0.666666666667" label="Fraction of datapoints (f) to use for each local regression (determines the amount of smoothing)" help="(-span) Choosing this parameter in the range .2 to .8 usually results in a good fit"/>
      <param name="param_algorithm_LOWESS_num_iterations" type="integer" min="0" optional="True" value="3" label="Number of robustifying iterations for lowess fitting" help="(-num_iterations) "/>
      <param name="param_algorithm_LOWESS_delta" type="float" value="-1.0" label="Nonnegative parameter which may be used to save computations (recommended value is 0.01 of the range of the input," help="(-delta) e.g. for data ranging from 1000 seconds to 2000 seconds, it could be set to 10). Setting a negative value will automatically do this"/>
      <param name="param_algorithm_LOWESS_interpolation_type" display="radio" type="select" optional="False" value="cspline" label="Method to use for interpolation between datapoints computed by lowess" help="(-interpolation_type) 'linear': Linear interpolation. 'cspline': Use the cubic spline for interpolation. 'akima': Use an akima spline for interpolation">
        <option value="linear">linear</option>
        <option value="cspline" selected="true">cspline</option>
        <option value="akima">akima</option>
      </param>
      <param name="param_algorithm_LOWESS_extrapolation_type" display="radio" type="select" optional="False" value="four-point-linear" label="Method to use for extrapolation outside the data range" help="(-extrapolation_type) 'two-point-linear': Uses a line through the first and last point to extrapolate. 'four-point-linear': Uses a line through the first and second point to extrapolate in front and and a line through the last and second-to-last point in the end. 'global-linear': Uses a linear regression to fit a line through all data points and use it for interpolation">
        <option value="two-point-linear">two-point-linear</option>
        <option value="four-point-linear" selected="true">four-point-linear</option>
        <option value="global-linear">global-linear</option>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="param_out" format="consensusxml"/>
  </outputs>
  <help>Groups corresponding features from multiple maps.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_FeatureLinkerUnlabeledKD.html</help>
</tool>
