<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [ID Processing]-->
<tool id="FidoAdapter" name="FidoAdapter" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Runs the protein inference engine Fido.</description>
  <macros>
    <token name="@EXECUTABLE@">FidoAdapter</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("idxml")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("idxml")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"fido_executable": "Fido", "fidocp_executable": "FidoChooseParameters", "log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="idxml" optional="false" label="Input: identification results" help=" select idxml data sets(s)"/>
    <param name="separate_runs" argument="-separate_runs" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Process multiple protein identification runs in the input separately, don't merge them" help="Merging results in loss of descriptive information of the single protein identification runs"/>
    <param name="greedy_group_resolution" argument="-greedy_group_resolution" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Post-process Fido output with greedy resolution of shared peptides based on the protein probabilities" help="Also adds the resolved ambiguity groups to output"/>
    <param name="no_cleanup" argument="-no_cleanup" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Omit clean-up of peptide sequences (removal of non-letter characters, replacement of I with L)" help=""/>
    <param name="all_PSMs" argument="-all_PSMs" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Consider all PSMs of each peptide, instead of only the best one" help=""/>
    <param name="group_level" argument="-group_level" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Perform inference on protein group level (instead of individual protein level)" help="This will lead to higher probabilities for (bigger) protein groups"/>
    <param name="log2_states" argument="-log2_states" type="integer" optional="true" min="0" value="0" label="Binary logarithm of the max" help="number of connected states in a subgraph. For a value N, subgraphs that are bigger than 2^N will be split up, sacrificing accuracy for runtime. '0' uses the default (18)"/>
    <section name="prob" title="Probability values for running Fido directly" help="i.e. without parameter estimation (in which case other settings, except 'log2_states', are ignored)" expanded="false">
      <param name="protein" argument="-prob:protein" type="float" optional="true" min="0.0" value="0.0" label="Protein prior probability ('gamma' parameter)" help=""/>
      <param name="peptide" argument="-prob:peptide" type="float" optional="true" min="0.0" value="0.0" label="Peptide emission probability ('alpha' parameter)" help=""/>
      <param name="spurious" argument="-prob:spurious" type="float" optional="true" min="0.0" value="0.0" label="Spurious peptide identification probability ('beta' parameter)" help=""/>
    </section>
    <expand macro="adv_opts_macro">
      <param name="keep_zero_group" argument="-keep_zero_group" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Keep the group of proteins with estimated probability of zero, which is otherwise removed (it may be very large)" help=""/>
      <param name="accuracy" argument="-accuracy" display="radio" type="select" optional="true" label="Accuracy level of start parameters" help="There is a trade-off between accuracy and runtime. Empty uses the default ('best')">
        <option value="">default (nothing chosen)</option>
        <option value=""></option>
        <option value="best">best</option>
        <option value="relaxed">relaxed</option>
        <option value="sloppy">sloppy</option>
        <expand macro="list_string_san"/>
      </param>
      <param name="log2_states_precalc" argument="-log2_states_precalc" type="integer" optional="true" min="0" value="0" label="Like 'log2_states', but allows to set a separate limit for the precalculation" help=""/>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="idxml"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_FidoAdapter"/>
    <expand macro="manutest_FidoAdapter"/>
  </tests>
  <help><![CDATA[Runs the protein inference engine Fido.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/TOPP_FidoAdapter.html]]></help>
  <expand macro="references"/>
</tool>
