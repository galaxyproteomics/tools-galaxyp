<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [File Converter]-->
<tool id="TargetedFileConverter" name="TargetedFileConverter" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Converts different transition files for targeted proteomics / metabolomics analysis</description>
  <macros>
    <token name="@EXECUTABLE@">TargetedFileConverter</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${out_type}'

## Postprocessing
&& mv 'out/output.${out_type}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="mrm,pqp,tabular,traml" label="Input file to convert" help="See http://www.openms.de/current_doxygen/html/TOPP_TargetedFileConverter.html for format of OpenSWATH transition TSV file or SpectraST MRM file select mrm,pqp,tabular,traml data sets(s)"/>
    <param argument="-out_type" type="select" label="Output file type -- default: determined from file extension or content" help="Note: not all conversion paths work or make sense">
      <option value="TraML">traml</option>
      <option value="pqp">pqp</option>
      <option value="tsv">tabular (tsv)</option>
      <validator type="expression" message="A value needs to be selected">value != "select a value"</validator>
      <expand macro="list_string_san" name="out_type"/>
    </param>
    <section name="algorithm" title="Algorithm parameters section" help="" expanded="false">
      <param name="retentionTimeInterpretation" argument="-algorithm:retentionTimeInterpretation" type="select" label="How to interpret the provided retention time (the retention time column can either be interpreted to be in iRT, minutes or seconds)" help="">
        <option value="iRT" selected="true">iRT</option>
        <option value="seconds">seconds</option>
        <option value="minutes">minutes</option>
        <expand macro="list_string_san" name="retentionTimeInterpretation"/>
      </param>
      <param name="override_group_label_check" argument="-algorithm:override_group_label_check" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Override an internal check that assures that all members of the same PeptideGroupLabel have the same PeptideSequence (this ensures that only different isotopic forms of the same peptide can be grouped together in the same label group)" help="Only turn this off if you know what you are doing"/>
      <param name="force_invalid_mods" argument="-algorithm:force_invalid_mods" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Force reading even if invalid modifications are encountered (OpenMS may not recognize the modification)" help=""/>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-legacy_traml_id" type="boolean" truevalue="true" falsevalue="false" checked="false" label="PQP to TraML: Should legacy TraML IDs be used?" help=""/>
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="traml">
      <change_format>
        <when input="out_type" value="pqp" format="pqp"/>
        <when input="out_type" value="tsv" format="tabular"/>
      </change_format>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_ConvertTSVToTraML_test_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_1_input.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_2_input.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_2_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="minutes"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_3 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_2_input.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_3_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="seconds"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_4 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_4_input.mrm" ftype="mrm"/>
      <output name="out" value="ConvertTSVToTraML_4_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_5 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_5_input.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_5_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_6 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_6_input.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_6_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_ConvertTSVToTraML_test_7 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_7_input_Skyline.tsv" ftype="tabular"/>
      <output name="out" value="ConvertTSVToTraML_7_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_1_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_1_input.TraML"/>
      <output name="out" value="TargetedFileConverter_1_output.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_1_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_1_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="true"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_1_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_2_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_3_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_3_input.TraML"/>
      <output name="out" value="TargetedFileConverter_3_output.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_3 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_3_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_3_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_4 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="true"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_3_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_4_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_10_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="true"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_10_input.pqp"/>
      <output name="out" value="TargetedFileConverter_10_output.TraML.tmp" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_10 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_10_output.TraML.tmp"/>
      <output name="out" value="TargetedFileConverter_10_output.tsv" compare="sim_size" delta_frac="0.7" ftype="tabular"/>
      <param name="out_type" value="tsv"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_11_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_11_input.TraML"/>
      <output name="out" value="TargetedFileConverter_11_output.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_11 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_11_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_11_input.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_8_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_8_input.tsv" ftype="tabular"/>
      <output name="out" value="TargetedFileConverter_8_output.TraML.tmp" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_8 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_8_output.TraML.tmp"/>
      <output name="out" value="TargetedFileConverter_8_input.tsv" compare="sim_size" delta_frac="0.7" ftype="tabular"/>
      <param name="out_type" value="tsv"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_9_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_9_input.TraML"/>
      <output name="out" value="TargetedFileConverter_9_output.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_9 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_9_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_9_input.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_5 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_output.TraML"/>
      <output name="out" value="ConvertTraMLToTSV_output.tsv" compare="sim_size" delta_frac="0.7" ftype="tabular"/>
      <param name="out_type" value="tsv"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_12_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_12_input.TraML"/>
      <output name="out" value="TargetedFileConverter_12_output.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_12 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_12_output.pqp.tmp"/>
      <output name="out" value="TargetedFileConverter_12_input.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="true"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_13 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="TargetedFileConverter_12_input.tsv" ftype="tabular"/>
      <output name="out" value="TargetedFileConverter_13_output.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_TargetedFileConverter_test_6 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="ConvertTSVToTraML_5_output.TraML"/>
      <output name="out" value="ConvertTraMLToTSV_output_2.tsv" compare="sim_size" delta_frac="0.7" ftype="tabular"/>
      <param name="out_type" value="tsv"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathWorkflow_13_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathWorkflow_1_input.TraML"/>
      <output name="out" value="OpenSwathWorkflow_13_input.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathWorkflow_14_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathWorkflow_1_input.TraML"/>
      <output name="out" value="OpenSwathWorkflow_14_input.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathWorkflow_17_b_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathWorkflow_17_input.tsv" ftype="tabular"/>
      <output name="out" value="OpenSwathWorkflow_17_input.pqp.tmp" compare="sim_size" delta_frac="0.7" ftype="pqp"/>
      <param name="out_type" value="pqp"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_AssayGeneratorMetabo_6 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="legacy_traml_id" value="false"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="AssayGeneratorMetabo_ams_uku_output_consensus.tsv" ftype="tabular"/>
      <output name="out" value="AssayGeneratorMetabo_ams_uku_output_consensus_traml.TraML" compare="sim_size" delta_frac="0.7" ftype="traml"/>
      <param name="out_type" value="TraML"/>
      <section name="algorithm">
        <param name="retentionTimeInterpretation" value="iRT"/>
        <param name="override_group_label_check" value="false"/>
        <param name="force_invalid_mods" value="false"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Converts different transition files for targeted proteomics / metabolomics analysis.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_TargetedFileConverter.html]]></help>
  <expand macro="references"/>
</tool>
