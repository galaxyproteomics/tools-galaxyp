<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Signal processing and preprocessing]-->
<tool id="PeakPickerIterative" name="PeakPickerIterative" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Finds mass spectrometric peaks in profile mass spectra.</description>
  <macros>
    <token name="@EXECUTABLE@">PeakPickerIterative</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("mzml")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("mzml")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzml" optional="false" label="input file" help=" select mzml data sets(s)"/>
    <section name="algorithm" title="Algorithm parameters section" help="" expanded="false">
      <param name="signal_to_noise_" argument="-algorithm:signal_to_noise_" type="float" optional="false" value="1.0" label="Signal to noise value, each peak is required to be above this value (turn off by setting it to 0.0)" help=""/>
      <param name="peak_width" argument="-algorithm:peak_width" type="float" optional="false" value="0.0" label="Expected peak width half width in Dalton - peaks will be extended until this half width is reached (even if the intensitity is increasing)" help="In conjunction with check_width_internally it will also be used to remove peaks whose spacing is larger than this value"/>
      <param name="spacing_difference" argument="-algorithm:spacing_difference" type="float" optional="false" value="1.5" label="Difference between peaks in multiples of the minimal difference to continue" help="The higher this value is set, the further apart peaks are allowed to be to still extend a peak. E.g. if the value is set to 1.5 and in a current peak the minimal spacing between peaks is 10 mDa, then only peaks at most 15 mDa apart will be added to the peak"/>
      <param name="sn_bin_count_" argument="-algorithm:sn_bin_count_" type="integer" optional="false" value="30" label="Bin count for the Signal to Noise estimation" help=""/>
      <param name="nr_iterations_" argument="-algorithm:nr_iterations_" type="integer" optional="false" min="1" value="5" label="Nr of iterations to perform (how many times the peaks are re-centered)" help=""/>
      <param name="sn_win_len_" argument="-algorithm:sn_win_len_" type="float" optional="false" value="20.0" label="Window length for the Signal to Noise estimation" help=""/>
      <param name="check_width_internally" argument="-algorithm:check_width_internally" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Delete peaks where the spacing is larger than the peak width (should be set to true to avoid artefacts)" help=""/>
      <param name="ms1_only" argument="-algorithm:ms1_only" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Only do MS1" help=""/>
      <param name="clear_meta_data" argument="-algorithm:clear_meta_data" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Delete meta data about peak width" help=""/>
    </section>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="false" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="mzml"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_PeakPickerIterative"/>
    <expand macro="manutest_PeakPickerIterative"/>
  </tests>
  <help><![CDATA[Finds mass spectrometric peaks in profile mass spectra.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_PeakPickerIterative.html]]></help>
  <expand macro="references"/>
</tool>
