<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Identification Processing]-->
<tool id="SequenceCoverageCalculator" name="SequenceCoverageCalculator" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Prints information about idXML files</description>
  <macros>
    <token name="@EXECUTABLE@">SequenceCoverageCalculator</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in_database &&
cp '$in_database' 'in_database/${re.sub("[^\w\-_]", "_", $in_database.element_identifier)}.$gxy2omsext($in_database.ext)' &&
mkdir in_peptides &&
cp '$in_peptides' 'in_peptides/${re.sub("[^\w\-_]", "_", $in_peptides.element_identifier)}.$gxy2omsext($in_peptides.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in_database
'in_database/${re.sub("[^\w\-_]", "_", $in_database.element_identifier)}.$gxy2omsext($in_database.ext)'
-in_peptides
'in_peptides/${re.sub("[^\w\-_]", "_", $in_peptides.element_identifier)}.$gxy2omsext($in_peptides.ext)'
-out
'out/output.${gxy2omsext("txt")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("txt")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in_database" type="data" format="fasta" label="input file containing the database in FASTA format" help=" select fasta data sets(s)"/>
    <param argument="-in_peptides" type="data" format="idxml" label="input file containing the identified peptides" help=" select idxml data sets(s)"/>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="txt"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="1">
      <!-- took test data from another tool that also takes idXML and fasta as input -->
      <param name="adv_opts|test" value="true"/>
      <param name="in_database" value="PeptideIndexer_1.fasta" ftype="fasta"/>
      <param name="in_peptides" value="SequenceCoverageCalculator_1.idXML" ftype="idxml"/>
      <output name="out" value="SequenceCoverageCalculator.txt" ftype="txt" compare="sim_size"/>
    </test>
  </tests>
  <help><![CDATA[Prints information about idXML files.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_SequenceCoverageCalculator.html]]></help>
  <expand macro="references"/>
</tool>
