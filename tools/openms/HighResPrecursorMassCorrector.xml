<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Mass Correction and Calibration]-->
<tool id="HighResPrecursorMassCorrector" name="HighResPrecursorMassCorrector" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Corrects the precursor mass and charge determined by the instrument software</description>
  <macros>
    <token name="@EXECUTABLE@">HighResPrecursorMassCorrector</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&
#if "out_csv_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_csv &&
#end if
#if $feature.in:
  mkdir feature.in &&
  cp '$feature.in' 'feature.in/${re.sub("[^\w\-_]", "_", $feature.in.element_identifier)}.$gxy2omsext($feature.in.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("mzml")}'
#if "out_csv_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_csv
  'out_csv/output.${gxy2omsext("csv")}'
#end if
#if $feature.in:
  -feature:in
  'feature.in/${re.sub("[^\w\-_]", "_", $feature.in.element_identifier)}.$gxy2omsext($feature.in.ext)'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("mzml")}' '$out'
#if "out_csv_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_csv/output.${gxy2omsext("csv")}' '$out_csv'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="mzml" label="Input file (centroided data)" help=" select mzml data sets(s)"/>
    <section name="feature" title="Use features for precursor mass correction" help="" expanded="false">
      <param name="in" argument="-feature:in" type="data" format="featurexml" optional="true" label="Features used to correct precursor masses" help=" select featurexml data sets(s)"/>
      <param name="mz_tolerance" argument="-feature:mz_tolerance" type="float" value="5.0" label="The precursor mass tolerance" help="Used to determine matching to feature mass traces"/>
      <param name="mz_tolerance_unit" argument="-feature:mz_tolerance_unit" type="select" label="Unit of precursor mass tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="mz_tolerance_unit"/>
      </param>
      <param name="rt_tolerance" argument="-feature:rt_tolerance" type="float" value="0.0" label="Additional retention time tolerance added to feature boundaries" help=""/>
      <param name="max_trace" argument="-feature:max_trace" type="integer" value="2" label="Maximum isotopic trace considered in matching a precursor to a feature" help=""/>
      <param name="believe_charge" argument="-feature:believe_charge" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Assume precursor charge to be correct" help=""/>
      <param name="keep_original" argument="-feature:keep_original" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Make a copy of the precursor and MS2 (true) or discard the original (false)" help=""/>
      <param name="assign_all_matching" argument="-feature:assign_all_matching" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Correct a precursor using all matching features (true) or only the nearest (false)" help="Only evaluated if copies are created (feature:keep_original)"/>
    </section>
    <section name="nearest_peak" title="Use nearest centroided MS1 peak for precursor mass correction" help="" expanded="false">
      <param name="mz_tolerance" argument="-nearest_peak:mz_tolerance" type="float" value="0.0" label="The precursor mass tolerance to find the closest MS1 peak" help="(Disable method by setting value to 0.0)"/>
      <param name="mz_tolerance_unit" argument="-nearest_peak:mz_tolerance_unit" type="select" label="Unit of precursor mass tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="mz_tolerance_unit"/>
      </param>
    </section>
    <section name="highest_intensity_peak" title="Use centroided MS1 peak with the highest intensity in a certrain mass range - for precursor mass correction" help="" expanded="false">
      <param name="mz_tolerance" argument="-highest_intensity_peak:mz_tolerance" type="float" value="0.0" label="The precursor mass tolerance to find the highest intensity MS1 peak" help="Suggested value 1/max. expected charge. (Disable method by setting value to 0.0)"/>
      <param name="mz_tolerance_unit" argument="-highest_intensity_peak:mz_tolerance_unit" type="select" label="Unit of precursor mass tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="mz_tolerance_unit"/>
      </param>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_csv_FLAG">out_csv (Optional CSV output file for results on 'nearest_peak' or 'highest_intensity_peak' algorithm (see corresponding subsection) containing columns: RT, uncorrectedMZ, correctedMZ, deltaMZ)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="mzml"/>
    <data name="out_csv" label="${tool.name} on ${on_string}: out_csv" format="csv">
      <filter>OPTIONAL_OUTPUTS is not None and "out_csv_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_HighResPrecursorMassCorrector_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="HighResPrecursorMassCorrector_2860_1103_3.mzML"/>
      <output name="out" value="HighResPrecursorMassCorrector_2860_1103_3_out.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <section name="feature">
        <param name="in" value="HighResPrecursorMassCorrector_2860_1103_3.featureXML"/>
        <param name="mz_tolerance" value="5.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
        <param name="rt_tolerance" value="0.0"/>
        <param name="max_trace" value="2"/>
        <param name="believe_charge" value="false"/>
        <param name="keep_original" value="false"/>
        <param name="assign_all_matching" value="false"/>
      </section>
      <section name="nearest_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <section name="highest_intensity_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_HighResPrecursorMassCorrector_3 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="HighResPrecursorMassCorrector_2538_1091_2.mzML"/>
      <output name="out" value="HighResPrecursorMassCorrector_2538_1091_2_out.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <section name="feature">
        <param name="in" value="HighResPrecursorMassCorrector_2538_1091_2.featureXML"/>
        <param name="mz_tolerance" value="5.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
        <param name="rt_tolerance" value="0.0"/>
        <param name="max_trace" value="2"/>
        <param name="believe_charge" value="false"/>
        <param name="keep_original" value="false"/>
        <param name="assign_all_matching" value="false"/>
      </section>
      <section name="nearest_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <section name="highest_intensity_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_HighResPrecursorMassCorrector_4 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="HighResPrecursorMassCorrector_2810_1091_3.mzML"/>
      <output name="out" value="HighResPrecursorMassCorrector_2810_1091_3_out.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <section name="feature">
        <param name="in" value="HighResPrecursorMassCorrector_2810_1091_3.featureXML"/>
        <param name="mz_tolerance" value="5.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
        <param name="rt_tolerance" value="0.0"/>
        <param name="max_trace" value="2"/>
        <param name="believe_charge" value="false"/>
        <param name="keep_original" value="false"/>
        <param name="assign_all_matching" value="false"/>
      </section>
      <section name="nearest_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <section name="highest_intensity_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_HighResPrecursorMassCorrector_5 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="HighResPrecursorMassCorrector_3070_1191_3.mzML"/>
      <output name="out" value="HighResPrecursorMassCorrector_3070_1191_3_out.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <section name="feature">
        <param name="in" value="HighResPrecursorMassCorrector_3070_1191_3.featureXML"/>
        <param name="mz_tolerance" value="5.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
        <param name="rt_tolerance" value="0.0"/>
        <param name="max_trace" value="2"/>
        <param name="believe_charge" value="false"/>
        <param name="keep_original" value="false"/>
        <param name="assign_all_matching" value="false"/>
      </section>
      <section name="nearest_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <section name="highest_intensity_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_HighResPrecursorMassCorrector_6 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="HighResPrecursorMassCorrector_6.mzML"/>
      <output name="out" value="HighResPrecursorMassCorrector_6_out.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <section name="feature">
        <param name="mz_tolerance" value="5.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
        <param name="rt_tolerance" value="0.0"/>
        <param name="max_trace" value="2"/>
        <param name="believe_charge" value="false"/>
        <param name="keep_original" value="false"/>
        <param name="assign_all_matching" value="false"/>
      </section>
      <section name="nearest_peak">
        <param name="mz_tolerance" value="0.0"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <section name="highest_intensity_peak">
        <param name="mz_tolerance" value="0.2"/>
        <param name="mz_tolerance_unit" value="ppm"/>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Corrects the precursor mass and charge determined by the instrument software.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_HighResPrecursorMassCorrector.html]]></help>
  <expand macro="references"/>
</tool>
