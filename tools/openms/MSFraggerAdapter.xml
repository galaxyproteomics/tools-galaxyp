<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: []-->
<tool id="MSFraggerAdapter" name="MSFraggerAdapter" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Peptide Identification with MSFragger</description>
  <macros>
    <token name="@EXECUTABLE@">MSFraggerAdapter</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&
#if "opt_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir opt_out &&
#end if
mkdir database &&
cp '$database' 'database/${re.sub("[^\w\-_]", "_", $database.element_identifier)}.$gxy2omsext($database.ext)' &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("idxml")}'
#if "opt_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -opt_out
  'opt_out/output.${gxy2omsext("pepxml")}'
#end if
-database
'database/${re.sub("[^\w\-_]", "_", $database.element_identifier)}.$gxy2omsext($database.ext)'
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("idxml")}' '$out'
#if "opt_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'opt_out/output.${gxy2omsext("pepxml")}' '$opt_out'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"java_executable": "java", "executable": "/home/berntm/Downloads/MSFragger-20171106/MSFragger-20171106.jar", "log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-license" type="select" label="Set to yes, if you have read and agreed to the MSFragger license terms" help="">
      <option value="yes">yes</option>
      <option value="no">no</option>
      <validator type="expression" message="A value needs to be selected">value != "select a value"</validator>
      <expand macro="list_string_san" name="license"/>
    </param>
    <param argument="-java_heapmemory" type="integer" value="3500" label="Maximum Java heap size (in MB)" help=""/>
    <param argument="-in" type="data" format="mzml,mzxml" label="Input File with specta for MSFragge" help=" select mzml,mzxml data sets(s)"/>
    <param argument="-database" type="data" format="fasta" label="Protein FASTA database file path" help=" select fasta data sets(s)"/>
    <param argument="-reindex" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Recalculate peptide to protein association using OpenMS" help="Annotates target-decoy information"/>
    <section name="tolerance" title="Search Tolerances" help="" expanded="false">
      <param name="precursor_mass_tolerance_lower" argument="-tolerance:precursor_mass_tolerance_lower" type="float" min="0.0" value="20.0" label="Lower precursor mass tolerance" help=""/>
      <param name="precursor_mass_tolerance_upper" argument="-tolerance:precursor_mass_tolerance_upper" type="float" min="0.0" value="20.0" label="Upper precursor mass tolerance" help=""/>
      <param name="precursor_mass_unit" argument="-tolerance:precursor_mass_unit" type="select" label="Unit of precursor mass tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="precursor_mass_unit"/>
      </param>
      <param name="precursor_true_tolerance" argument="-tolerance:precursor_true_tolerance" type="float" min="0.0" value="0.0" label="True precursor mass tolerance (window is +/- this value)" help="Used for tie breaker of results (in spectrally ambiguous cases) and zero bin boosting in open searches (0 disables these features). This option is STRONGLY recommended for open searches"/>
      <param name="precursor_true_unit" argument="-tolerance:precursor_true_unit" type="select" label="Unit of precursor true tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="precursor_true_unit"/>
      </param>
      <param name="fragment_mass_tolerance" argument="-tolerance:fragment_mass_tolerance" type="float" min="0.0" value="20.0" label="Fragment mass tolerance (window is +/- this value)" help=""/>
      <param name="fragment_mass_unit" argument="-tolerance:fragment_mass_unit" type="select" label="Unit of fragment mass tolerance" help="">
        <option value="Da">Da</option>
        <option value="ppm" selected="true">ppm</option>
        <expand macro="list_string_san" name="fragment_mass_unit"/>
      </param>
      <param name="isotope_error" argument="-tolerance:isotope_error" type="select" label="Isotope correction for MS/MS events triggered on isotopic peaks" help="Should be set to 0 (disabled) for open search or 0/1/2 for correction of narrow window searches. Shifts the precursor mass window to multiples of this value multiplied by the mass of C13-C12">
        <option value="0" selected="true">0</option>
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="0/1/2">0/1/2</option>
        <expand macro="list_string_san" name="isotope_error"/>
      </param>
    </section>
    <section name="digest" title="In-Silico Digestion Parameters" help="" expanded="false">
      <param name="search_enzyme_name" argument="-digest:search_enzyme_name" type="select" label="Name of the enzyme to be written to the pepXML file" help="">
        <option value="no cleavage">no cleavage</option>
        <option value="unspecific cleavage">unspecific cleavage</option>
        <option value="Arg-C/P">Arg-C/P</option>
        <option value="Asp-N">Asp-N</option>
        <option value="Asp-N/B">Asp-N/B</option>
        <option value="Asp-N_ambic">Asp-N_ambic</option>
        <option value="Chymotrypsin">Chymotrypsin</option>
        <option value="glutamyl endopeptidase">glutamyl endopeptidase</option>
        <option value="Alpha-lytic protease">Alpha-lytic protease</option>
        <option value="Trypsin" selected="true">Trypsin</option>
        <option value="Arg-C">Arg-C</option>
        <option value="Glu-C+P">Glu-C+P</option>
        <option value="PepsinA + P">PepsinA + P</option>
        <option value="cyanogen-bromide">cyanogen-bromide</option>
        <option value="Clostripain/P">Clostripain/P</option>
        <option value="elastase-trypsin-chymotrypsin">elastase-trypsin-chymotrypsin</option>
        <option value="Chymotrypsin/P">Chymotrypsin/P</option>
        <option value="CNBr">CNBr</option>
        <option value="Formic_acid">Formic_acid</option>
        <option value="Lys-C">Lys-C</option>
        <option value="Lys-N">Lys-N</option>
        <option value="Lys-C/P">Lys-C/P</option>
        <option value="PepsinA">PepsinA</option>
        <option value="TrypChymo">TrypChymo</option>
        <option value="Trypsin/P">Trypsin/P</option>
        <option value="V8-DE">V8-DE</option>
        <option value="V8-E">V8-E</option>
        <option value="leukocyte elastase">leukocyte elastase</option>
        <option value="proline endopeptidase">proline endopeptidase</option>
        <option value="2-iodobenzoate">2-iodobenzoate</option>
        <option value="iodosobenzoate">iodosobenzoate</option>
        <option value="staphylococcal protease/D">staphylococcal protease/D</option>
        <option value="proline-endopeptidase/HKR">proline-endopeptidase/HKR</option>
        <expand macro="list_string_san" name="search_enzyme_name"/>
      </param>
      <param name="search_enzyme_cutafter" argument="-digest:search_enzyme_cutafter" type="text" value="KR" label="Residues after which the enzyme cuts (specified as a string of amino acids)" help="">
        <expand macro="list_string_san" name="search_enzyme_cutafter"/>
      </param>
      <param name="search_enzyme_nocutbefore" argument="-digest:search_enzyme_nocutbefore" type="text" value="P" label="Residues that the enzyme will not cut before" help="">
        <expand macro="list_string_san" name="search_enzyme_nocutbefore"/>
      </param>
      <param name="num_enzyme_termini" argument="-digest:num_enzyme_termini" type="select" label="Number of enzyme termini (non-enzymatic (0), semi (1), fully (2)" help="">
        <option value="non-enzymatic">non-enzymatic</option>
        <option value="semi">semi</option>
        <option value="fully" selected="true">fully</option>
        <expand macro="list_string_san" name="num_enzyme_termini"/>
      </param>
      <param name="allowed_missed_cleavage" argument="-digest:allowed_missed_cleavage" type="select" label="Allowed number of missed cleavages" help="">
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2" selected="true">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <expand macro="list_string_san" name="allowed_missed_cleavage"/>
      </param>
      <param name="min_length" argument="-digest:min_length" type="integer" min="0" value="7" label="Minimum length of peptides to be generated during in-silico digestion" help=""/>
      <param name="max_length" argument="-digest:max_length" type="integer" min="0" value="64" label="Maximum length of peptides to be generated during in-silico digestion" help=""/>
      <param name="mass_range_min" argument="-digest:mass_range_min" type="float" min="0.0" value="500.0" label="Min mass of peptides to be generated (Da)" help=""/>
      <param name="mass_range_max" argument="-digest:mass_range_max" type="float" min="0.0" value="5000.0" label="Max mass of peptides to be generated (Da)" help=""/>
    </section>
    <section name="varmod" title="Variable Modification Parameters" help="" expanded="false">
      <param name="clip_nterm_m" argument="-varmod:clip_nterm_m" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Specifies the trimming of a protein N-terminal methionine as a variable modification" help=""/>
      <param name="masses" argument="-varmod:masses" type="text" optional="true" value="" label="Masses for variable modifications" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
        <expand macro="list_float_valsan" name="masses"/>
      </param>
      <param name="syntaxes" argument="-varmod:syntaxes" type="text" optional="true" value="" label="Syntax Strings for variable modifications" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
        <expand macro="list_string_val" name="syntaxes"/>
        <expand macro="list_string_san" name="syntaxes"/>
      </param>
      <param name="unimod" argument="-varmod:unimod" type="text" optional="true" value="" label="Variable modifications in unimod syntax, is added to mass+syntax varmod list" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
        <expand macro="list_string_val" name="unimod"/>
        <expand macro="list_string_san" name="unimod"/>
      </param>
      <param name="enable_common" argument="-varmod:enable_common" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Enable common variable modifications (15.9949 M and 42.0106 [^)" help=""/>
      <param name="not_allow_multiple_variable_mods_on_residue" argument="-varmod:not_allow_multiple_variable_mods_on_residue" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Do not allow any one amino acid to be modified by multiple variable modifications" help=""/>
      <param name="max_variable_mods_per_peptide" argument="-varmod:max_variable_mods_per_peptide" type="select" label="Maximum total number of variable modifications per peptide" help="">
        <option value="0">0</option>
        <option value="1">1</option>
        <option value="2" selected="true">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
        <expand macro="list_string_san" name="max_variable_mods_per_peptide"/>
      </param>
      <param name="max_variable_mods_combinations" argument="-varmod:max_variable_mods_combinations" type="integer" min="0" max="65534" value="5000" label="Maximum allowed number of modified variably modified peptides from each peptide sequence, (maximum of 65534)" help="If a greater number than the maximum is generated, only the unmodified peptide is considered"/>
    </section>
    <section name="spectrum" title="Spectrum Processing Parameters" help="" expanded="false">
      <param name="minimum_peaks" argument="-spectrum:minimum_peaks" type="integer" min="0" value="10" label="Minimum number of peaks in experimental spectrum for matching" help=""/>
      <param name="use_topn_peaks" argument="-spectrum:use_topn_peaks" type="integer" min="0" value="50" label="Pre-process experimental spectrum to only use top N peaks" help=""/>
      <param name="minimum_ratio" argument="-spectrum:minimum_ratio" type="float" min="0.0" max="1.0" value="0.0" label="Filters out all peaks in experimental spectrum less intense than this multiple of the base peak intensity" help=""/>
      <param name="clear_mz_range_min" argument="-spectrum:clear_mz_range_min" type="float" min="0.0" value="0.0" label="Removes peaks in this m/z range prior to matching (minimum value)" help="Useful for iTRAQ/TMT experiments (i.e. 0.0 150.0)"/>
      <param name="clear_mz_range_max" argument="-spectrum:clear_mz_range_max" type="float" min="0.0" value="0.0" label="Removes peaks in this m/z range prior to matching (maximum value)" help="Useful for iTRAQ/TMT experiments (i.e. 0.0 150.0)"/>
      <param name="max_fragment_charge" argument="-spectrum:max_fragment_charge" type="select" label="Maximum charge state for theoretical fragments to match" help="">
        <option value="1">1</option>
        <option value="2" selected="true">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <expand macro="list_string_san" name="max_fragment_charge"/>
      </param>
      <param name="override_charge" argument="-spectrum:override_charge" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Ignores precursor charge and uses charge state specified in precursor_charge range (parameters: spectrum:precursor_charge_min and spectrum:precursor_charge_max)" help=""/>
      <param name="precursor_charge_min" argument="-spectrum:precursor_charge_min" type="integer" min="0" value="1" label="Min charge of precursor charge range to conside" help="If specified, also spectrum:override_charge must be set)"/>
      <param name="precursor_charge_max" argument="-spectrum:precursor_charge_max" type="integer" min="0" value="4" label="Max charge of precursor charge range to conside" help="If specified, also spectrum:override_charge must be set)"/>
    </section>
    <section name="search" title="Open Search Features" help="" expanded="false">
      <param name="track_zero_topn" argument="-search:track_zero_topn" type="integer" min="0" value="0" label="Track top N unmodified peptide results separately from main results internally for boosting features" help="Should be set to a number greater than search:output_report_topN if zero bin boosting is desired"/>
      <param name="zero_bin_accept_expect" argument="-search:zero_bin_accept_expect" type="float" min="0.0" value="0.0" label="Ranks a zero-bin hit above all non-zero-bin hit if it has expectation less than this value" help=""/>
      <param name="zero_bin_mult_expect" argument="-search:zero_bin_mult_expect" type="float" min="0.0" value="1.0" label="Multiplies expect value of PSMs in the zero-bin during results ordering (set to less than 1 for boosting)" help=""/>
      <param name="add_topn_complementary" argument="-search:add_topn_complementary" type="integer" min="0" value="0" label="Inserts complementary ions corresponding to the top N most intense fragments in each experimental spectrum" help="Useful for recovery of modified peptides near C-terminus in open search. 0 disables this option"/>
      <param name="min_fragments_modeling" argument="-search:min_fragments_modeling" type="integer" min="0" value="3" label="Minimum number of matched peaks in PSM for inclusion in statistical modeling" help=""/>
      <param name="min_matched_fragments" argument="-search:min_matched_fragments" type="integer" min="0" value="4" label="Minimum number of matched peaks for PSM to be reported" help="MSFragger recommends a minimum of 4 for narrow window searching and 6 for open searches"/>
      <param name="output_report_topn" argument="-search:output_report_topn" type="integer" min="0" value="1" label="Reports top N PSMs per input spectrum" help=""/>
      <param name="output_max_expect" argument="-search:output_max_expect" type="float" min="0.0" value="50.0" label="Suppresses reporting of PSM if top hit has expectation greater than this threshold" help=""/>
      <param name="localize_delta_mass" argument="-search:localize_delta_mass" type="integer" min="0" value="0" label="Include fragment ions mass-shifted by unknown modifications (recommended for open and mass offset searches) (0 for OFF, 1 for ON)" help=""/>
    </section>
    <section name="statmod" title="Static Modification Parameters" help="" expanded="false">
      <param name="add_cterm_peptide" argument="-statmod:add_cterm_peptide" type="float" min="0.0" value="0.0" label="Statically add mass in Da to C-terminal of peptide" help=""/>
      <param name="add_nterm_peptide" argument="-statmod:add_nterm_peptide" type="float" min="0.0" value="0.0" label="Statically add mass in Da to N-terminal of peptide" help=""/>
      <param name="add_cterm_protein" argument="-statmod:add_cterm_protein" type="float" min="0.0" value="0.0" label="Statically add mass in Da to C-terminal of protein" help=""/>
      <param name="add_nterm_protein" argument="-statmod:add_nterm_protein" type="float" min="0.0" value="0.0" label="Statically add mass in Da to N-terminal of protein" help=""/>
      <param name="add_G_glycine" argument="-statmod:add_G_glycine" type="float" min="0.0" value="0.0" label="Statically add mass to glycine" help=""/>
      <param name="add_A_alanine" argument="-statmod:add_A_alanine" type="float" min="0.0" value="0.0" label="Statically add mass to alanine" help=""/>
      <param name="add_S_serine" argument="-statmod:add_S_serine" type="float" min="0.0" value="0.0" label="Statically add mass to serine" help=""/>
      <param name="add_P_proline" argument="-statmod:add_P_proline" type="float" min="0.0" value="0.0" label="Statically add mass to proline" help=""/>
      <param name="add_V_valine" argument="-statmod:add_V_valine" type="float" min="0.0" value="0.0" label="Statically add mass to valine" help=""/>
      <param name="add_T_threonine" argument="-statmod:add_T_threonine" type="float" min="0.0" value="0.0" label="Statically add mass to threonine" help=""/>
      <param name="add_C_cysteine" argument="-statmod:add_C_cysteine" type="float" min="0.0" value="57.021464" label="Statically add mass to cysteine" help=""/>
      <param name="add_L_leucine" argument="-statmod:add_L_leucine" type="float" min="0.0" value="0.0" label="Statically add mass to leucine" help=""/>
      <param name="add_I_isoleucine" argument="-statmod:add_I_isoleucine" type="float" min="0.0" value="0.0" label="Statically add mass to isoleucine" help=""/>
      <param name="add_N_asparagine" argument="-statmod:add_N_asparagine" type="float" min="0.0" value="0.0" label="Statically add mass to asparagine" help=""/>
      <param name="add_D_aspartic_acid" argument="-statmod:add_D_aspartic_acid" type="float" min="0.0" value="0.0" label="Statically add mass to aspartic_acid" help=""/>
      <param name="add_Q_glutamine" argument="-statmod:add_Q_glutamine" type="float" min="0.0" value="0.0" label="Statically add mass to glutamine" help=""/>
      <param name="add_K_lysine" argument="-statmod:add_K_lysine" type="float" min="0.0" value="0.0" label="Statically add mass to lysine" help=""/>
      <param name="add_E_glutamic_acid" argument="-statmod:add_E_glutamic_acid" type="float" min="0.0" value="0.0" label="Statically add mass to glutamic_acid" help=""/>
      <param name="add_M_methionine" argument="-statmod:add_M_methionine" type="float" min="0.0" value="0.0" label="Statically add mass to methionine" help=""/>
      <param name="add_H_histidine" argument="-statmod:add_H_histidine" type="float" min="0.0" value="0.0" label="Statically add mass to histidine" help=""/>
      <param name="add_F_phenylalanine" argument="-statmod:add_F_phenylalanine" type="float" min="0.0" value="0.0" label="Statically add mass to phenylalanine" help=""/>
      <param name="add_R_arginine" argument="-statmod:add_R_arginine" type="float" min="0.0" value="0.0" label="Statically add mass to arginine" help=""/>
      <param name="add_Y_tyrosine" argument="-statmod:add_Y_tyrosine" type="float" min="0.0" value="0.0" label="Statically add mass to tyrosine" help=""/>
      <param name="add_W_tryptophan" argument="-statmod:add_W_tryptophan" type="float" min="0.0" value="0.0" label="Statically add mass to tryptophan" help=""/>
      <param name="unimod" argument="-statmod:unimod" type="text" optional="true" value="" label="Fixed modifications in unimod syntax if specific mass is unknown" help="e.g. Carbamidomethylation (C). When multiple different masses are given for one aminoacid this parameter (unimod) will have priority (space separated list, in order to allow for spaces in list items surround them by single quotes)">
        <expand macro="list_string_val" name="unimod"/>
        <expand macro="list_string_san" name="unimod"/>
      </param>
    </section>
    <section name="PeptideIndexing" title="" help="" expanded="false">
      <param name="decoy_string" argument="-PeptideIndexing:decoy_string" type="text" optional="true" value="" label="String that was appended (or prefixed - see 'decoy_string_position' flag below) to the accessions in the protein database to indicate decoy proteins" help="If empty (default), it's determined automatically (checking for common terms, both as prefix and suffix)">
        <expand macro="list_string_san" name="decoy_string"/>
      </param>
      <param name="decoy_string_position" argument="-PeptideIndexing:decoy_string_position" type="select" label="Is the 'decoy_string' prepended (prefix) or appended (suffix) to the protein accession" help="(ignored if decoy_string is empty)">
        <option value="prefix" selected="true">prefix</option>
        <option value="suffix">suffix</option>
        <expand macro="list_string_san" name="decoy_string_position"/>
      </param>
      <param name="missing_decoy_action" argument="-PeptideIndexing:missing_decoy_action" type="select" label="Action to take if NO peptide was assigned to a decoy protein (which indicates wrong database or decoy string): 'error' (exit with error, no output), 'warn' (exit with success, warning message), 'silent' (no action is taken, not even a warning)" help="">
        <option value="error">error</option>
        <option value="warn" selected="true">warn</option>
        <option value="silent">silent</option>
        <expand macro="list_string_san" name="missing_decoy_action"/>
      </param>
      <param name="write_protein_sequence" argument="-PeptideIndexing:write_protein_sequence" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If set, the protein sequences are stored as well" help=""/>
      <param name="write_protein_description" argument="-PeptideIndexing:write_protein_description" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If set, the protein description is stored as well" help=""/>
      <param name="keep_unreferenced_proteins" argument="-PeptideIndexing:keep_unreferenced_proteins" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If set, protein hits which are not referenced by any peptide are kept" help=""/>
      <param name="unmatched_action" argument="-PeptideIndexing:unmatched_action" type="select" label="If peptide sequences cannot be matched to any protein: 1) raise an error; 2) warn (unmatched PepHits will miss target/decoy annotation with downstream problems); 3) remove the hit" help="">
        <option value="error" selected="true">error</option>
        <option value="warn">warn</option>
        <option value="remove">remove</option>
        <expand macro="list_string_san" name="unmatched_action"/>
      </param>
      <param name="aaa_max" argument="-PeptideIndexing:aaa_max" type="integer" min="0" max="10" value="3" label="Maximal number of ambiguous amino acids (AAAs) allowed when matching to a protein database with AAAs" help="AAAs are 'B', 'J', 'Z' and 'X'"/>
      <param name="mismatches_max" argument="-PeptideIndexing:mismatches_max" type="integer" min="0" max="10" value="0" label="Maximal number of mismatched (mm) amino acids allowed when matching to a protein database" help="The required runtime is exponential in the number of mm's; apply with care. MM's are allowed in addition to AAA's"/>
      <param name="IL_equivalent" argument="-PeptideIndexing:IL_equivalent" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Treat the isobaric amino acids isoleucine ('I') and leucine ('L') as equivalent (indistinguishable)" help="Also occurrences of 'J' will be treated as 'I' thus avoiding ambiguous matching"/>
      <param name="allow_nterm_protein_cleavage" argument="-PeptideIndexing:allow_nterm_protein_cleavage" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Allow the protein N-terminus amino acid to clip" help=""/>
      <section name="enzyme" title="" help="" expanded="false">
        <param name="name" argument="-PeptideIndexing:enzyme:name" type="select" label="Enzyme which determines valid cleavage sites -" help="e.g. trypsin cleaves after lysine (K) or arginine (R), but not before proline (P). Default: deduce from input">
          <option value="auto" selected="true">auto</option>
          <option value="TrypChymo">TrypChymo</option>
          <option value="Trypsin/P">Trypsin/P</option>
          <option value="V8-DE">V8-DE</option>
          <option value="V8-E">V8-E</option>
          <option value="Arg-C">Arg-C</option>
          <option value="Arg-C/P">Arg-C/P</option>
          <option value="Asp-N">Asp-N</option>
          <option value="Asp-N/B">Asp-N/B</option>
          <option value="Asp-N_ambic">Asp-N_ambic</option>
          <option value="Chymotrypsin">Chymotrypsin</option>
          <option value="Chymotrypsin/P">Chymotrypsin/P</option>
          <option value="CNBr">CNBr</option>
          <option value="Formic_acid">Formic_acid</option>
          <option value="Glu-C+P">Glu-C+P</option>
          <option value="PepsinA + P">PepsinA + P</option>
          <option value="cyanogen-bromide">cyanogen-bromide</option>
          <option value="Clostripain/P">Clostripain/P</option>
          <option value="elastase-trypsin-chymotrypsin">elastase-trypsin-chymotrypsin</option>
          <option value="no cleavage">no cleavage</option>
          <option value="Lys-C">Lys-C</option>
          <option value="Lys-N">Lys-N</option>
          <option value="Lys-C/P">Lys-C/P</option>
          <option value="PepsinA">PepsinA</option>
          <option value="Alpha-lytic protease">Alpha-lytic protease</option>
          <option value="2-iodobenzoate">2-iodobenzoate</option>
          <option value="iodosobenzoate">iodosobenzoate</option>
          <option value="staphylococcal protease/D">staphylococcal protease/D</option>
          <option value="proline-endopeptidase/HKR">proline-endopeptidase/HKR</option>
          <option value="unspecific cleavage">unspecific cleavage</option>
          <option value="leukocyte elastase">leukocyte elastase</option>
          <option value="proline endopeptidase">proline endopeptidase</option>
          <option value="glutamyl endopeptidase">glutamyl endopeptidase</option>
          <option value="Trypsin">Trypsin</option>
          <expand macro="list_string_san" name="name"/>
        </param>
        <param name="specificity" argument="-PeptideIndexing:enzyme:specificity" type="select" label="Specificity of the enzyme" help="Default: deduce from input..   'full': both internal cleavage sites must match..   'semi': one of two internal cleavage sites must match..   'none': allow all peptide hits no matter their context (enzyme is irrelevant)">
          <option value="auto" selected="true">auto</option>
          <option value="full">full</option>
          <option value="semi">semi</option>
          <option value="none">none</option>
          <expand macro="list_string_san" name="specificity"/>
        </param>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="opt_out_FLAG">opt_out (MSFragger optional output file)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="idxml"/>
    <data name="opt_out" label="${tool.name} on ${on_string}: opt_out" format="pepxml">
      <filter>OPTIONAL_OUTPUTS is not None and "opt_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_MSFraggerAdapter_7 -->
    <!-- TOPP_MSFraggerAdapter_8 -->
  </tests>
  <help><![CDATA[Peptide Identification with MSFragger.
Important note:
The Regents of the University of Michigan ("Michigan") grants us permission to redistribute    
the MS Fragger application developed by Michigan within the OpenMS Pipeline and make available 
for use on related service offerings supported by the University of Tubingen and the Center for
Integrative Bioinformatics.                                                                    
Per the license agreement the use of the pipeline and associated materials is for academic     
research, non-commercial or educational purposes. Any commercial use inquiries                 
must be directed to the University of Michigan Technology Transfer Office at                   
techtransfer@umich.edu. All right title and interest in MS Fragger shall remain with the       
University of Michigan.

For details, please see the supplied license file or                                           
https://raw.githubusercontent.com/OpenMS/THIRDPARTY/master/All/MSFragger/License.txt           



For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_MSFraggerAdapter.html]]></help>
  <expand macro="references"/>
</tool>
