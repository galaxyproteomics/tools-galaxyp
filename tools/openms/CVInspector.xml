<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [[for Developers]]-->
<tool id="CVInspector" name="CVInspector" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>A tool for visualization and validation of PSI mapping and CV files</description>
  <macros>
    <token name="@EXECUTABLE@">CVInspector</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir cv_files_cond.cv_files &&
#if $cv_files_cond.cv_files_select == "no"
mkdir ${' '.join(["'cv_files_cond.cv_files/%s'" % (i) for i, f in enumerate($cv_files_cond.cv_files) if f])} && 
${' '.join(["cp '%s' 'cv_files_cond.cv_files/%s/%s.%s' && " % (f, i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($cv_files_cond.cv_files) if f])}
#else
cp '$cv_files_cond.cv_files' 'cv_files_cond.cv_files/${re.sub("[^\w\-_]", "_", $cv_files_cond.cv_files.element_identifier)}.$gxy2omsext($cv_files_cond.cv_files.ext)' &&
#end if
mkdir mapping_file &&
cp '$mapping_file' 'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)' &&
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir html &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-cv_files
#if $cv_files_cond.cv_files_select == "no"
${' '.join(["'cv_files_cond.cv_files/%s/%s.%s'"%(i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($cv_files_cond.cv_files) if f])}
#else
'cv_files_cond.cv_files/${re.sub("[^\w\-_]", "_", $cv_files_cond.cv_files.element_identifier)}.$gxy2omsext($cv_files_cond.cv_files.ext)'
#end if
-mapping_file
'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)'
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -html
  'html/output.${gxy2omsext("html")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'html/output.${gxy2omsext("html")}' '$html'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <conditional name="cv_files_cond">
      <param name="cv_files_select" type="select" label="Run tool in batch mode for -cv_files">
        <option value="no">No: process all datasets jointly</option>
        <option value="yes">Yes: process each dataset in an independent job</option>
      </param>
      <when value="no">
        <param argument="-cv_files" type="data" format="obo" multiple="true" label="List of ontology files in OBO format" help=" select obo data sets(s)"/>
      </when>
      <when value="yes">
        <param argument="-cv_files" type="data" format="obo" label="List of ontology files in OBO format" help=" select obo data sets(s)"/>
      </when>
    </conditional>
    <param argument="-cv_names" type="text" value="" label="List of identifiers (one for each ontology file)" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val" name="cv_names"/>
      <expand macro="list_string_san" name="cv_names"/>
    </param>
    <param argument="-mapping_file" type="data" format="xml" label="Mapping file in CVMapping (XML) format" help=" select xml data sets(s)"/>
    <param argument="-ignore_cv" type="text" value="UO PATO BTO" label="A list of CV identifiers which should be ignored" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val" name="ignore_cv"/>
      <expand macro="list_string_san" name="ignore_cv"/>
    </param>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="html_FLAG">html (Writes an HTML version of the mapping file with annotated CV terms)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="html" label="${tool.name} on ${on_string}: html" format="html">
      <filter>OPTIONAL_OUTPUTS is not None and "html_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- test with https://raw.githubusercontent.com/HUPO-PSI/mzIdentML/master/cv/XLMOD.obo listed here https://www.psidev.info/groups/controlled-vocabularies, mapping file from share/OpenMS/MAPPING/ms-mapping.xml -->
    <test expect_num_outputs="1">
      <param name="adv_opts|test" value="true"/>
      <param name="cv_files" ftype="obo" value="CHEMISTRY/XLMOD.obo"/>
      <param name="cv_names" value="XLMOD"/>
      <param name="mapping_file" value="MAPPING/ms-mapping.xml"/>
      <param name="OPTIONAL_OUTPUTS" value="html_FLAG"/>
      <output name="html" ftype="html" value="CVInspector.html"/>
    </test>
  </tests>
  <help><![CDATA[A tool for visualization and validation of PSI mapping and CV files.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_CVInspector.html]]></help>
  <expand macro="references"/>
</tool>
