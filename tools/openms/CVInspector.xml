<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="CVInspector" name="CVInspector" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>A tool for visualization and validation of PSI mapping and CV files.</description>
  <macros>
    <token name="@EXECUTABLE@">CVInspector</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir cv_files &&
${ ' '.join(["ln -s '%s' 'cv_files/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $cv_files if _]) }
#if $mapping_file:
  mkdir mapping_file &&
  ln -s '$mapping_file' 'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)' &&
#end if
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir html &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-cv_files
${' '.join(["'cv_files/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $cv_files if _])}
#if $mapping_file:
  -mapping_file
  'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)'
#end if
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -html
  'html/output.${gxy2omsext("html")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "html_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'html/output.${gxy2omsext("html")}' '$html'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="cv_files" argument="-cv_files" type="data" format="obo" multiple="true" optional="false" label="List of ontology files in OBO format" help=" select obo data sets(s)"/>
    <param name="cv_names" argument="-cv_names" type="text" optional="false" value="" label="List of identifiers (one for each ontology file)" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val"/>
      <expand macro="list_string_san"/>
    </param>
    <param name="mapping_file" argument="-mapping_file" type="data" format="xml" optional="true" label="Mapping file in CVMapping (XML) format" help=" select xml data sets(s)"/>
    <param name="ignore_cv" argument="-ignore_cv" type="text" optional="true" value="UO PATO BTO" label="A list of CV identifiers which should be ignored" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val"/>
      <expand macro="list_string_san"/>
    </param>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="html_FLAG">html (Writes an HTML version of the mapping file with annotated CV terms)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="html" label="${tool.name} on ${on_string}: html" format="html">
      <filter>OPTIONAL_OUTPUTS is not None and "html_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_CVInspector"/>
    <expand macro="manutest_CVInspector"/>
  </tests>
  <help><![CDATA[A tool for visualization and validation of PSI mapping and CV files.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_CVInspector.html]]></help>
  <expand macro="references"/>
</tool>
