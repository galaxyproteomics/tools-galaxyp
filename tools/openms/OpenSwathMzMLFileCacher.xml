<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Targeted Experiments and OpenSWATH]-->
<tool id="OpenSwathMzMLFileCacher" name="OpenSwathMzMLFileCacher" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>This tool caches the spectra and chromatogram data of an mzML to disk</description>
  <macros>
    <token name="@EXECUTABLE@">OpenSwathMzMLFileCacher</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${out_type}'

## Postprocessing
&& mv 'out/output.${out_type}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="mzml,sqmass" label="Input mzML file" help=" select mzml,sqmass data sets(s)"/>
    <param argument="-out_type" type="select" label="Output file type -- default: determined from file extension or content" help="Note: that not all conversion paths work or make sense">
      <option value="mzML">mzml</option>
      <option value="sqMass">sqmass</option>
      <validator type="expression" message="A value needs to be selected">value != "select a value"</validator>
      <expand macro="list_string_san" name="out_type"/>
    </param>
    <param argument="-lossy_compression" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use numpress compression to achieve optimally small file size (attention: may cause small loss of precision; only for mzML data)" help=""/>
    <param argument="-full_meta" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Write full meta information into sqMass file (may require large amounts of memory)" help=""/>
    <expand macro="adv_opts_macro">
      <param argument="-lossy_mass_accuracy" type="float" value="-1.0" label="Desired (absolute) m/z accuracy for lossy compression" help="(e.g. use 0.0001 for a mass accuracy of 0.2 ppm at 500 m/z, default uses -1.0 for maximal accuracy)"/>
      <param argument="-process_lowmemory" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Whether to process the file on the fly without loading the whole file into memory first (only for conversions of mzXML/mzML to mzML)" help="Note: this flag will prevent conversion from spectra to chromatograms"/>
      <param argument="-lowmem_batchsize" type="integer" min="0" value="500" label="The batch size of the low memory conversion" help=""/>
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="mzml">
      <change_format>
        <when input="out_type" value="sqMass" format="sqmass"/>
      </change_format>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_1_step1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_1_input.mzML"/>
      <output name="out" value="OpenSwathMzMLFileCacher_1_output_1.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_2_step1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_2_input.chrom.mzML"/>
      <output name="out" value="OpenSwathMzMLFileCacher_2_output_1.chrom.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_3_step1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="0.0001"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_1_input.mzML"/>
      <output name="out" value="OpenSwathMzMLFileCacher_3_input.tmp.sqMass" compare="sim_size" delta_frac="0.7" ftype="sqmass"/>
      <param name="out_type" value="sqMass"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_3_step2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_3_input.tmp.sqMass"/>
      <output name="out" value="OpenSwathMzMLFileCacher_3_output.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_4_step1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_2_input.chrom.mzML"/>
      <output name="out" value="OpenSwathMzMLFileCacher_4_input.tmp.sqMass" compare="sim_size" delta_frac="0.7" ftype="sqmass"/>
      <param name="out_type" value="sqMass"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_4_step2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_4_input.tmp.sqMass"/>
      <output name="out" value="OpenSwathMzMLFileCacher_4_output.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathMzMLFileCacher_test_5_step1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="true"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathMzMLFileCacher_1_input.mzML"/>
      <output name="out" value="OpenSwathMzMLFileCacher_1_output_1.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathAnalyzer_test_3_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathAnalyzer_2_swathfile.mzML"/>
      <output name="out" value="OpenSwathAnalyzer_3_swathfile.mzML.cached.tmp" compare="sim_size" delta_frac="0.7"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathAnalyzer_test_4_prepare1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathAnalyzer_2_swathfile.mzML"/>
      <output name="out" value="OpenSwathAnalyzer_4_swathfile.mzML.cached.tmp" compare="sim_size" delta_frac="0.7"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathAnalyzer_test_4_prepare2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="-1.0"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathAnalyzer_1_input_chrom.mzML"/>
      <output name="out" value="OpenSwathAnalyzer_4_input_chrom.mzML.cached.tmp" compare="sim_size" delta_frac="0.7"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathWorkflow_14_step2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="0.0001"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathWorkflow_14.chrom.tmp.sqMass"/>
      <output name="out" value="OpenSwathWorkflow_14.chrom.tmp.mzML" compare="sim_size" delta_frac="0.7" ftype="mzml"/>
      <param name="out_type" value="mzML"/>
      <param name="lossy_compression" value="false"/>
      <param name="full_meta" value="false"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_OpenSwathWorkflow_16_prepare -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="lossy_mass_accuracy" value="0.0001"/>
        <param name="process_lowmemory" value="false"/>
        <param name="lowmem_batchsize" value="500"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="OpenSwathWorkflow_1_input.mzML"/>
      <output name="out" value="OpenSwathWorkflow_16_input.sqMass" compare="sim_size" delta_frac="0.7" ftype="sqmass"/>
      <param name="out_type" value="sqMass"/>
      <param name="lossy_compression" value="true"/>
      <param name="full_meta" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[This tool caches the spectra and chromatogram data of an mzML to disk.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_OpenSwathMzMLFileCacher.html]]></help>
  <expand macro="references"/>
</tool>
