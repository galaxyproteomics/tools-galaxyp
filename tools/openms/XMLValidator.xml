<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [[for Developers]]-->
<tool id="XMLValidator" name="XMLValidator" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Validates XML files against an XSD schema</description>
  <macros>
    <token name="@EXECUTABLE@">XMLValidator</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#if $schema:
  mkdir schema &&
  cp '$schema' 'schema/${re.sub("[^\w\-_]", "_", $schema.element_identifier)}.$gxy2omsext($schema.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#if $schema:
  -schema
  'schema/${re.sub("[^\w\-_]", "_", $schema.element_identifier)}.$gxy2omsext($schema.ext)'
#end if
| tee '$stdout'

## Postprocessing
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="consensusxml,featurexml,idxml,mzdata,mzid,mzml,mzxml,pepxml,traml,xml" label="file to validate" help=" select consensusxml,featurexml,idxml,mzdata,mzid,mzml,mzxml,pepxml,traml,xml data sets(s)"/>
    <param argument="-schema" type="data" format="xsd" optional="true" label="schema to validate against" help="If no schema is given, the file is validated against the latest schema of the file type select xsd data sets(s)"/>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <test expect_num_outputs="1">
      <!-- just chosen an arbitrary input and autgenerated output-->
      <param name="adv_opts|test" value="true"/>
      <param name="in" ftype="mzml" value="FileFilter_1_input.mzML"/>
      <output name="stdout" ftype="txt" value="XMLValidator.stdout" lines_diff="4">
        <assert_contents>
          <has_text text="Success: the file is valid!"/>
        </assert_contents>
      </output>
    </test>
    <test expect_num_outputs="1">
      <!-- just chosen an arbitrary input and autgenerated output-->
      <param name="adv_opts|test" value="true"/>
      <param name="in" ftype="mzml" value="FileFilter_1_input.mzML"/>
      <param name="schema" ftype="xsd" location="https://raw.githubusercontent.com/HUPO-PSI/mzML/master/schema/schema_1.1/mzML1.1.0.xsd"/>
      <output name="stdout" ftype="txt" value="XMLValidator.stdout" lines_diff="4">
        <assert_contents>
          <has_text text="Success: the file is valid!"/>
        </assert_contents>
      </output>
    </test>
  </tests>
  <help><![CDATA[Validates XML files against an XSD schema.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_XMLValidator.html]]></help>
  <expand macro="references"/>
</tool>
