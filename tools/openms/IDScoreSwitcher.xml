<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Identification Processing]-->
<tool id="IDScoreSwitcher" name="IDScoreSwitcher" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Switches between different scores of peptide or protein hits in identification data</description>
  <macros>
    <token name="@EXECUTABLE@">IDScoreSwitcher</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${gxy2omsext("idxml")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("idxml")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="idxml" label="Input file" help=" select idxml data sets(s)"/>
    <param argument="-new_score" type="text" optional="true" value="" label="Name of the meta value to use as the new score" help="">
      <expand macro="list_string_san" name="new_score"/>
    </param>
    <param argument="-new_score_orientation" type="select" optional="true" label="Orientation of the new score (are higher or lower values better?)" help="">
      <option value="lower_better">lower_better</option>
      <option value="higher_better">higher_better</option>
      <expand macro="list_string_san" name="new_score_orientation"/>
    </param>
    <param argument="-new_score_type" type="text" optional="true" value="" label="Name to use as the type of the new score (default: same as 'new_score')" help="">
      <expand macro="list_string_san" name="new_score_type"/>
    </param>
    <param argument="-old_score" type="text" optional="true" value="" label="Name to use for the meta value storing the old score (default: old score type)" help="">
      <expand macro="list_string_san" name="old_score"/>
    </param>
    <param argument="-proteins" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Apply to protein scores instead of PSM scores" help=""/>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="idxml"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_IDScoreSwitcher_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="IDFileConverter_12_output.idXML"/>
      <output name="out" value="IDFileConverter_13_output.idXML" compare="sim_size" delta_frac="0.7" ftype="idxml"/>
      <param name="new_score" value="Percolator_PEP"/>
      <param name="new_score_orientation" value="lower_better"/>
      <param name="new_score_type" value="Posterior Error Probability"/>
      <param name="old_score" value="Percolator_qvalue"/>
      <param name="proteins" value="false"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_IDScoreSwitcher_2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <param name="in" value="IDScoreSwitcher_2_input.idXML"/>
      <output name="out" value="IDScoreSwitcher_2_output.idXML" compare="sim_size" delta_frac="0.7" ftype="idxml"/>
      <param name="new_score" value="Posterior Probability_score"/>
      <param name="new_score_orientation" value="higher_better"/>
      <param name="new_score_type" value="Posterior Probability"/>
      <param name="old_score" value=""/>
      <param name="proteins" value="true"/>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Switches between different scores of peptide or protein hits in identification data


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_IDScoreSwitcher.html]]></help>
  <expand macro="references"/>
</tool>
