<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="SemanticValidator" name="SemanticValidator" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>SemanticValidator for semantically validating certain XML files.</description>
  <macros>
    <token name="@EXECUTABLE@">SemanticValidator</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir mapping_file &&
ln -s '$mapping_file' 'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)' &&
#if $cv:
  mkdir cv &&
  ${ ' '.join(["ln -s '%s' 'cv/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $cv if _]) }
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-mapping_file
'mapping_file/${re.sub("[^\w\-_]", "_", $mapping_file.element_identifier)}.$gxy2omsext($mapping_file.ext)'
#if $cv:
  -cv
  ${' '.join(["'cv/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $cv if _])}
#end if
| tee '$stdout'

## Postprocessing
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzdata,mzid,mzml,traml,xml" optional="false" label="Input file (any xml file)" help=" select mzdata,mzid,mzml,traml,xml data sets(s)"/>
    <param name="mapping_file" argument="-mapping_file" type="data" format="xml" optional="false" label="Mapping file which is used to semantically validate the given XML file against this mapping file (see 'share/OpenMS/MAPPING' for templates)" help=" select xml data sets(s)"/>
    <param name="cv" argument="-cv" type="data" format="obo" multiple="true" optional="true" label="Controlled Vocabulary files containg the CV terms (if left empty, a set of default files are used)" help=" select obo data sets(s)"/>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_SemanticValidator"/>
    <expand macro="manutest_SemanticValidator"/>
  </tests>
  <help><![CDATA[SemanticValidator for semantically validating certain XML files.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_SemanticValidator.html]]></help>
  <expand macro="references"/>
</tool>
