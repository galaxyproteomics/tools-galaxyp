<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Identification Processing]-->
<tool id="Epifany" name="Epifany" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Runs a Bayesian protein inference</description>
  <macros>
    <token name="@EXECUTABLE@">Epifany</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in_cond.in &&
#if $in_cond.in_select == "no"
mkdir ${' '.join(["'in_cond.in/%s'" % (i) for i, f in enumerate($in_cond.in) if f])} && 
${' '.join(["cp '%s' 'in_cond.in/%s/%s.%s' && " % (f, i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($in_cond.in) if f])}
#else
cp '$in_cond.in' 'in_cond.in/${re.sub("[^\w\-_]", "_", $in_cond.in.element_identifier)}.$gxy2omsext($in_cond.in.ext)' &&
#end if
#if $exp_design:
  mkdir exp_design &&
  cp '$exp_design' 'exp_design/${re.sub("[^\w\-_]", "_", $exp_design.element_identifier)}.$gxy2omsext($exp_design.ext)' &&
#end if
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
#if $in_cond.in_select == "no"
${' '.join(["'in_cond.in/%s/%s.%s'"%(i, re.sub('[^\w\-_]', '_', f.element_identifier), $gxy2omsext(f.ext)) for i, f in enumerate($in_cond.in) if f])}
#else
'in_cond.in/${re.sub("[^\w\-_]", "_", $in_cond.in.element_identifier)}.$gxy2omsext($in_cond.in.ext)'
#end if
#if $exp_design:
  -exp_design
  'exp_design/${re.sub("[^\w\-_]", "_", $exp_design.element_identifier)}.$gxy2omsext($exp_design.ext)'
#end if
-out
'out/output.${out_type}'

## Postprocessing
&& mv 'out/output.${out_type}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <conditional name="in_cond">
      <param name="in_select" type="select" label="Run tool in batch mode for -in">
        <option value="no">No: process all datasets jointly</option>
        <option value="yes">Yes: process each dataset in an independent job</option>
      </param>
      <when value="no">
        <param argument="-in" type="data" format="consensusxml,idxml" multiple="true" label="Input: identification results" help=" select consensusxml,idxml data sets(s)"/>
      </when>
      <when value="yes">
        <param argument="-in" type="data" format="consensusxml,idxml" label="Input: identification results" help=" select consensusxml,idxml data sets(s)"/>
      </when>
    </conditional>
    <param argument="-exp_design" type="data" format="tabular" optional="true" label="(Currently unused) Input: experimental design" help=" select tabular data sets(s)"/>
    <param argument="-out_type" type="select" label="Output type: auto detected by file extension but can be overwritten here" help="">
      <option value="consensusXML">consensusxml</option>
      <option value="idXML">idxml</option>
      <validator type="expression" message="A value needs to be selected">value != "select a value"</validator>
      <expand macro="list_string_san" name="out_type"/>
    </param>
    <param argument="-protein_fdr" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Additionally calculate the target-decoy FDR on protein-level based on the posteriors" help=""/>
    <param argument="-greedy_group_resolution" type="select" label="Post-process inference output with greedy resolution of shared peptides based on the parent protein probabilities" help="Also adds the resolved ambiguity groups to output">
      <option value="none" selected="true">none</option>
      <option value="remove_associations_only">remove_associations_only</option>
      <option value="remove_proteins_wo_evidence">remove_proteins_wo_evidence</option>
      <expand macro="list_string_san" name="greedy_group_resolution"/>
    </param>
    <param argument="-max_psms_extreme_probability" type="float" value="1.0" label="Set PSMs with probability higher than this to this maximum probability" help=""/>
    <section name="algorithm" title="Parameters for the Algorithm section" help="" expanded="false">
      <param name="psm_probability_cutoff" argument="-algorithm:psm_probability_cutoff" type="float" min="0.0" max="1.0" value="0.001" label="Remove PSMs with probabilities less than this cutoff" help=""/>
      <param name="top_PSMs" argument="-algorithm:top_PSMs" type="integer" min="0" value="1" label="Consider only top X PSMs per spectrum" help="0 considers all"/>
      <param name="keep_best_PSM_only" argument="-algorithm:keep_best_PSM_only" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Epifany uses the best PSM per peptide for inference" help="Discard the rest (true) or keepe.g. for quantification/reporting?"/>
      <param name="update_PSM_probabilities" argument="-algorithm:update_PSM_probabilities" type="boolean" truevalue="true" falsevalue="false" checked="true" label="(Experimental:) Update PSM probabilities with their posteriors under consideration of the protein probabilities" help=""/>
      <param name="user_defined_priors" argument="-algorithm:user_defined_priors" type="boolean" truevalue="true" falsevalue="false" checked="false" label="(Experimental:) Uses the current protein scores as user-defined priors" help=""/>
      <param name="annotate_group_probabilities" argument="-algorithm:annotate_group_probabilities" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Annotates group probabilities for indistinguishable protein groups (indistinguishable by experimentally observed PSMs)" help=""/>
      <param name="use_ids_outside_features" argument="-algorithm:use_ids_outside_features" type="boolean" truevalue="true" falsevalue="false" checked="false" label="(Only consensusXML) Also use IDs without associated features for inference?" help=""/>
      <section name="model_parameters" title="Model parameters for the Bayesian network" help="" expanded="false">
        <param name="prot_prior" argument="-algorithm:model_parameters:prot_prior" type="float" min="-1.0" max="1.0" value="-1.0" label="Protein prior probability ('gamma' parameter)" help="Negative values enable grid search for this param"/>
        <param name="pep_emission" argument="-algorithm:model_parameters:pep_emission" type="float" min="-1.0" max="1.0" value="-1.0" label="Peptide emission probability ('alpha' parameter)" help="Negative values enable grid search for this param"/>
        <param name="pep_spurious_emission" argument="-algorithm:model_parameters:pep_spurious_emission" type="float" min="-1.0" max="1.0" value="-1.0" label="Spurious peptide identification probability ('beta' parameter)" help="Usually much smaller than emission from proteins. Negative values enable grid search for this param"/>
        <param name="pep_prior" argument="-algorithm:model_parameters:pep_prior" type="float" min="0.0" max="1.0" value="0.1" label="Peptide prior probability (experimental, should be covered by combinations of the other params)" help=""/>
        <param name="regularize" argument="-algorithm:model_parameters:regularize" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Regularize the number of proteins that produce a peptide together (experimental, should be activated when using higher p-norms)" help=""/>
        <param name="extended_model" argument="-algorithm:model_parameters:extended_model" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Uses information from different peptidoforms also across runs (automatically activated if an experimental design is given!)" help=""/>
      </section>
      <section name="loopy_belief_propagation" title="Settings for the loopy belief propagation algorithm" help="" expanded="false">
        <param name="scheduling_type" argument="-algorithm:loopy_belief_propagation:scheduling_type" type="select" label="(Not used yet) How to pick the next message: priority = based on difference to last message (higher = more important)" help="fifo = first in first out. subtree = message passing follows a random spanning tree in each iteration">
          <option value="priority" selected="true">priority</option>
          <option value="fifo">fifo</option>
          <option value="subtree">subtree</option>
          <expand macro="list_string_san" name="scheduling_type"/>
        </param>
        <param name="convergence_threshold" argument="-algorithm:loopy_belief_propagation:convergence_threshold" type="float" min="0.0" max="1.0" value="1e-05" label="Initial threshold under which MSE difference a message is considered to be converged" help=""/>
        <param name="dampening_lambda" argument="-algorithm:loopy_belief_propagation:dampening_lambda" type="float" min="0.0" max="0.49999" value="0.001" label="Initial value for how strongly should messages be updated in each step" help="0 = new message overwrites old completely (no dampening; only recommended for trees),0.5 = equal contribution of old and new message (stay below that),In-between it will be a convex combination of both. Prevents oscillations but hinders convergence"/>
        <param name="max_nr_iterations" argument="-algorithm:loopy_belief_propagation:max_nr_iterations" type="integer" value="2147483647" label="(Usually auto-determined by estimated but you can set a hard limit here)" help="If not all messages converge, how many iterations should be done at max per connected component?"/>
        <param name="p_norm_inference" argument="-algorithm:loopy_belief_propagation:p_norm_inference" type="float" value="1.0" label="P-norm used for marginalization of multidimensional factors" help="1 == sum-product inference (all configurations vote equally) (default),&lt;= 0 == infinity = max-product inference (only best configurations propagate)The higher the value the more important high probability configurations get"/>
      </section>
      <section name="param_optimize" title="Settings for the parameter optimization" help="" expanded="false">
        <param name="aucweight" argument="-algorithm:param_optimize:aucweight" type="float" min="0.0" max="1.0" value="0.3" label="How important is target decoy AUC vs calibration of the posteriors" help="0 = maximize calibration only, 1 = maximize AUC only, between = convex combination"/>
        <param name="conservative_fdr" argument="-algorithm:param_optimize:conservative_fdr" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use (D+1)/(T) instead of (D+1)/(T+D) for parameter estimation" help=""/>
        <param name="regularized_fdr" argument="-algorithm:param_optimize:regularized_fdr" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use a regularized FDR for proteins without unique peptides" help=""/>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-conservative_fdr" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use (D+1)/(T) instead of (D+1)/(T+D) for reporting protein FDRs" help=""/>
      <param argument="-picked_fdr" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use picked protein FDRs" help=""/>
      <param argument="-picked_decoy_string" type="text" optional="true" value="" label="If using picked protein FDRs, which decoy string was used" help="Leave blank for auto-detection">
        <expand macro="list_string_san" name="picked_decoy_string"/>
      </param>
      <param argument="-picked_decoy_prefix" type="select" label="If using picked protein FDRs, was the decoy string a prefix or suffix" help="Ignored during auto-detection">
        <option value="prefix" selected="true">prefix</option>
        <option value="suffix">suffix</option>
        <expand macro="list_string_san" name="picked_decoy_prefix"/>
      </param>
      <param argument="-min_psms_extreme_probability" type="float" value="0.0" label="Set PSMs with probability lower than this to this minimum probability" help=""/>
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="consensusxml">
      <change_format>
        <when input="out_type" value="idXML" format="idxml"/>
      </change_format>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- TOPP_Epifany_1 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="conservative_fdr" value="true"/>
        <param name="picked_fdr" value="true"/>
        <param name="picked_decoy_string" value=""/>
        <param name="picked_decoy_prefix" value="prefix"/>
        <param name="min_psms_extreme_probability" value="0.0"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="FidoAdapter_1_input.idXML"/>
      </conditional>
      <output name="out" value="Epifany_1_out.idXML" compare="sim_size" delta_frac="0.7" ftype="idxml"/>
      <param name="out_type" value="idXML"/>
      <param name="protein_fdr" value="false"/>
      <param name="greedy_group_resolution" value="none"/>
      <param name="max_psms_extreme_probability" value="1.0"/>
      <section name="algorithm">
        <param name="psm_probability_cutoff" value="0.001"/>
        <param name="top_PSMs" value="1"/>
        <param name="keep_best_PSM_only" value="true"/>
        <param name="update_PSM_probabilities" value="true"/>
        <param name="user_defined_priors" value="false"/>
        <param name="annotate_group_probabilities" value="true"/>
        <param name="use_ids_outside_features" value="false"/>
        <section name="model_parameters">
          <param name="prot_prior" value="0.7"/>
          <param name="pep_emission" value="0.1"/>
          <param name="pep_spurious_emission" value="0.001"/>
          <param name="pep_prior" value="0.1"/>
          <param name="regularize" value="false"/>
          <param name="extended_model" value="false"/>
        </section>
        <section name="loopy_belief_propagation">
          <param name="scheduling_type" value="priority"/>
          <param name="convergence_threshold" value="1e-05"/>
          <param name="dampening_lambda" value="0.001"/>
          <param name="max_nr_iterations" value="2147483647"/>
          <param name="p_norm_inference" value="1.0"/>
        </section>
        <section name="param_optimize">
          <param name="aucweight" value="0.3"/>
          <param name="conservative_fdr" value="true"/>
          <param name="regularized_fdr" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_Epifany_2 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="conservative_fdr" value="true"/>
        <param name="picked_fdr" value="true"/>
        <param name="picked_decoy_string" value=""/>
        <param name="picked_decoy_prefix" value="prefix"/>
        <param name="min_psms_extreme_probability" value="0.0"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="Epifany_2_input.consensusXML"/>
      </conditional>
      <output name="out" value="Epifany_2_out.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <param name="out_type" value="consensusXML"/>
      <param name="protein_fdr" value="false"/>
      <param name="greedy_group_resolution" value="none"/>
      <param name="max_psms_extreme_probability" value="1.0"/>
      <section name="algorithm">
        <param name="psm_probability_cutoff" value="0.001"/>
        <param name="top_PSMs" value="1"/>
        <param name="keep_best_PSM_only" value="true"/>
        <param name="update_PSM_probabilities" value="true"/>
        <param name="user_defined_priors" value="false"/>
        <param name="annotate_group_probabilities" value="true"/>
        <param name="use_ids_outside_features" value="false"/>
        <section name="model_parameters">
          <param name="prot_prior" value="0.7"/>
          <param name="pep_emission" value="0.1"/>
          <param name="pep_spurious_emission" value="0.001"/>
          <param name="pep_prior" value="0.1"/>
          <param name="regularize" value="false"/>
          <param name="extended_model" value="false"/>
        </section>
        <section name="loopy_belief_propagation">
          <param name="scheduling_type" value="priority"/>
          <param name="convergence_threshold" value="1e-05"/>
          <param name="dampening_lambda" value="0.001"/>
          <param name="max_nr_iterations" value="2147483647"/>
          <param name="p_norm_inference" value="1.0"/>
        </section>
        <section name="param_optimize">
          <param name="aucweight" value="0.3"/>
          <param name="conservative_fdr" value="true"/>
          <param name="regularized_fdr" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_Epifany_3 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="conservative_fdr" value="true"/>
        <param name="picked_fdr" value="true"/>
        <param name="picked_decoy_string" value=""/>
        <param name="picked_decoy_prefix" value="prefix"/>
        <param name="min_psms_extreme_probability" value="0.0"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="Epifany_2_input.consensusXML"/>
      </conditional>
      <output name="out" value="Epifany_3_out.consensusXML" compare="sim_size" delta_frac="0.7" ftype="consensusxml"/>
      <param name="out_type" value="consensusXML"/>
      <param name="protein_fdr" value="false"/>
      <param name="greedy_group_resolution" value="none"/>
      <param name="max_psms_extreme_probability" value="1.0"/>
      <section name="algorithm">
        <param name="psm_probability_cutoff" value="0.001"/>
        <param name="top_PSMs" value="1"/>
        <param name="keep_best_PSM_only" value="false"/>
        <param name="update_PSM_probabilities" value="true"/>
        <param name="user_defined_priors" value="false"/>
        <param name="annotate_group_probabilities" value="true"/>
        <param name="use_ids_outside_features" value="false"/>
        <section name="model_parameters">
          <param name="prot_prior" value="0.7"/>
          <param name="pep_emission" value="0.1"/>
          <param name="pep_spurious_emission" value="0.001"/>
          <param name="pep_prior" value="0.1"/>
          <param name="regularize" value="false"/>
          <param name="extended_model" value="false"/>
        </section>
        <section name="loopy_belief_propagation">
          <param name="scheduling_type" value="priority"/>
          <param name="convergence_threshold" value="1e-05"/>
          <param name="dampening_lambda" value="0.001"/>
          <param name="max_nr_iterations" value="2147483647"/>
          <param name="p_norm_inference" value="1.0"/>
        </section>
        <section name="param_optimize">
          <param name="aucweight" value="0.3"/>
          <param name="conservative_fdr" value="true"/>
          <param name="regularized_fdr" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_Epifany_4 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="conservative_fdr" value="true"/>
        <param name="picked_fdr" value="true"/>
        <param name="picked_decoy_string" value=""/>
        <param name="picked_decoy_prefix" value="prefix"/>
        <param name="min_psms_extreme_probability" value="0.0"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="FidoAdapter_1_input_singlerun.idXML"/>
      </conditional>
      <output name="out" value="Epifany_4_out_singlerun.idXML" compare="sim_size" delta_frac="0.7" ftype="idxml"/>
      <param name="out_type" value="idXML"/>
      <param name="protein_fdr" value="false"/>
      <param name="greedy_group_resolution" value="remove_proteins_wo_evidence"/>
      <param name="max_psms_extreme_probability" value="1.0"/>
      <section name="algorithm">
        <param name="psm_probability_cutoff" value="0.001"/>
        <param name="top_PSMs" value="1"/>
        <param name="keep_best_PSM_only" value="true"/>
        <param name="update_PSM_probabilities" value="true"/>
        <param name="user_defined_priors" value="false"/>
        <param name="annotate_group_probabilities" value="true"/>
        <param name="use_ids_outside_features" value="false"/>
        <section name="model_parameters">
          <param name="prot_prior" value="0.7"/>
          <param name="pep_emission" value="0.1"/>
          <param name="pep_spurious_emission" value="0.001"/>
          <param name="pep_prior" value="0.1"/>
          <param name="regularize" value="false"/>
          <param name="extended_model" value="false"/>
        </section>
        <section name="loopy_belief_propagation">
          <param name="scheduling_type" value="priority"/>
          <param name="convergence_threshold" value="1e-05"/>
          <param name="dampening_lambda" value="0.001"/>
          <param name="max_nr_iterations" value="2147483647"/>
          <param name="p_norm_inference" value="1.0"/>
        </section>
        <section name="param_optimize">
          <param name="aucweight" value="0.3"/>
          <param name="conservative_fdr" value="true"/>
          <param name="regularized_fdr" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
    <!-- TOPP_Epifany_5 -->
    <test expect_num_outputs="2">
      <section name="adv_opts">
        <param name="conservative_fdr" value="true"/>
        <param name="picked_fdr" value="false"/>
        <param name="picked_decoy_string" value=""/>
        <param name="picked_decoy_prefix" value="prefix"/>
        <param name="min_psms_extreme_probability" value="0.0"/>
        <param name="force" value="false"/>
        <param name="test" value="true"/>
      </section>
      <conditional name="in_cond">
        <param name="in" value="FidoAdapter_1_input_singlerun.idXML"/>
      </conditional>
      <output name="out" value="Epifany_4_out_singlerun_fdr.idXML" compare="sim_size" delta_frac="0.7" ftype="idxml"/>
      <param name="out_type" value="idXML"/>
      <param name="protein_fdr" value="true"/>
      <param name="greedy_group_resolution" value="remove_proteins_wo_evidence"/>
      <param name="max_psms_extreme_probability" value="1.0"/>
      <section name="algorithm">
        <param name="psm_probability_cutoff" value="0.001"/>
        <param name="top_PSMs" value="1"/>
        <param name="keep_best_PSM_only" value="true"/>
        <param name="update_PSM_probabilities" value="true"/>
        <param name="user_defined_priors" value="false"/>
        <param name="annotate_group_probabilities" value="true"/>
        <param name="use_ids_outside_features" value="false"/>
        <section name="model_parameters">
          <param name="prot_prior" value="0.7"/>
          <param name="pep_emission" value="0.1"/>
          <param name="pep_spurious_emission" value="0.001"/>
          <param name="pep_prior" value="0.1"/>
          <param name="regularize" value="false"/>
          <param name="extended_model" value="false"/>
        </section>
        <section name="loopy_belief_propagation">
          <param name="scheduling_type" value="priority"/>
          <param name="convergence_threshold" value="1e-05"/>
          <param name="dampening_lambda" value="0.001"/>
          <param name="max_nr_iterations" value="2147483647"/>
          <param name="p_norm_inference" value="1.0"/>
        </section>
        <section name="param_optimize">
          <param name="aucweight" value="0.3"/>
          <param name="conservative_fdr" value="true"/>
          <param name="regularized_fdr" value="true"/>
        </section>
      </section>
      <param name="OPTIONAL_OUTPUTS" value="ctd_out_FLAG"/>
      <output name="ctd_out" ftype="xml">
        <assert_contents>
          <is_valid_xml/>
        </assert_contents>
      </output>
      <assert_stdout>
        <has_text_matching expression="@EXECUTABLE@ took .* \(wall\), .* \(CPU\), .* \(system\), .* \(user\)(; Peak Memory Usage: 32 MB)?."/>
      </assert_stdout>
    </test>
  </tests>
  <help><![CDATA[Runs a Bayesian protein inference.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_Epifany.html]]></help>
  <expand macro="references"/>
</tool>
