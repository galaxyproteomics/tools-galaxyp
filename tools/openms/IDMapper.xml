<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [ID Processing]-->
<tool id="IDMapper" name="IDMapper" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Assigns protein/peptide identifications to features or consensus features.</description>
  <macros>
    <token name="@EXECUTABLE@">IDMapper</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir id &&
ln -s '$id' 'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)' &&
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir out &&
#if $spectra._in:
  mkdir spectra.in &&
  ln -s '$spectra._in' 'spectra.in/${re.sub("[^\w\-_]", "_", $spectra._in.element_identifier)}.$gxy2omsext($spectra._in.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-id
'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)'
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-out
'out/output.${in.ext}'
#if $spectra._in:
  -spectra:in
  'spectra.in/${re.sub("[^\w\-_]", "_", $spectra._in.element_identifier)}.$gxy2omsext($spectra._in.ext)'
#end if

## Postprocessing
&& mv 'out/output.${in.ext}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="id" argument="-id" type="data" format="idxml,mzid" optional="false" label="Protein/peptide identifications file" help=" select idxml,mzid data sets(s)"/>
    <param name="in" argument="-in" type="data" format="consensusxml,featurexml,mzq" optional="false" label="Feature map/consensus map file" help=" select consensusxml,featurexml,mzq data sets(s)"/>
    <param name="rt_tolerance" argument="-rt_tolerance" type="float" optional="false" min="0.0" value="5.0" label="RT tolerance (in seconds) for the matching of peptide identifications and (consensus) features" help="Tolerance is understood as 'plus or minus x', so the matching range increases by twice the given value"/>
    <param name="mz_tolerance" argument="-mz_tolerance" type="float" optional="false" min="0.0" value="20.0" label="m/z tolerance (in ppm or Da) for the matching of peptide identifications and (consensus) features" help="Tolerance is understood as 'plus or minus x', so the matching range increases by twice the given value"/>
    <param name="mz_measure" argument="-mz_measure" display="checkboxes" type="select" optional="false" label="Unit of 'mz_tolerance'" help="">
      <option value="ppm" selected="true">ppm</option>
      <option value="Da">Da</option>
      <expand macro="list_string_san" name="mz_measure"/>
    </param>
    <param name="mz_reference" argument="-mz_reference" display="checkboxes" type="select" optional="false" label="Source of m/z values for peptide identifications" help="If 'precursor', the precursor-m/z from the idXML is used. If 'peptide',. masses are computed from the sequences of peptide hits; in this case, an identification matches if any of its hits matches.. ('peptide' should be used together with 'feature:use_centroid_mz' to avoid false-positive matches.)">
      <option value="precursor">precursor</option>
      <option value="peptide" selected="true">peptide</option>
      <expand macro="list_string_san" name="mz_reference"/>
    </param>
    <section name="feature" title="Additional options for featureXML input" help="" expanded="false">
      <param name="use_centroid_rt" argument="-feature:use_centroid_rt" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Use the RT coordinates of the feature centroids for matching, instead of the RT ranges of the features/mass traces" help=""/>
      <param name="use_centroid_mz" argument="-feature:use_centroid_mz" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Use the m/z coordinates of the feature centroids for matching, instead of the m/z ranges of the features/mass traces" help="(If you choose 'peptide' as 'mz_reference', you should usually set this flag to avoid false-positive matches.)"/>
    </section>
    <section name="consensus" title="Additional options for consensusXML input" help="" expanded="false">
      <param name="use_subelements" argument="-consensus:use_subelements" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Match using RT and m/z of sub-features instead of consensus RT and m/z" help="A consensus feature matches if any of its sub-features matches"/>
      <param name="annotate_ids_with_subelements" argument="-consensus:annotate_ids_with_subelements" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Store the map index of the sub-feature in the peptide ID" help=""/>
    </section>
    <section name="spectra" title="Additional options for mzML input" help="" expanded="false">
      <param name="_in" argument="-spectra:_in" type="data" format="mzml" optional="true" label="MS run used to annotated unidentified spectra to features or consensus features" help=" select mzml data sets(s)"/>
    </section>
    <expand macro="adv_opts_macro">
      <param name="ignore_charge" argument="-ignore_charge" type="boolean" truevalue="true" falsevalue="false" checked="false" label="For feature/consensus maps: Assign an ID independently of whether its charge state matches that of the (consensus) feature" help=""/>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="false" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format_source="in" metadata_source="in"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_IDMapper"/>
    <expand macro="manutest_IDMapper"/>
  </tests>
  <help><![CDATA[Assigns protein/peptide identifications to features or consensus features.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/TOPP_IDMapper.html]]></help>
  <expand macro="references"/>
</tool>
