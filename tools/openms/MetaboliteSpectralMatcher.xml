<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Metabolite Identification]-->
<tool id="MetaboliteSpectralMatcher" name="MetaboliteSpectralMatcher" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
  <description>Perform a spectral library search</description>
  <macros>
    <token name="@EXECUTABLE@">MetaboliteSpectralMatcher</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
cp '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir database &&
cp '$database' 'database/${re.sub("[^\w\-_]", "_", $database.element_identifier)}.$gxy2omsext($database.ext)' &&
mkdir out &&
#if "out_spectra_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out_spectra &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-database
'database/${re.sub("[^\w\-_]", "_", $database.element_identifier)}.$gxy2omsext($database.ext)'
-out
'out/output.${gxy2omsext("mztab")}'
#if "out_spectra_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out_spectra
  'out_spectra/output.${gxy2omsext("mzml")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("mztab")}' '$out'
#if "out_spectra_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out_spectra/output.${gxy2omsext("mzml")}' '$out_spectra'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param argument="-in" type="data" format="mzml" label="Input spectra" help=" select mzml data sets(s)"/>
    <param argument="-database" type="data" format="mgf,msp,mzml" label="Default spectral database" help=" select mgf,msp,mzml data sets(s)"/>
    <section name="algorithm" title="Algorithm parameters section" help="" expanded="false">
      <param name="prec_mass_error_value" argument="-algorithm:prec_mass_error_value" type="float" value="100.0" label="Error allowed for precursor ion mass" help=""/>
      <param name="frag_mass_error_value" argument="-algorithm:frag_mass_error_value" type="float" value="500.0" label="Error allowed for product ions" help=""/>
      <param name="mass_error_unit" argument="-algorithm:mass_error_unit" type="select" label="Unit of mass error (ppm or Da)" help="">
        <option value="ppm" selected="true">ppm</option>
        <option value="Da">Da</option>
        <expand macro="list_string_san" name="mass_error_unit"/>
      </param>
      <param name="report_mode" argument="-algorithm:report_mode" type="select" label="Which results shall be reported: the top-three scoring ones or the best scoring one?" help="">
        <option value="top3" selected="true">top3</option>
        <option value="best">best</option>
        <expand macro="list_string_san" name="report_mode"/>
      </param>
      <param name="ionization_mode" argument="-algorithm:ionization_mode" type="select" label="Positive or negative ionization mode?" help="">
        <option value="positive" selected="true">positive</option>
        <option value="negative">negative</option>
        <expand macro="list_string_san" name="ionization_mode"/>
      </param>
      <param name="merge_spectra" argument="-algorithm:merge_spectra" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Merge MS2 spectra with the same precursor mass" help=""/>
    </section>
    <expand macro="adv_opts_macro">
      <param argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param argument="-test" type="hidden" value="False" label="Enables the test mode (needed for internal use only)" help="" optional="true">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_spectra_FLAG">out_spectra (Output spectra as mzML file)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="mztab"/>
    <data name="out_spectra" label="${tool.name} on ${on_string}: out_spectra" format="mzml">
      <filter>OPTIONAL_OUTPUTS is not None and "out_spectra_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <!-- same input as used in the MSGF+Adapter, should use database CHEMISTRY/MetaboliteSpectralDB.mzML -->
    <test expect_num_outputs="1">
      <!-- same input as used in the MSGF+Adapter, used as input and database -->
      <param name="adv_opts|test" value="true"/>
      <param name="in" ftype="mzml" value="spectra.mzML"/>
      <param name="database" value="MetaboliteSpectralDB.mzML"/>
      <output name="out" ftype="mztab" value="MetaboliteSpectralMatcher.mzTab"/>
    </test>
  </tests>
  <help><![CDATA[Perform a spectral library search.


For more information, visit https://openms.de/doxygen/release/3.1.0/html/TOPP_MetaboliteSpectralMatcher.html]]></help>
  <expand macro="references"/>
</tool>
