<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Targeted Experiments]-->
<tool id="PrecursorIonSelector" name="PrecursorIonSelector" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>PrecursorIonSelector</description>
  <macros>
    <token name="@EXECUTABLE@">PrecursorIonSelector</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir out &&
#end if
#if "next_feat_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir next_feat &&
#end if
mkdir ids &&
ln -s '$ids' 'ids/${re.sub("[^\w\-_]", "_", $ids.element_identifier)}.$gxy2omsext($ids.ext)' &&
#if $raw_data:
  mkdir raw_data &&
  ln -s '$raw_data' 'raw_data/${re.sub("[^\w\-_]", "_", $raw_data.element_identifier)}.$gxy2omsext($raw_data.ext)' &&
#end if
#if "sim_results_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir sim_results &&
#end if
#if $db_path:
  mkdir db_path &&
  ln -s '$db_path' 'db_path/${re.sub("[^\w\-_]", "_", $db_path.element_identifier)}.$gxy2omsext($db_path.ext)' &&
#end if
#if $rt_model:
  mkdir rt_model &&
  ln -s '$rt_model' 'rt_model/${re.sub("[^\w\-_]", "_", $rt_model.element_identifier)}.$gxy2omsext($rt_model.ext)' &&
#end if
#if $dt_model:
  mkdir dt_model &&
  ln -s '$dt_model' 'dt_model/${re.sub("[^\w\-_]", "_", $dt_model.element_identifier)}.$gxy2omsext($dt_model.ext)' &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -out
  'out/output.${gxy2omsext("featurexml")}'
#end if
#if "next_feat_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -next_feat
  'next_feat/output.${gxy2omsext("featurexml")}'
#end if
-ids
'ids/${re.sub("[^\w\-_]", "_", $ids.element_identifier)}.$gxy2omsext($ids.ext)'
#if $raw_data:
  -raw_data
  'raw_data/${re.sub("[^\w\-_]", "_", $raw_data.element_identifier)}.$gxy2omsext($raw_data.ext)'
#end if
#if "sim_results_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -sim_results
  'sim_results/output.${gxy2omsext("txt")}'
#end if
#if $db_path:
  -db_path
  'db_path/${re.sub("[^\w\-_]", "_", $db_path.element_identifier)}.$gxy2omsext($db_path.ext)'
#end if
#if $rt_model:
  -rt_model
  'rt_model/${re.sub("[^\w\-_]", "_", $rt_model.element_identifier)}.$gxy2omsext($rt_model.ext)'
#end if
#if $dt_model:
  -dt_model
  'dt_model/${re.sub("[^\w\-_]", "_", $dt_model.element_identifier)}.$gxy2omsext($dt_model.ext)'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
#if "out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'out/output.${gxy2omsext("featurexml")}' '$out'
#end if
#if "next_feat_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'next_feat/output.${gxy2omsext("featurexml")}' '$next_feat'
#end if
#if "sim_results_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'sim_results/output.${gxy2omsext("txt")}' '$sim_results'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true, "algorithm": {"Preprocessing": {"tmp_dir": "\$TMP_DIR"}}}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="featurexml" optional="false" label="Input feature map file (featureXML)" help=" select featurexml data sets(s)"/>
    <param name="ids" argument="-ids" type="data" format="idxml" optional="false" label="file containing results of identification" help=" select idxml data sets(s)"/>
    <param name="num_precursors" argument="-num_precursors" type="integer" optional="false" value="1" label="number of precursors to be selected" help=""/>
    <param name="raw_data" argument="-raw_data" type="data" format="mzml" optional="true" label="Input profile data" help=" select mzml data sets(s)"/>
    <param name="load_preprocessing" argument="-load_preprocessing" type="boolean" truevalue="true" falsevalue="false" checked="false" label="The preprocessed db is loaded from file, not calculated" help=""/>
    <param name="store_preprocessing" argument="-store_preprocessing" type="boolean" truevalue="true" falsevalue="false" checked="false" label="The preprocessed db is stored" help=""/>
    <param name="simulation" argument="-simulation" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Simulate the whole LC-MS/MS run" help=""/>
    <param name="db_path" argument="-db_path" type="data" format="fasta" optional="true" label="db file" help=" select fasta data sets(s)"/>
    <param name="rt_model" argument="-rt_model" type="data" format="txt" optional="true" label="SVM Model for RTPredict" help=" select txt data sets(s)"/>
    <param name="dt_model" argument="-dt_model" type="data" format="txt" optional="true" label="SVM Model for PTPredict" help=" select txt data sets(s)"/>
    <param name="fixed_modifications" argument="-fixed_modifications" type="text" optional="true" value="" label="the modifications i.e. Carboxymethyl (C)" help=" (space separated list, in order to allow for spaces in list items surround them by single quotes)">
      <expand macro="list_string_val" name="fixed_modifications"/>
      <expand macro="list_string_san" name="fixed_modifications"/>
    </param>
    <section name="algorithm" title="Settings for the compound list creation and rescoring" help="" expanded="false">
      <param name="type" argument="-algorithm:type" type="select" optional="false" label="Strategy for precursor ion selection" help="">
        <option value="ILP_IPS">ILP_IPS</option>
        <option value="IPS" selected="true">IPS</option>
        <option value="SPS">SPS</option>
        <option value="Upshift">Upshift</option>
        <option value="Downshift">Downshift</option>
        <option value="DEX">DEX</option>
        <expand macro="list_string_san" name="type"/>
      </param>
      <param name="max_iteration" argument="-algorithm:max_iteration" type="integer" optional="false" min="1" value="100" label="Maximal number of iterations" help=""/>
      <param name="rt_bin_capacity" argument="-algorithm:rt_bin_capacity" type="integer" optional="false" min="1" value="10" label="Maximal number of precursors per rt bin" help=""/>
      <param name="step_size" argument="-algorithm:step_size" type="integer" optional="false" min="1" value="1" label="Maximal number of precursors per iteration" help=""/>
      <param name="peptide_min_prob" argument="-algorithm:peptide_min_prob" type="float" optional="false" value="0.2" label="Minimal peptide probability" help=""/>
      <param name="sequential_spectrum_order" argument="-algorithm:sequential_spectrum_order" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If true, precursors are selected sequentially with respect to their RT" help=""/>
      <section name="MIPFormulation" title="" help="" expanded="false">
        <section name="thresholds" title="" help="" expanded="false">
          <param name="min_protein_probability" argument="-algorithm:MIPFormulation:thresholds:min_protein_probability" type="float" optional="false" min="0.0" max="1.0" value="0.2" label="Minimal protein probability for a protein to be considered in the ILP" help=""/>
          <param name="min_protein_id_probability" argument="-algorithm:MIPFormulation:thresholds:min_protein_id_probability" type="float" optional="false" min="0.0" max="1.0" value="0.95" label="Minimal protein probability for a protein to be considered identified" help=""/>
          <param name="min_pt_weight" argument="-algorithm:MIPFormulation:thresholds:min_pt_weight" type="float" optional="false" min="0.0" max="1.0" value="0.5" label="Minimal pt weight of a precurso" help=""/>
          <param name="min_mz" argument="-algorithm:MIPFormulation:thresholds:min_mz" type="float" optional="false" min="0.0" value="500.0" label="Minimal mz to be considered in protein based LP formulation" help=""/>
          <param name="max_mz" argument="-algorithm:MIPFormulation:thresholds:max_mz" type="float" optional="false" min="0.0" value="5000.0" label="Minimal mz to be considered in protein based LP formulation" help=""/>
          <param name="min_pred_pep_prob" argument="-algorithm:MIPFormulation:thresholds:min_pred_pep_prob" type="float" optional="false" min="0.0" max="1.0" value="0.5" label="Minimal predicted peptide probability of a precurso" help=""/>
          <param name="min_rt_weight" argument="-algorithm:MIPFormulation:thresholds:min_rt_weight" type="float" optional="false" min="0.0" max="1.0" value="0.5" label="Minimal rt weight of a precurso" help=""/>
          <param name="use_peptide_rule" argument="-algorithm:MIPFormulation:thresholds:use_peptide_rule" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Use peptide rule instead of minimal protein id probability" help=""/>
          <param name="min_peptide_ids" argument="-algorithm:MIPFormulation:thresholds:min_peptide_ids" type="integer" optional="false" min="1" value="2" label="If use_peptide_rule is true, this parameter sets the minimal number of peptide ids for a protein id" help=""/>
          <param name="min_peptide_probability" argument="-algorithm:MIPFormulation:thresholds:min_peptide_probability" type="float" optional="false" min="0.0" max="1.0" value="0.95" label="If use_peptide_rule is true, this parameter sets the minimal probability for a peptide to be safely identified" help=""/>
        </section>
        <section name="combined_ilp" title="" help="" expanded="false">
          <param name="k1" argument="-algorithm:MIPFormulation:combined_ilp:k1" type="float" optional="false" min="0.0" value="0.2" label="combined ilp: weight for z_i" help=""/>
          <param name="k2" argument="-algorithm:MIPFormulation:combined_ilp:k2" type="float" optional="false" min="0.0" value="0.2" label="combined ilp: weight for x_j,s*int_j,s" help=""/>
          <param name="k3" argument="-algorithm:MIPFormulation:combined_ilp:k3" type="float" optional="false" min="0.0" value="0.4" label="combined ilp: weight for -x_j,s*w_j,s" help=""/>
          <param name="scale_matching_probs" argument="-algorithm:MIPFormulation:combined_ilp:scale_matching_probs" type="boolean" truevalue="true" falsevalue="false" checked="true" label="flag if detectability * rt_weight shall be scaled to cover all [0,1]" help=""/>
        </section>
        <section name="feature_based" title="" help="" expanded="false">
          <param name="no_intensity_normalization" argument="-algorithm:MIPFormulation:feature_based:no_intensity_normalization" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Flag indicating if intensities shall be scaled to be in [0,1]" help="This is done for each feature separately, so that the feature's maximal intensity in a spectrum is set to 1"/>
          <param name="max_number_precursors_per_feature" argument="-algorithm:MIPFormulation:feature_based:max_number_precursors_per_feature" type="integer" optional="false" min="1" value="1" label="The maximal number of precursors per feature" help=""/>
        </section>
      </section>
      <section name="Preprocessing" title="" help="" expanded="false">
        <param name="precursor_mass_tolerance" argument="-algorithm:Preprocessing:precursor_mass_tolerance" type="float" optional="false" min="0.0" value="10.0" label="Precursor mass tolerance which is used to query the peptide database for peptides" help=""/>
        <param name="precursor_mass_tolerance_unit" argument="-algorithm:Preprocessing:precursor_mass_tolerance_unit" display="checkboxes" type="select" optional="false" label="Precursor mass tolerance unit" help="">
          <option value="ppm" selected="true">ppm</option>
          <option value="Da">Da</option>
          <expand macro="list_string_san" name="precursor_mass_tolerance_unit"/>
        </param>
        <param name="preprocessed_db_path" argument="-algorithm:Preprocessing:preprocessed_db_path" type="text" optional="true" value="" label="Path where the preprocessed database should be stored" help="">
          <expand macro="list_string_san" name="preprocessed_db_path"/>
        </param>
        <param name="preprocessed_db_pred_rt_path" argument="-algorithm:Preprocessing:preprocessed_db_pred_rt_path" type="text" optional="true" value="" label="Path where the predicted rts of the preprocessed database should be stored" help="">
          <expand macro="list_string_san" name="preprocessed_db_pred_rt_path"/>
        </param>
        <param name="preprocessed_db_pred_dt_path" argument="-algorithm:Preprocessing:preprocessed_db_pred_dt_path" type="text" optional="true" value="" label="Path where the predicted rts of the preprocessed database should be stored" help="">
          <expand macro="list_string_san" name="preprocessed_db_pred_dt_path"/>
        </param>
        <param name="max_peptides_per_run" argument="-algorithm:Preprocessing:max_peptides_per_run" type="integer" optional="false" min="1" value="100000" label="Number of peptides for that the pt and rt are parallely predicted" help=""/>
        <param name="missed_cleavages" argument="-algorithm:Preprocessing:missed_cleavages" type="integer" optional="false" min="0" value="1" label="Number of allowed missed cleavages" help=""/>
        <param name="taxonomy" argument="-algorithm:Preprocessing:taxonomy" type="text" optional="true" value="" label="Taxonomy" help="">
          <expand macro="list_string_san" name="taxonomy"/>
        </param>
        <param name="store_peptide_sequences" argument="-algorithm:Preprocessing:store_peptide_sequences" type="text" optional="false" value="false" label="Flag if peptide sequences should be stored" help="">
          <expand macro="list_string_san" name="store_peptide_sequences"/>
        </param>
        <section name="rt_settings" title="" help="" expanded="false">
          <param name="min_rt" argument="-algorithm:Preprocessing:rt_settings:min_rt" type="float" optional="false" min="1.0" value="960.0" label="Minimal RT in the experiment (in seconds)" help=""/>
          <param name="max_rt" argument="-algorithm:Preprocessing:rt_settings:max_rt" type="float" optional="false" value="3840.0" label="Maximal RT in the experiment (in seconds)" help=""/>
          <param name="rt_step_size" argument="-algorithm:Preprocessing:rt_settings:rt_step_size" type="float" optional="false" value="30.0" label="Time between two consecutive spectra (in seconds)" help=""/>
          <param name="gauss_mean" argument="-algorithm:Preprocessing:rt_settings:gauss_mean" type="float" optional="false" value="-1.0" label="mean of the gauss curve" help=""/>
          <param name="gauss_sigma" argument="-algorithm:Preprocessing:rt_settings:gauss_sigma" type="float" optional="false" value="3.0" label="std of the gauss curve" help=""/>
        </section>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param name="solver" argument="-solver" display="checkboxes" type="select" optional="false" label="LP solver type" help="">
        <option value="GLPK" selected="true">GLPK</option>
        <option value="COINOR">COINOR</option>
        <expand macro="list_string_san" name="solver"/>
      </param>
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="false" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san" name="test"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="out_FLAG">out (modified feature map)</option>
      <option value="next_feat_FLAG">next_feat (feature map (featureXML) file with the selected precursors)</option>
      <option value="sim_results_FLAG">sim_results (File containing the results of the simulation run)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="featurexml">
      <filter>OPTIONAL_OUTPUTS is not None and "out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="next_feat" label="${tool.name} on ${on_string}: next_feat" format="featurexml">
      <filter>OPTIONAL_OUTPUTS is not None and "next_feat_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="sim_results" label="${tool.name} on ${on_string}: sim_results" format="txt">
      <filter>OPTIONAL_OUTPUTS is not None and "sim_results_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="stdout" format="txt" label="${tool.name} on ${on_string}: stdout">
      <filter>OPTIONAL_OUTPUTS is None</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_PrecursorIonSelector"/>
    <expand macro="manutest_PrecursorIonSelector"/>
  </tests>
  <help><![CDATA[PrecursorIonSelector


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/TOPP_PrecursorIonSelector.html]]></help>
  <expand macro="references"/>
</tool>
