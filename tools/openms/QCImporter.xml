<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="QCImporter" name="QCImporter" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Imports tables with quality control parameters into qcml files.</description>
  <macros>
    <token name="@EXECUTABLE@">QCImporter</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
#if $in:
  mkdir in &&
  ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
#end if
mkdir table &&
ln -s '$table' 'table/${re.sub("[^\w\-_]", "_", $table.element_identifier)}.$gxy2omsext($table.ext)' &&
mkdir mapping &&
ln -s '$mapping' 'mapping/${re.sub("[^\w\-_]", "_", $mapping.element_identifier)}.$gxy2omsext($mapping.ext)' &&
mkdir out &&

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
#if $in:
  -in
  'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
#end if
-table
'table/${re.sub("[^\w\-_]", "_", $table.element_identifier)}.$gxy2omsext($table.ext)'
-mapping
'mapping/${re.sub("[^\w\-_]", "_", $mapping.element_identifier)}.$gxy2omsext($mapping.ext)'
-out
'out/output.${gxy2omsext("qcml")}'

## Postprocessing
&& mv 'out/output.${gxy2omsext("qcml")}' '$out'
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="qcml" optional="true" label="Input qcml file" help=" select qcml data sets(s)"/>
    <param name="table" argument="-table" type="data" format="csv" optional="false" label="The table containing the additional qp values in the columns" help="First row is considered containing the header. The target run or set names/ids are indicated by column &quot;raw data file&quot;, so each row after the header will contain the values of qps for that run. (csv without &quot;!) select csv data sets(s)"/>
    <param name="mapping" argument="-mapping" type="data" format="csv" optional="false" label="The mapping of the table header to the according qp cvs, also in csv format" help="The first row is considered containing the headers as in the table. The second row is considered the according qp cv accessions. (csv without &quot;!) select csv data sets(s)"/>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="qcml"/>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_QCImporter"/>
    <expand macro="manutest_QCImporter"/>
  </tests>
  <help><![CDATA[Imports tables with quality control parameters into qcml files.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_QCImporter.html]]></help>
  <expand macro="references"/>
</tool>
