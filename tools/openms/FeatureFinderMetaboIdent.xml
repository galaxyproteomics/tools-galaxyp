<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="FeatureFinderMetaboIdent" name="FeatureFinderMetaboIdent" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="20.05">
  <description>Detects features in MS1 data based on metabolite identifications.</description>
  <macros>
    <token name="@EXECUTABLE@">FeatureFinderMetaboIdent</token>
    <import>macros.xml</import>
    <import>macros_autotest.xml</import>
    <import>macros_test.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir in &&
ln -s '$in' 'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)' &&
mkdir id &&
ln -s '$id' 'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)' &&
mkdir out &&
#if "lib_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir lib_out &&
#end if
#if "chrom_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir chrom_out &&
#end if
#if "candidates_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir candidates_out &&
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  mkdir trafo_out &&
#end if

## Main program call

set -o pipefail &&
@EXECUTABLE@ -write_ctd ./ &&
python3 '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' '$hardcoded_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-in
'in/${re.sub("[^\w\-_]", "_", $in.element_identifier)}.$gxy2omsext($in.ext)'
-id
'id/${re.sub("[^\w\-_]", "_", $id.element_identifier)}.$gxy2omsext($id.ext)'
-out
'out/output.${gxy2omsext("featurexml")}'
#if "lib_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -lib_out
  'lib_out/output.${gxy2omsext("traml")}'
#end if
#if "chrom_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -chrom_out
  'chrom_out/output.${gxy2omsext("mzml")}'
#end if
#if "candidates_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -candidates_out
  'candidates_out/output.${gxy2omsext("featurexml")}'
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  -trafo_out
  'trafo_out/output.${gxy2omsext("trafoxml")}'
#end if
#if len(str($OPTIONAL_OUTPUTS).split(',')) == 0
  | tee '$stdout'
#end if

## Postprocessing
&& mv 'out/output.${gxy2omsext("featurexml")}' '$out'
#if "lib_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'lib_out/output.${gxy2omsext("traml")}' '$lib_out'
#end if
#if "chrom_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'chrom_out/output.${gxy2omsext("mzml")}' '$chrom_out'
#end if
#if "candidates_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'candidates_out/output.${gxy2omsext("featurexml")}' '$candidates_out'
#end if
#if "trafo_out_FLAG" in str($OPTIONAL_OUTPUTS).split(',')
  && mv 'trafo_out/output.${gxy2omsext("trafoxml")}' '$trafo_out'
#end if
#if "ctd_out_FLAG" in $OPTIONAL_OUTPUTS
  && mv '@EXECUTABLE@.ctd' '$ctd_out'
#end if]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
    <configfile name="hardcoded_json"><![CDATA[{"log": "log.txt", "threads": "\${GALAXY_SLOTS:-1}", "no_progress": true}]]></configfile>
  </configfiles>
  <inputs>
    <param name="in" argument="-in" type="data" format="mzml" optional="false" label="Input file: LC-MS raw data" help=" select mzml data sets(s)"/>
    <param name="id" argument="-id" type="data" format="tabular" optional="false" label="Input file: Metabolite identifications" help=" select tabular data sets(s)"/>
    <section name="extract" title="Parameters for ion chromatogram extraction" help="" expanded="false">
      <param name="mz_window" argument="-extract:mz_window" type="float" optional="true" min="0.0" value="10.0" label="m/z window size for chromatogram extraction (unit: ppm if 1 or greater, else Da/Th)" help=""/>
      <param name="n_isotopes" argument="-extract:n_isotopes" type="integer" optional="true" min="2" value="2" label="Number of isotopes to include in each assay" help=""/>
      <param name="isotope_pmin" argument="-extract:isotope_pmin" type="float" optional="true" min="0.0" max="1.0" value="0.0" label="Minimum probability for an isotope to be included in the assay for a compound" help="If set, this parameter takes precedence over 'extract:n_isotopes'"/>
      <param name="rt_window" argument="-extract:rt_window" type="float" optional="true" min="0.0" value="0.0" label="RT window size (in sec.) for chromatogram extraction" help="If zero, calculated based on 'detect:peak_width'"/>
    </section>
    <section name="detect" title="Parameters for detecting features in extracted ion chromatograms" help="" expanded="false">
      <param name="peak_width" argument="-detect:peak_width" type="float" optional="true" min="0.0" value="5.0" label="Expected elution peak width in seconds, for smoothing (Gauss filter)" help="Also determines the RT extration window, unless set explicitly via 'extract:rt_window'"/>
      <param name="min_peak_width" argument="-detect:min_peak_width" type="float" optional="true" min="0.0" value="0.2" label="Minimum elution peak width" help="Absolute value in seconds if 1 or greater, else relative to 'peak_width'"/>
      <param name="signal_to_noise" argument="-detect:signal_to_noise" type="float" optional="true" min="0.1" value="0.8" label="Signal-to-noise threshold for OpenSWATH feature detection" help=""/>
    </section>
    <section name="model" title="Parameters for fitting elution models to features" help="" expanded="false">
      <param name="type" argument="-model:type" display="radio" type="select" optional="false" label="Type of elution model to fit to features" help="">
        <option value="symmetric" selected="true">symmetric</option>
        <option value="asymmetric">asymmetric</option>
        <option value="none">none</option>
        <expand macro="list_string_san"/>
      </param>
      <param name="add_zeros" argument="-model:add_zeros" type="float" optional="true" min="0.0" value="0.2" label="Add zero-intensity points outside the feature range to constrain the model fit" help="This parameter sets the weight given to these points during model fitting; '0' to disable"/>
      <param name="unweighted_fit" argument="-model:unweighted_fit" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Suppress weighting of mass traces according to theoretical intensities when fitting elution models" help=""/>
      <param name="no_imputation" argument="-model:no_imputation" type="boolean" truevalue="true" falsevalue="false" checked="false" label="If fitting the elution model fails for a feature, set its intensity to zero instead of imputing a value from the initial intensity estimate" help=""/>
      <param name="each_trace" argument="-model:each_trace" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Fit elution model to each individual mass trace" help=""/>
      <section name="check" title="Parameters for checking the validity of elution models (and rejecting them if necessary)" help="" expanded="false">
        <param name="min_area" argument="-model:check:min_area" type="float" optional="true" min="0.0" value="1.0" label="Lower bound for the area under the curve of a valid elution model" help=""/>
        <param name="boundaries" argument="-model:check:boundaries" type="float" optional="true" min="0.0" max="1.0" value="0.5" label="Time points corresponding to this fraction of the elution model height have to be within the data region used for model fitting" help=""/>
        <param name="width" argument="-model:check:width" type="float" optional="true" min="0.0" value="10.0" label="Upper limit for acceptable widths of elution models (Gaussian or EGH), expressed in terms of modified (median-based) z-scores" help="'0' to disable. Not applied to individual mass traces (parameter 'each_trace')"/>
        <param name="asymmetry" argument="-model:check:asymmetry" type="float" optional="true" min="0.0" value="10.0" label="Upper limit for acceptable asymmetry of elution models (EGH only), expressed in terms of modified (median-based) z-scores" help="'0' to disable. Not applied to individual mass traces (parameter 'each_trace')"/>
      </section>
    </section>
    <expand macro="adv_opts_macro">
      <param name="force" argument="-force" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Overrides tool-specific checks" help=""/>
      <param name="test" argument="-test" type="hidden" optional="true" value="False" label="Enables the test mode (needed for internal use only)" help="">
        <expand macro="list_string_san"/>
      </param>
    </expand>
    <param name="OPTIONAL_OUTPUTS" type="select" optional="true" multiple="true" label="Optional outputs">
      <option value="lib_out_FLAG">lib_out (Output file: Assay library)</option>
      <option value="chrom_out_FLAG">chrom_out (Output file: Chromatograms)</option>
      <option value="candidates_out_FLAG">candidates_out (Output file: Feature candidates (before filtering and model fitting))</option>
      <option value="trafo_out_FLAG">trafo_out (Output file: Retention times (expected vs)</option>
      <option value="ctd_out_FLAG">Output used ctd (ini) configuration file</option>
    </param>
  </inputs>
  <outputs>
    <data name="out" label="${tool.name} on ${on_string}: out" format="featurexml"/>
    <data name="lib_out" label="${tool.name} on ${on_string}: lib_out" format="traml">
      <filter>OPTIONAL_OUTPUTS is not None and "lib_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="chrom_out" label="${tool.name} on ${on_string}: chrom_out" format="mzml">
      <filter>OPTIONAL_OUTPUTS is not None and "chrom_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="candidates_out" label="${tool.name} on ${on_string}: candidates_out" format="featurexml">
      <filter>OPTIONAL_OUTPUTS is not None and "candidates_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="trafo_out" label="${tool.name} on ${on_string}: trafo_out" format="trafoxml">
      <filter>OPTIONAL_OUTPUTS is not None and "trafo_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
    <data name="ctd_out" format="xml" label="${tool.name} on ${on_string}: ctd">
      <filter>OPTIONAL_OUTPUTS is not None and "ctd_out_FLAG" in OPTIONAL_OUTPUTS</filter>
    </data>
  </outputs>
  <tests>
    <expand macro="autotest_FeatureFinderMetaboIdent"/>
    <expand macro="manutest_FeatureFinderMetaboIdent"/>
  </tests>
  <help><![CDATA[Detects features in MS1 data based on metabolite identifications.


For more information, visit http://www.openms.de/doxygen/release/2.6.0/html/UTILS_FeatureFinderMetaboIdent.html]]></help>
  <expand macro="references"/>
</tool>
