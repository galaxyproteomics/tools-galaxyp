<tool id="proteomiqon_labelfreeproteinquantification" name="Proteomiqon LabelFreeProteinQuantification" version="@VERSION@" profile="20.05">
    <description>
        estimates protein abundances using quantified peptide ions.
    </description>
    <macros>
        <token name="@VERSION@">0.0.1</token>
        <import>aggregationparams.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="@VERSION@">proteomiqon-labelfreeproteinquantification</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #import re
        #for $quantAndProtFile in $proteinassignedquantpepions
            #set basename = $re.sub(r'[^\w ,.\-+]','_',$quantAndProtFile.element_identifier)
            ln -s '$quantAndProtFile' '${basename}.quantAndProt' &&
        #end for
        #if $outputParamfile:
            cat '$paramfile' >> '$out_paramfile' &&
        #end if
        ln -s '$out_labelFreeQuant' 'LabelFreeQuant.txt' &&
        proteomiqon-labelfreeproteinquantification -i './' -p '$paramfile' -o './'
    ]]>
    </command>
    <configfiles>
        <configfile name="paramfile">
            <![CDATA[
            {
                "ModificationFilter": {
                    "Case": "${ModificationFilterCond.ModificationFilter}",
                    #if $ModificationFilterCond.ModificationFilter == "UseOnly"
                    "Fields": [
                        [
                            #for $mod in $ModificationFilterCond.ModificationFilterSequence
                            {
                                "Case": "${mod}"
                            },
                            #end for
                        ]
                    ]
                    #end if
                },
                #set $aggregationParams = $AggregatePeptideChargeStatesParams.AggregatePeptideChargeStatesParamsCond
                #if $aggregationParams.AggregatePeptideChargeStatesParamsEnabled == "no"
                "AggregatePeptideChargeStatesParams": null,
                #else
                "AggregatePeptideChargeStatesParams": {
                    "Case": "Some",
                    "Fields": [
                        {
                            #set $TransformSection = $aggregationParams.Transform
                            #set $TransformLight = $TransformSection.TransformLightCond
                            #if $TransformLight.Type == "None"
                            "Transform": null,
                            #else
                            "Transform": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if $TransformLight.Type == "None"
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                {
                                                    "Case": "${TransformLight.Type}",
                                                    #if $TransformLight.Type != "Log2"
                                                    "Fields": [
                                                        $TransformLight.Value
                                                    ]
                                                    #end if
                                                }
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            #set $SingleFiltersSection = $aggregationParams.SingleFilters
                            #set $SingleFiltersLight = $SingleFiltersSection.Light
                            #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                            "SingleFilters": null,
                            #else
                            "SingleFilters": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                [
                                                    #if $SingleFiltersLight.BiggerThan
                                                    {
                                                        "Case": "IsBiggerThan",
                                                        "Fields": [
                                                            $SingleFiltersLight.BiggerThan 
                                                        ]
                                                    },
                                                    #end if
                                                    #if $SingleFiltersLight.SmallerThan
                                                    {
                                                        "Case": "IsSmallerThan",
                                                        "Fields": [
                                                            $SingleFiltersLight.SmallerThan 
                                                        ]
                                                    }
                                                    #end if
                                                ]
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            #set $GroupFiltersSection = $aggregationParams.GroupFilters
                            #set $GroupFiltersLight = $GroupFiltersSection.Light
                            #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                            "GroupFilters": null,
                            #else
                            "GroupFilters": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                [
                                                    #if $GroupFiltersLight.Tukey
                                                    {
                                                        "Case": "Tukey",
                                                        "Fields": [
                                                        $GroupFiltersLight.Tukey
                                                        ]
                                                    },
                                                    #end if
                                                    #if $GroupFiltersLight.Stdev
                                                    {
                                                        "Case": "Stdev",
                                                        "Fields": [
                                                        $GroupFiltersLight.Stdev
                                                        ]
                                                    }
                                                    #end if
                                                ]
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            "Aggregation": {
                                "Light": {
                                    "Case": "${aggregationParams.Aggregation.AggregationLight}"
                                }
                            }
                        }
                    ]                    
                },
                #end if
                #set $aggregationParams = $AggregateModifiedPeptidesParams.AggregateModifiedPeptidesParamsCond
                #if $aggregationParams.AggregateModifiedPeptidesParamsEnabled == "no"
                "AggregateModifiedPeptidesParams": null,
                #else
                "AggregateModifiedPeptidesParams": {
                    "Case": "Some",
                    "Fields": [
                        {
                            #set $TransformSection = $aggregationParams.Transform
                            #set $TransformLight = $TransformSection.TransformLightCond
                            #if $TransformLight.Type == "None"
                            "Transform": null,
                            #else
                            "Transform": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if $TransformLight.Type == "None"
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                {
                                                    "Case": "${TransformLight.Type}",
                                                    #if $TransformLight.Type != "Log2"
                                                    "Fields": [
                                                        $TransformLight.Value
                                                    ]
                                                    #end if
                                                }
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            #set $SingleFiltersSection = $aggregationParams.SingleFilters
                            #set $SingleFiltersLight = $SingleFiltersSection.Light
                            #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                            "SingleFilters": null,
                            #else
                            "SingleFilters": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                [
                                                    #if $SingleFiltersLight.BiggerThan
                                                    {
                                                        "Case": "IsBiggerThan",
                                                        "Fields": [
                                                            $SingleFiltersLight.BiggerThan 
                                                        ]
                                                    },
                                                    #end if
                                                    #if $SingleFiltersLight.SmallerThan
                                                    {
                                                        "Case": "IsSmallerThan",
                                                        "Fields": [
                                                            $SingleFiltersLight.SmallerThan 
                                                        ]
                                                    }
                                                    #end if
                                                ]
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            #set $GroupFiltersSection = $aggregationParams.GroupFilters
                            #set $GroupFiltersLight = $GroupFiltersSection.Light
                            #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                            "GroupFilters": null,
                            #else
                            "GroupFilters": {
                                "Case": "Some",
                                "Fields": [
                                    {
                                        #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                                        "Light": null,
                                        #else
                                        "Light": {
                                            "Case": "Some",
                                            "Fields": [
                                                [
                                                    #if $GroupFiltersLight.Tukey
                                                    {
                                                        "Case": "Tukey",
                                                        "Fields": [
                                                        $GroupFiltersLight.Tukey
                                                        ]
                                                    },
                                                    #end if
                                                    #if $GroupFiltersLight.Stdev
                                                    {
                                                        "Case": "Stdev",
                                                        "Fields": [
                                                        $GroupFiltersLight.Stdev
                                                        ]
                                                    }
                                                    #end if
                                                ]
                                            ]
                                        },
                                        #end if
                                    }
                                ]
                            },
                            #end if
                            "Aggregation": {
                                "Light": {
                                    "Case": "${aggregationParams.Aggregation.AggregationLight}"
                                }
                            }
                        }
                    ]                    
                },
                #end if
                #set $aggregationParams = $AggregateToProteinGroupsParams
                "AggregateToProteinGroupsParams": {
                    #set $TransformSection = $aggregationParams.Transform
                    #set $TransformLight = $TransformSection.TransformLightCond
                    #if $TransformLight.Type == "None"
                    "Transform": null,
                    #else
                    "Transform": {
                        "Case": "Some",
                        "Fields": [
                            {
                                #if $TransformLight.Type == "None"
                                "Light": null,
                                #else
                                "Light": {
                                    "Case": "Some",
                                    "Fields": [
                                        {
                                            "Case": "${TransformLight.Type}",
                                            #if $TransformLight.Type != "Log2"
                                            "Fields": [
                                                $TransformLight.Value
                                            ]
                                            #end if
                                        }
                                    ]
                                },
                                #end if
                            }
                        ]
                    },
                    #end if
                    #set $SingleFiltersSection = $aggregationParams.SingleFilters
                    #set $SingleFiltersLight = $SingleFiltersSection.Light
                    #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                    "SingleFilters": null,
                    #else
                    "SingleFilters": {
                        "Case": "Some",
                        "Fields": [
                            {
                                #if not $SingleFiltersLight.BiggerThan and not $SingleFiltersLight.SmallerThan
                                "Light": null,
                                #else
                                "Light": {
                                    "Case": "Some",
                                    "Fields": [
                                        [
                                            #if $SingleFiltersLight.BiggerThan
                                            {
                                                "Case": "IsBiggerThan",
                                                "Fields": [
                                                    $SingleFiltersLight.BiggerThan 
                                                ]
                                            },
                                            #end if
                                            #if $SingleFiltersLight.SmallerThan
                                            {
                                                "Case": "IsSmallerThan",
                                                "Fields": [
                                                    $SingleFiltersLight.SmallerThan 
                                                ]
                                            }
                                            #end if
                                        ]
                                    ]
                                },
                                #end if
                            }
                        ]
                    },
                    #end if
                    #set $GroupFiltersSection = $aggregationParams.GroupFilters
                    #set $GroupFiltersLight = $GroupFiltersSection.Light
                    #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                    "GroupFilters": null,
                    #else
                    "GroupFilters": {
                        "Case": "Some",
                        "Fields": [
                            {
                                #if not $GroupFiltersLight.Tukey and not $GroupFiltersLight.Stdev
                                "Light": null,
                                #else
                                "Light": {
                                    "Case": "Some",
                                    "Fields": [
                                        [
                                            #if $GroupFiltersLight.Tukey
                                            {
                                                "Case": "Tukey",
                                                "Fields": [
                                                $GroupFiltersLight.Tukey
                                                ]
                                            },
                                            #end if
                                            #if $GroupFiltersLight.Stdev
                                            {
                                                "Case": "Stdev",
                                                "Fields": [
                                                $GroupFiltersLight.Stdev
                                                ]
                                            }
                                            #end if
                                        ]
                                    ]
                                },
                                #end if
                            }
                        ]
                    },
                    #end if
                    "Aggregation": {
                        "Light": {
                            "Case": "${aggregationParams.Aggregation.AggregationLight}"
                        }
                    }                   
                },
            }                
            ]]>
        </configfile>
    </configfiles>
    <inputs>
        <param name="proteinassignedquantpepions" type="data" format="tabular" label="Protein assigned quant pep ions" help="Specify list of .quantAndProt files" multiple="true"/>
        <conditional name="ModificationFilterCond">
            <param name="ModificationFilter" type="select" label="Modification Filter">
                <option value="All" selected="true">All</option>
                <option value="No">No</option>
                <option value="UseOnly">Use Only</option>
            </param> 
            <when value="All">
            </when>
            <when value="No">
            </when>
            <when value="UseOnly">
                <param name="ModificationFilterSequence" type="select" label="Sequence" multiple="true">
                    <option value="Acetylation'ProtNTerm'">Acetylation'ProtNTerm'</option>
                    <option value="Carbamidomethyl'Cys'">Carbamidomethyl'Cys'</option>
                    <option value="Oxidation'Met'">Oxidation'Met'</option>
                    <option value="Phosphorylation'Ser'Thr'Tyr'">Phosphorylation'Ser'Thr'Tyr'</option>
                    <option value="Pyro_Glu'GluNterm'">Pyro_Glu'GluNterm'</option>
                    <option value="Pyro_Glu'GlnNterm'">Pyro_Glu'GlnNterm'</option>
                </param>
            </when>
        </conditional>
        <section name="AggregatePeptideChargeStatesParams" title="Aggregate Peptide Charge States Parameters">
            <conditional name="AggregatePeptideChargeStatesParamsCond">
                <param name="AggregatePeptideChargeStatesParamsEnabled" type="select" label="Specify Aggregate Peptide Charge States Parameters?">
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param> 
                <when value="yes">
                    <expand macro="AggregationParams" />
                </when>
                <when value="no">
                </when>
            </conditional>
        </section>
        <section name="AggregateModifiedPeptidesParams" title="Aggregate Modified Peptides Parameters">
            <conditional name="AggregateModifiedPeptidesParamsCond">
                <param name="AggregateModifiedPeptidesParamsEnabled" type="select" label="Specify Aggregate Modified Peptides Parameters?">
                    <option value="yes">Yes</option>
                    <option value="no" selected="true">No</option>
                </param> 
                <when value="yes">
                    <expand macro="AggregationParams" />
                </when>
                <when value="no">
                </when>        
            </conditional>
        </section>
        <section name="AggregateToProteinGroupsParams" title="Aggregate To Protein Groups Parameters">
            <expand macro="AggregationParams" />
        </section>
        <param name="outputParamfile" type="boolean" value="false" label="Output parameter file"/>
    </inputs>
    <outputs>
        <data format="tabular" name="out_labelFreeQuant" />
        <data format="json" name="out_paramfile">
            <filter>outputParamfile</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="proteinassignedquantpepions" value="sample.quantAndProt"/>
            <conditional name="ModificationFilterCond">
                <param name="ModificationFilter" value="All"/>
            </conditional>
            <section name="AggregatePeptideChargeStatesParams">
                <conditional name="AggregatePeptideChargeStatesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="no" />
                </conditional>
            </section>
            <section name="AggregateModifiedPeptidesParams">
                <conditional name="AggregateModifiedPeptidesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="no"/>
                </conditional>
            </section>
            <section name="AggregateToProteinGroupsParams">
                <section name="Transform">
                    <conditional name="TransformLightCond">
                        <param name="Type" value="None"/>
                    </conditional>
                </section>
                <section name="SingleFilters">
                    <section name="Light">
                        <param name="BiggerThan" value=""/>
                        <param name="SmallerThan" value=""/>
                    </section>
                </section>
                <section name="GroupFilters">
                    <section name="Light">
                        <param name="Tukey" value=""/>
                        <param name="Stdev" value=""/>
                    </section>
                </section>
                <section name="Aggregation">
                    <param name="AggregationLight" value="Mean"/>
                </section>
            </section>
            <param name="outputParamfile" value="false"/>
        </test>
        <test expect_num_outputs="2">
            <param name="proteinassignedquantpepions" value="sample.quantAndProt"/>
            <conditional name="ModificationFilterCond">
                <param name="ModificationFilter" value="All"/>
            </conditional>
            <section name="AggregatePeptideChargeStatesParams">
                <conditional name="AggregatePeptideChargeStatesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="no" />
                </conditional>
            </section>
            <section name="AggregateModifiedPeptidesParams">
                <conditional name="AggregateModifiedPeptidesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="no"/>
                </conditional>
            </section>
            <section name="AggregateToProteinGroupsParams">
                <section name="Transform">
                    <conditional name="TransformLightCond">
                        <param name="Type" value="None"/>
                    </conditional>
                </section>
                <section name="SingleFilters">
                    <section name="Light">
                        <param name="BiggerThan" value=""/>
                        <param name="SmallerThan" value=""/>
                    </section>
                </section>
                <section name="GroupFilters">
                    <section name="Light">
                        <param name="Tukey" value=""/>
                        <param name="Stdev" value=""/>
                    </section>
                </section>
                <section name="Aggregation">
                    <param name="AggregationLight" value="Mean"/>
                </section>
            </section>
            <param name="outputParamfile" value="true"/>
            <output name="out_paramfile" file="result_1.json"/>
        </test>
        <test expect_num_outputs="2">
            <param name="proteinassignedquantpepions" value="sample.quantAndProt"/>
            <conditional name="ModificationFilterCond">
                <param name="ModificationFilter" value="No"/>
            </conditional>
            <section name="AggregatePeptideChargeStatesParams">
                <conditional name="AggregatePeptideChargeStatesParamsCond">
                    <param name="AggregatePeptideChargeStatesParamsEnabled" value="yes" />
                    <section name="Transform">
                        <conditional name="TransformLightCond">
                            <param name="Type" value="Log2"/>
                        </conditional>
                    </section>
                    <section name="SingleFilters">
                        <section name="Light">
                            <param name="BiggerThan" value="1"/>
                            <param name="SmallerThan" value="2"/>
                        </section>
                    </section>
                    <section name="GroupFilters">
                        <section name="Light">
                            <param name="Tukey" value="1"/>
                            <param name="Stdev" value="2"/>
                        </section>
                    </section>
                    <section name="Aggregation">
                        <param name="AggregationLight" value="Median"/>
                    </section>
                </conditional>
            </section>
            <section name="AggregateModifiedPeptidesParams">
                <conditional name="AggregateModifiedPeptidesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="yes"/>
                    <section name="Transform">
                        <conditional name="TransformLightCond">
                            <param name="Type" value="Log2"/>
                        </conditional>
                    </section>
                    <section name="SingleFilters">
                        <section name="Light">
                            <param name="BiggerThan" value="1"/>
                            <param name="SmallerThan" value="2"/>
                        </section>
                    </section>
                    <section name="GroupFilters">
                        <section name="Light">
                            <param name="Tukey" value="1"/>
                            <param name="Stdev" value="2"/>
                        </section>
                    </section>
                    <section name="Aggregation">
                        <param name="AggregationLight" value="Median"/>
                    </section>
                </conditional>
            </section>
            <section name="AggregateToProteinGroupsParams">
                <section name="Transform">
                    <conditional name="TransformLightCond">
                        <param name="Type" value="Log2"/>
                    </conditional>
                </section>
                <section name="SingleFilters">
                    <section name="Light">
                        <param name="BiggerThan" value="1"/>
                        <param name="SmallerThan" value="2"/>
                    </section>
                </section>
                <section name="GroupFilters">
                    <section name="Light">
                        <param name="Tukey" value="1"/>
                        <param name="Stdev" value="2"/>
                    </section>
                </section>
                <section name="Aggregation">
                    <param name="AggregationLight" value="Median"/>
                </section>
            </section>
            <param name="outputParamfile" value="true"/>
            <output name="out_paramfile" file="result_2.json"/>
        </test>
        <test expect_num_outputs="2">
            <param name="proteinassignedquantpepions" value="sample.quantAndProt"/>
            <conditional name="ModificationFilterCond">
                <param name="ModificationFilter" value="UseOnly"/>
                <param name="ModificationFilterSequence" value="Acetylation'ProtNTerm',Carbamidomethyl'Cys',Oxidation'Met',Phosphorylation'Ser'Thr'Tyr',Pyro_Glu'GluNterm',Pyro_Glu'GlnNterm'"/>
            </conditional>
            <section name="AggregatePeptideChargeStatesParams">
                <conditional name="AggregatePeptideChargeStatesParamsCond">
                    <param name="AggregatePeptideChargeStatesParamsEnabled" value="yes" />
                    <section name="Transform">
                        <conditional name="TransformLightCond">
                            <param name="Type" value="Substract"/>
                            <param name="Value" value="2"/>
                        </conditional>
                    </section>
                    <section name="SingleFilters">
                        <section name="Light">
                            <param name="BiggerThan" value="1"/>
                            <param name="SmallerThan" value=""/>
                        </section>
                    </section>
                    <section name="GroupFilters">
                        <section name="Light">
                            <param name="Tukey" value=""/>
                            <param name="Stdev" value="2"/>
                        </section>
                    </section>
                    <section name="Aggregation">
                        <param name="AggregationLight" value="Median"/>
                    </section>
                </conditional>
            </section>
            <section name="AggregateModifiedPeptidesParams">
                <conditional name="AggregateModifiedPeptidesParamsCond">
                    <param name="AggregateModifiedPeptidesParamsEnabled" value="yes"/>
                    <section name="Transform">
                        <conditional name="TransformLightCond">
                            <param name="Type" value="Add"/>
                            <param name="Value" value="2"/>
                        </conditional>
                    </section>
                    <section name="SingleFilters">
                        <section name="Light">
                            <param name="BiggerThan" value=""/>
                            <param name="SmallerThan" value="2"/>
                        </section>
                    </section>
                    <section name="GroupFilters">
                        <section name="Light">
                            <param name="Tukey" value="1"/>
                            <param name="Stdev" value=""/>
                        </section>
                    </section>
                    <section name="Aggregation">
                        <param name="AggregationLight" value="Sum"/>
                    </section>
                </conditional>
            </section>
            <section name="AggregateToProteinGroupsParams">
                <section name="Transform">
                    <conditional name="TransformLightCond">
                        <param name="Type" value="DivideBy"/>
                        <param name="Value" value="2"/>
                    </conditional>
                </section>
                <section name="SingleFilters">
                    <section name="Light">
                        <param name="BiggerThan" value=""/>
                        <param name="SmallerThan" value=""/>
                    </section>
                </section>
                <section name="GroupFilters">
                    <section name="Light">
                        <param name="Tukey" value=""/>
                        <param name="Stdev" value=""/>
                    </section>
                </section>
                <section name="Aggregation">
                    <param name="AggregationLight" value="Mean"/>
                </section>
            </section>
            <param name="outputParamfile" value="true"/>
            <output name="out_paramfile" file="result_3.json"/>
        </test>
    </tests>
    <help>
    <![CDATA[
What It Does
------------
**Disclaimer** this tool needs a quantAndProt file, which combines the results from ProteinInference and PSMBasedQuantification.

After quantification and protein inference are performed, it is known which peptide originated from which protein, as well as the intensity of each peptide. 
The information available for each peptide now needs to be aggragated for their proteins.

This tool performs the aggregation from the peptides to the protein in several steps. The first two aggregation steps are optional. One of them is the aggregation 
based on charge state. Peptides with the same sequence and modifications, but different charge states are being aggregated. The next optional step does the same 
for peptides with the same sequence, but different modifications. Those steps build upon each other. The last step is the aggregation of all peptides of a protein. 
The result of each aggregation step is given as a tab separated file. The aggregation is performed according to the given parameters for each step. 
If an optional aggregation is not performed, the next step takes the result from the prior aggregation. For example, if aggregation by charge and modification are 
skipped, the protein aggregation is performed on previously unaggregated peptides, where a peptidesequence can occur with different charge states and modifications.

Further Reading
---------------
Additional information about the tool can be found in the `documentation <https://csbiology.github.io/ProteomIQon/tools/LabelFreeProteinQuantification.html>`_.  
    ]]>
    </help>
</tool>