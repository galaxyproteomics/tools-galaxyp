<tool id="pepquery" name="PepQuery" version="@VERSION@">
    <description>Peptide-centric search engine for novel peptide identification and validation.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements> 
        <requirement type="package" version="@VERSION@">pepquery</requirement>
    </requirements>
    <command detect_errors="exit_code">
        <![CDATA[
            cp $req_inputs.spectrum_file ${req_inputs.spectrum_file}.mgf &&
            cp $req_inputs.db_file ${req_inputs.db_file}.fa &&
            pepquery 
                -ms '${req_inputs.spectrum_file}.mgf'
                -db '${req_inputs.db_file}.fa'
                #if $req_inputs.input_type.input_type_selector == 'peptide'
                    -pep '$req_inputs.input_type.multiple.input'
                #else
                    -t '$req_inputs.input_type.input_type_selector'
                    #if int(str($req_inputs.input_type.input_type_selector)) < 3
                        -i '$req_inputs.input_type.multiple.input'
                        #if $req_inputs.input_type.input_type_selector == '2'
                            #if $req_inputs.input_type.frame == 'None'
                                -f '0'
                            #else
                                -f '$req_inputs.input_type.frame'
                            #end if
                        #end if
                    #else
                        -i '$req_inputs.input_type.input'
                        -anno '$req_inputs.input_type.anno'
                    #end if
                #end if
                -fixMod '$modifications.fixed_mod'
                -varMod '$modifications.var_mod'
                -maxVar '$modifications.max_mods'
                #if $modifications.unmodified
                    -um
                #end if
                #if $modifications.aa
                    -aa
                #end if
                -tol '$ms_params.tolerance_params.precursor_tolerance'
                -tolu '$ms_params.tolerance_params.precursor_unit'
                -itol '$ms_params.tolerance_params.tolerance'
                -e '$ms_params.digestion.enzyme'
                -fragmentMethod '$ms_params.search.frag_method'
                -m '$ms_params.search.scoring_method'
                -maxCharge '$ms_params.search.max_charge'
                -minCharge '$ms_params.search.min_charge'
                -minPeaks '$ms_params.search.min_peaks'
                -minScore '$ms_params.search.min_score'
                -maxLength '$ms_params.search.max_length'
                -n '$ms_params.search.num_random_peptides'
            -o pepquery_output
        ]]>
    </command>
    <inputs>
        <section name="req_inputs" title="Input Data" expanded="true">
            <conditional name="input_type">
                <param name="input_type_selector" label="Input Type" type="select" argument="-t" help="" >
                    <option value="peptide">peptide</option>
                    <option value="1">protein</option>
                    <option value="2">DNA (translate to protein sequences)</option>
                    <option value="3">VCF (translate to protein sequences)</option>
                    <option value="4">BED (translate to protein sequences)</option>
                    <option value="5">GTF (translate to protein sequences)</option>
                </param>
                <when value="peptide">
                    <conditional name="multiple">
                        <param name="peptide_input_selector" label="Multiple peptides?" type="boolean" help="" />
                        <when value="true">
                            <param label="Peptide Sequences (.txt)" name="input" type="data" format="txt" argument="-pep" help="Peptide sequence file containing peptides which you want to search (no column header)." />
                        </when>
                        <when value="false">
                            <param label="Peptide Sequence" name="input" type="text" argument="-pep" help="Peptide sequence which you want to search" />
                        </when>
                    </conditional>
                </when>
                <when value="1">
                    <conditional name="multiple">
                        <param name="protein_input_selector" label="Multiple protein sequences?" type="boolean" help="" />
                        <when value="true">
                            <param label="Protein Sequences (.txt)" name="input" type="data" format="txt" argument="-i" help="Protein sequence file containing proteins which you want to search (no column header)." />
                        </when>
                        <when value="false">
                            <param label="Protein Sequence" name="input" type="text" argument="-i" help="Protein sequence which you want to search" />
                        </when>
                    </conditional>
                </when>
                <when value="2">
                    <conditional name="multiple">
                        <param name="dna_input_selector" label="Multiple DNA sequences?" type="boolean" help="" />
                        <when value="true">
                            <param label="DNA Sequences (.txt)" name="input" type="data" format="txt" argument="-i" help="DNA sequence file containing proteins which you want to search (no column header)." />

                        </when>
                        <when value="false">
                            <param label="DNA Sequence" name="input" type="text" argument="-i" help="DNA sequence which you want to search" />
                        </when>
                    </conditional>
                    <param label="Frame(s) for DNA translation" name="frame" type="select" argument="-f" multiple="true" help="The frame(s) to translate DNA sequence to protein. Selecting nothing (default) keeps the longest frame">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                    </param>
                </when>
                <when value="3">   
                    <param label="VCF File" name="input" format="vcf" type="data" argument="-i" help="" />
                    <param label="Annotation Files" name="anno" type="data_collection" argument="-anno" help="Annotation files for the VCF file. Please follow preparation instructions here: http://bioconductor.org/packages/devel/bioc/html/PGA.html" />
                </when>
                <when value="4">   
                    <param label="BED File" name="input" format="bed" type="data" argument="-i" help="" />
                    <param label="Annotation Files" name="anno" type="data_collection" argument="-anno" help="Annotation files for the BED file. Please follow preparation instructions here: http://bioconductor.org/packages/devel/bioc/html/PGA.html" />
                </when>
                <when value="5">   
                    <param label="GTF File" name="input" format="gtf" type="data" argument="-i" help="" />
                    <param label="Annotation Files" name="anno" type="data_collection" argument="-anno" help="Annotation files for the GTF file. Please follow preparation instructions here: http://bioconductor.org/packages/devel/bioc/html/PGA.html" />
                </when>
            </conditional>
            <param label="Database File" name="db_file" type="data" format="fasta" argument="-db" help="Fasta format database file" />
            <param label="Spectrum File" name="spectrum_file" type="data" format="mgf" argument="-ms" help="Spectrum file used for identification, mgf format" />
        </section>
        <section name="modifications" title="Modifications" expanded="true">
             <param name="fixed_mod" label="Fixed modification(s)" type="select" multiple="true" argument="-fixMod" help="Fixed modification">
                <option value="107" selected="true">Oxidation of M (15.99491461956)[0]</option>
                <option value="6">Carbamidomethylation of C (57.02146372057)[0]</option>
                <expand macro="modifications" />
             </param>
             <param name="var_mod" label="Variable modification(s)" type="select" multiple="true" argument="-varMod" help="Variable modification" >
                <option value="107">Oxidation of M (15.99491461956)[0]</option>
                <option value="6" selected="true">Carbamidomethylation of C (57.02146372057)[0]</option>
                <expand macro="modifications" />
             </param>
             <param label="Max Modifications" name="max_mods" type="integer" value="3" argument="-maxVar" help="Max number of variable modifications" />
             <param label="Unmodified?" name="unmodified" type="boolean" value="false" argument="-um" help="Validation with unrestricted modification searching" />
             <param label="Consider amino acid substitution modifications?" name="aa" type="boolean" value="false" argument="-aa" help="Whether or not to consider aa substitution modifications when perform modification filtering." />
        </section>
        <section name="ms_params" title="Mass spectrometer" expanded="true">
            <section name="tolerance_params" title="Tolerance" expanded="true">
                <param label="Precursor Tolerance" name="precursor_tolerance" type="integer" value="10" argument="-tol" help="the error window on experimental peptide mass values. This parameter is usually set according to the mass spectrometer which was used to generate the MS/MS data." />
                <param label="Precursor Unit" name="precursor_unit" type="select" argument="-tolu" help="The unit of precursor ion m/z tolerance">
                    <option value="ppm" selected="true">ppm</option>
                    <option value="Da">Da</option>
                </param>
                <param label="Tolerance" name="tolerance" type="float" value="0.6" argument="-itol" help="Error window for MS/MS fragment ion mass values in Da unit." />
            </section>
            <section name="digestion" title="Digestion" expanded="true">
                <param label="Enzyme" name="enzyme" type="select" argument="-e" help="Enzyme used for protein digestion" >
                    <option value="0">Non enzyme</option>
                    <option value="1" selected="true">Trypsin</option>
                    <option value="2">Trypsin (no P rule)</option>
                    <option value="3">Arg-C</option>
                    <option value="4">Arg-C (no P rule)</option>
                    <option value="5">Arg-N</option>
                    <option value="6">Glu-C</option>
                    <option value="7">Lys-C</option>
                </param>
                <param label="Max Missed Cleavages" name="max_missed_cleavages" type="integer" value="2" argument="-c" help="The max missed cleavages" />
            </section>
            <section name="search" title="PSM" expanded="true">
                <param label="Fragmentation Method" name="frag_method" type="select" argument="-fragmentMethod">
                    <option value="1" selected="true">CID/HCD</option>
                    <option value="2">ETD</option>
                </param>
                <param label="Scoring Method" name="scoring_method" type="select" argument="-m">
                    <option value="1" selected="true">HyperScore</option>
                    <option value="2">MVH</option>
                </param>
                <param label="Max Charge" name="max_charge" type="integer" value="3" argument="-maxCharge" help="The maximum charge to consider if the charge state is not available" />
                <param label="Minimum Charge" name="min_charge" type="integer" value="2" argument="-minCharge" help="The minimum charge to consider if the charge state is not available" />
                <param label="Minimum Peaks" name="min_peaks" type="integer" value="10" argument="-minPeaks" help="Min peaks in spectrum" />
                <param label="Minimum Score" name="min_score" type="integer" value="12" argument="-minScore" help="Minimum score to consider for peptide searching" />
                <param label="Maximum length of peptide" name="max_length" type="integer" value="45" argument="-maxLength" help="The maximum length of peptide to consider." />
                <param label="Number of Random Peptides" name="num_random_peptides" type="integer" value="1000" argument="-n" help="The number of random peptides" />
            </section>
        </section>
    </inputs>
    <outputs>
        <data format="tabular" name="psm" from_work_dir="pepquery_output/psm.txt" label="${tool.name} on ${on_string}: PSM"/>
        <data format="tabular" name="psm_annotation" from_work_dir="pepquery_output/psm_annotation.txt" label="${tool.name} on ${on_string}: PSM Annotation"/>
        <data format="tabular" name="detail" from_work_dir="pepquery_output/detail.txt" label="${tool.name} on ${on_string}: Detail"/>
        <data format="tabular" name="psm_rank_mgf" from_work_dir="pepquery_output/psm_rank.mgf" label="${tool.name} on ${on_string}: PSM Rank (mgf)"/>
        <data format="tabular" name="psm_rank_txt" from_work_dir="pepquery_output/psm_rank.txt" label="${tool.name} on ${on_string}: PSM Rank (txt)"/>
    </outputs>
    
    <help><![CDATA[
        PepQuery is a peptide-centric search engine for novel peptide identification and validation. Cancer genomics studies have identified a large number of genomic alterations that may lead to novel, cancer-specific protein sequences. Proteins resulted from these genomic alterations are attractive candidates for cancer biomarkers and therapeutic targets. The leading approach to proteomic validation of genomic alterations is to analyze tandem mass spectrometry (MS/MS) data using customized proteomics databases created from genomics data. Such analysis is time-consuming and requires thorough training and detailed knowledge in proteomics data analysis, leading to a gap between MS/MS data and the cancer genomics community. PepQuery does not require customized databases and allows quick and easy proteomic validation of genomic alterations.
    ]]></help>

    <citations>
    </citations>
</tool>
