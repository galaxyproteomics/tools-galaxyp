<tool id="feature_alignment" name="Feature Alignment" version="0.1">
    <description>of peakgroups below a FDR</description>
    <stdio>
        <exit_code level="fatal" range="1:"/>
    </stdio>
    <version_command>feature_alignment.py --version</version_command>
    <command interpreter="python">
<![CDATA[
    feature_alignment.py 
        --in #'" "'.join([ $file for $file in $inputs ])#
        --file_format $oformat
        #if str($out) == "openswath":
            --out $out
        #end if
        --out_matrix out_matrix.tsv
        --out_ids $out_ids
        --fdr_cutoff $fdr_cutoff
        #if $max_fdr_quality and $max_fdr_quality is not None:
            --max_fdr_quality "$max_fdr_quality"
        #end if
        --max_rt_diff $max_rt_diff
        --iso_max_rt_diff $iso_max_rt_diff
        --frac_selected $frac_selected
        --method $method
        --matrix_output_method $matrix_output_method
        --realign_method $realign_method

        &&
        mv out_matrix.tsv $out_matrix

]]></command>
    <inputs>

        <param name="inputs" type="data" multiple="True"
            label="A list of mProphet output files containing all peakgroups" help="(--in)"/>
        <param name="oformat" type="select" label="Which input file format is used" help="(--file_format)">
            <option value="openswath">OpenSwath</option>
            <option value="peakview" selected="True">Peakview</option>
        </param>

        <param name="fdr_cutoff" type="float" value="0.01" label="Seeding score cutoff" help="(--fdr_cutoff)" />
        <param name="max_fdr_quality" type="text" default="-1.0"
            label="Extension score cutoff"
            help="During the extension phase of the algorithm, peakgroups of this quality will still be considered for alignment (in FDR) - it is possible to give a range in the format lower,higher+stepsize,stepsize - e.g. 0,0.31,0.01 (-1 will set it to fdr_cutoff) (--max_fdr_quality)"/>
        <param name="max_rt_diff" type="integer" default="30"
            label="Maximal difference in RT for two aligned features" help="(--max_rt_diff)"/>
        <param name="iso_max_rt_diff" type="text" default="10"
            label="Maximal difference in RT for two isotopic channels in the same run" help="(--iso_max_rt_diff)" />
        <param name="frac_selected" type="float" value="0.0" min="0" max="1"
            label="Do not write peakgroup if selected in less than this fraction of runs" help="(--frac_selected)"/>

        <param name="method" type="select"
            label="Which method to use for the clustering"
            help="Note that the MST options will perform a local, MST guided alignment while the other options will use a reference-guided alignment. The global option will also move peaks which are below the selected FDR threshold. (--method)" />
            <option value='best_overall' selected="True">best_overall</option>
            <option value='best_cluster_score'>best_cluster_score</option>
            <option value='global_best_cluster_score'>global_best_cluster_score</option>
            <option value='global_best_overall'>global_best_overall</option>
            <option value='LocalMST'>LocalMST</option>
            <option value='LocalMSTAllCluster'>LocalMSTAllCluster</option>
        </param>

        <param name="matrix_output_method" type="select"
            label="Which columns are written besides Intensity" help="(--matrix_output_method)">
            <option value='none' selected="True">None</option>
            <option value='RT'>RT</option>
            <option value='score'>Score</option>
            <option value='source'>Source</option>
            <option value='full'>Full</option>
        </param>
        <param name="realign_method" type="select" label="How to re-align runs in retention time" help="(--realign_method)">
            <option value='diRT' selected="True">Use only deltaiRT from the input file</option>
            <option value='linear'>Perform a linear regression using best peakgroups</option>
            <!--option value='splineR'>Perform a spline fit using R</option-->
            <!--option value='splineR_external'>Perform a spline fit using R</option-->
            <option value='splinePy'>Use Python native spline from scikits.datasmooth (slow!)</option>
            <option value='lowess'>Use Robust locally weighted regression (lowess smoother)</option>
            <option value='CVSpline'>Splines with cross-validation</option>
            <option value='nonCVSpline'>Splines without cross-validation</option>
            <option value='earth' >Use Multivariate Adaptive Regression Splines using py-earth</option>
        </param>
    </inputs>
    <outputs>
        <!-- Matrix containing one peak group per row -->
        <data format="tabular" name="out_matrix"/>
        <!-- Id file only containing the ids -->
        <data format="tabular" name="out_ids"/>
        <!-- Output file with filtered peakgroups for quantification (only works for OpenSWATH) -->
        <data format="text" name="out">
            <filter>oformat == 'openswath'</filter>
        </data>
    </outputs>
    <help>
<![CDATA[

**What it does**

This program will select all peakgroups below the FDR cutoff in all files and try to align them to each other.
If only one file is given, it will act as peakgroup selector (best by m_score)
and will apply the provided FDR cutoff.
]]>
    </help>
    <citations>
        <citation type="doi"></citation>
    </citations>
</tool>

