<tool id="kinamine_shaker" name="Kinamine_for_Peptide_Shaker" version="0.3.0">
    <description>Extracts phosphorylated motifs from Peptide Shaker PSM file</description>
    <requirements>
       <requirement type="package">openjdk</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        mkdir -p outputs &&
        ## KimaMine relies on the file name extension for the fasta file
        ln -s '$reference' reference.fasta &&
        java -Djava.awt.headless=true -jar '$__tool_directory__/JavaApplication4.jar' '$psm_phos' reference.fasta outputs 0.5 output
    ]]></command>
    <inputs>
        <param format="tabular" name="psm_phos" type="data" label="PSM Phosphorylation Report"/>
        <param format="fasta" name="reference" type="data" label="Protein FASTA reference"/>
        <param name="outGroup" type="text" value="kinase" label="Kinase Name"/>
    </inputs>      
    <outputs>
        <data format="csv" name="Substrates" from_work_dir="outputs/output_Substrates.csv" label="${outGroup}_Substrates.csv"/>
        <data format="csv" name="SBF" from_work_dir="outputs/output_SubBackFreq.csv" label="${outGroup}_SubstrateBackgroundFrequency.csv"/>
    </outputs>
    <tests>
        <test>
            <param name="psm_phos" ftype="txt" value="PSM phos.csv"/>
            <param name="reference" ftype="fasta" value="reference.fasta"/>
            <param name="SBF" ftype="csv" value="SBF.csv"/>
            <output name="Substrates" ftype="csv" file="output_Substrates.csv"/>
            <output name="SBF" ftype="csv" file="output_SubBackFreq.csv"/>
        </test>
    </tests>

    
    <help><![CDATA[
Kinamine takes a Distinct Peptide Report and extracts from it all peptides containing a phospho(Y), along with the 7 amino acids N- and C- terminal to the pY in that peptide (assuming they were discovered at a threshold above the given FDR value).  This file is the *Substrates* file
Additionally, all discovered peptides are assumed to have come from a protein.  For every phospho(Y) peptide, KinaMine takes the associated protein accession number, searches the FASTA file for that accession number and returns the amino acid percent composition of the protein(s) which that peptide came from.  This file is the *Substrate Background Frequency* file
This tool is intended to be used in conjunction with Negative Motif Finder and Kinatest, the three together creating a GalaxyP version of the KINATEST-ID workbook.

java -Djava.awt.headless=true -jar JavaApplication4.jar psm.tabular reference.fasta outputs 0.5 output

===========

Inputs

PSM Phosphorylation Report: This is the file that Peptide Shaker can creates after a search is run using SearchGUI

===========

**Intended Purpose**
This tool is intended for Academic use.  
This tool is intended as part of a KALIP-KINATEST pipeline.  
Briefly, KALIP involved treating cell lysate first with trypsin, second with phosphotase, and finally with a given kinase, then running that cell lysate on a Mass Spec to discover what peptides were present.  
KinaMine then extracts only the phospho-Y peptides and the proteins they came from.  Negative Motif finder finds all pY-containing peptides that could have been discovered but weren't.  Kinatest then uses all this data to discover candidate substrates which will be specific for the given kinase and no others.  From the discovered substrates, a biosensor can be made.


    ]]></help>
    <citations>
        <citation type="doi">10.1021/ja507164a</citation>
    </citations>
</tool>

