<tool id="msspercolator_split" name="Split percolator output" version="1.0">
    <description>on target/decoy or protein header</description>
    <requirements>
        <requirement type="package" version="2.4">msstitch</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:"/>
    </stdio>
    <command>
            <![CDATA[
	    ln -s '$input' perco.xml && 
	   
	    #if $splitter.splittype.value == "td"
	        msspercolator splittd -i perco.xml 
	        && mv perco.xml_target.xml '$targetout'
	        && mv perco.xml_decoy.xml '$decoyout'
	    
	    #else if $splitter.splittype.value == "header"
                mkdir splitfiles &&
	        msspercolator splitprotein -i perco.xml -d splitfiles
	        --protheaders
	        #for $header in $splitter.headers
		    #set headpattern = "{}".format($header.pattern.translate(None))
	            '$headpattern'
	        #end for
                #set maxdigits = len(str(len($splitter.headers)))
	        #for $ix, $header in $enumerate($splitter.headers)
	            #set outfile = "perco.xml_h{i:0{dig}d}.xml".format(i=$ix, dig=$maxdigits)
	            #set newfile = "{}_{}.xml".format($input.display_name, $header.pattern.translate(None, "[]\^*+.$?()|<=:{}/#"))
                    &&
	            mv splitfiles/$outfile 'splitfiles/$newfile'
	        #end for
            #end if
            ]]>
            </command>
    <inputs>

    <param name="input" type="data" format="percout" label="Percolator output data" />
    <conditional name="splitter">
	    <param name="splittype" type="select" label="Split data into">
		    <option value="td">target/decoy data</option>
		    <option value="header">different protein headers</option>
	    </param>
	    <when value="td" />
	    <when value="header">
                    <repeat name="headers" title="Protein class headers" help="Each specified header regex will lead to its own dataset. Non-matching headers will be filtered out. Multiple headers for one dataset can be separated in the same regex with a semicolon." >
                        <param name="pattern" type="text" label="Header pattern regex" help="E.g. ^ENSP" />
                    </repeat>
	    </when>
    </conditional>
    
    </inputs>
    
    <outputs>
	    <collection name="headerout" type="list">
               <filter>splitter['splittype'] == 'header'</filter>
               <discover_datasets pattern="__designation__" ext="percout" directory="splitfiles" />
            </collection>
	    <data format="percout" name="targetout" label="Target split percolator"> 
		    <filter>splitter['splittype'] == 'td'</filter>
	    </data>
	   <data format="percout" name="decoyout" label="Decoy split percolator">
		    <filter>splitter['splittype'] == 'td'</filter>
	    </data>
    </outputs>
    <tests>
	    <test>
		    <param name="input" value="percolator.xml" />
		    <param name="splitter|splittype" value="td" />
		    <output name="targetout" value="perco_split_target.xml" />
		    <output name="decoyout" value="perco_split_decoy.xml" />
	    </test>
	    <test>
		    <param name="input" value="percolator.xml" />
		    <param name="splitter|splittype" value="header" />
		    <repeat name="splitter|headers">
			    <param name="pattern" value="^COSMIC" />
		    </repeat>
		    <repeat name="splitter|headers">
			    <param name="pattern" value="^FAKE" />
		    </repeat>
		    <output_collection name="headerout" type="list">
			    <element name="percolator.xml_COSMIC.xml" file="perco_split_cosmic.xml"/>
			    <element name="percolator.xml_FAKE.xml" file="perco_split_fake.xml"/>
		    </output_collection>
	    </test>
    </tests>
    
  <help>
      Split percolator output into multiple files. Use target/decoy to split into a target and a decoy file, or protein header to
      define a number of protein header regexes to split into that number of percolator files containing PSMs and peptides
      matching to those headers.
  </help>
</tool>
