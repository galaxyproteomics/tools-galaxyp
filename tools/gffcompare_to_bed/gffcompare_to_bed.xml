<tool id="gffcompare_to_bed" name="Convert gffCompare annotated GTF to BED" version="0.2.1">
    <description>for StringTie results</description>
    <requirements>
        <requirement type="package" version="3.7">python</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python '$__tool_directory__/gffcompare_to_bed.py'  
        #if $class_codes:
            --class_code='$class_codes'
        #end if
        $input $output
    ]]></command>
    <inputs>
        <param name="input" type="data" format="gtf" label="GTF annotated by gffCompare"/>
        <param name="class_codes" type="select" display="checkboxes" multiple="true" optional="true" 
            label="filter gffCompare class_codes to convert" help="No selection implies no filtering">
            <option value="=">= : Complete match of intron chain</option>
            <option value="~">~ : Intron chain match or single-exon (gffcompare strict-match)</option>
            <option value="c">c : Contained</option>
            <option value="j">j : Potentially novel isoform (fragment): at least one splice junction is shared with a reference transcript</option>
            <option value="e">e : Single exon transfrag overlapping a reference exon and at least 10 bp of a reference intron, indicating a possible pre-mRNA fragment.</option>
            <option value="i">i : A transfrag falling entirely within a reference intron</option>
            <option value="o">o : Generic exonic overlap with a reference transcript</option>
            <option value="p">p : Possible polymerase run-on fragment (within 2Kbases of a reference transcript)</option>
            <option value="r">r : Repeat. Currently determined by looking at the soft-masked reference sequence and applied to transcripts where at least 50% of the bases are lower case</option>
            <option value="u">u : Unknown, intergenic transcript</option>
            <option value="x">x : Exonic overlap with reference on the opposite strand</option>
            <option value="s">s : An intron of the transfrag overlaps a reference intron on the opposite strand (likely due to read mapping errors)</option>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="bed" />
    </outputs>
    <tests>
        <test>
            <param name="input" value="gffcompare_annotated.gtf" ftype="gtf"/>
            <output name="output" file="gffcompare_output.bed"/>
        </test>
        <test>
            <param name="input" value="gffcompare_annotated.gtf" ftype="gtf"/>
            <param name="class_codes" value="j"/>
            <output name="output" file="gffcompare_output_j.bed"/>
        </test>
        <test>
            <param name="input" value="gffcompare_annotated.gtf" ftype="gtf"/>
            <param name="class_codes" value="j,e,i,p,u,x"/>
            <output name="output" file="gffcompare_output_jeipux.bed"/>
        </test>

    </tests>
    <help><![CDATA[
Convert a GFFCompare annotated GTF file to BED format.

A typical workflow:

.. image:: GTF2Bed_workflow.png
  :height: 308
  :width: 750

usage: gffcompare_to_bed.py [-h] [-C CLASS_CODE] [-v] [-d] input output

positional arguments:
  input                 GFFCompare annotated GTF file, (-) for stdin
  output                BED file, (-) for stdout

optional arguments:
  -h, --help            show this help message and exit
  -C CLASS_CODE, --class_code CLASS_CODE
                        Restrict output to gffcompare class codes
  -d, --debug           Debug

For class_code definitions see gffcompare documentation: 
http://ccb.jhu.edu/software/stringtie/gffcompare.shtml#transfrag-class-codes

    ]]></help>
    <citations>
        <citation type="doi">10.1038/nbt.1621</citation>
    </citations>
</tool>
